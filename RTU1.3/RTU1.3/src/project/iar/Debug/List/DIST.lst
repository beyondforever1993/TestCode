###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.6.4896/W32 for ARM      26/Mar/2017  12:36:32 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\wangfan2\桌面\RTU_1.2\HuaceApp\DIST.c                 #
#    Command line =  D:\wangfan2\桌面\RTU_1.2\HuaceApp\DIST.c -lCN            #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\List\ -o      #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\Obj\          #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5_2\arm\INC\c\DLib_Config_F #
#                    ull.h" -I D:\wangfan2\桌面\RTU_1.2\project\iar\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\ADC\ -I   #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RTC\ -I   #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\TILT\ -I  #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RDLevel\  #
#                    -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RS232\ #
#                     -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\OS-v2 #
#                    \ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\Vibr #
#                    ationString\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\ #
#                    ..\ucos2\uCOS-II\Ports\ARM-Cortex-M3\Generic\IAR\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\ucos2\uCOS-II #
#                    \Source\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\u #
#                    cos2\uC-LIB\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\ #
#                    ..\ucos2\uC-CPU\ -I D:\wangfan2\桌面\RTU_1.2\project\iar #
#                    \..\..\ucos2\uC-CPU\ARM-Cortex-M3\IAR\ -I                #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\cmsis\Drivers #
#                    \source\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\c #
#                    msis\Drivers\include\ -I D:\wangfan2\桌面\RTU_1.2\projec #
#                    t\iar\..\..\app\ -I D:\wangfan2\桌面\RTU_1.2\project\iar #
#                    \..\..\uC-Probe\Target\Plugins\uCOS-II\ -I               #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Demos\Intro\Workspaces\ -I                            #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Demos\Intro\Source\ -I D:\wangfan2\桌面\RTU_1.2\proje #
#                    ct\iar\..\..\uC-Probe\Target\Communication\Generic\Sourc #
#                    e\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Prob #
#                    e\Target\Communication\Generic\RS-232\Source\ -I         #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Communication\Generic\RS-232\Ports\NXP\LPC17xx\ -I    #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Communication\Generic\RS-232\OS\uCOS-II\ -I           #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\cmsis\Core\CM #
#                    3\CoreSupport\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\. #
#                    .\..\cmsis\Core\CM3\DeviceSupport\NXP\LPC177x_8x\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\ -I  #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\DEVI #
#                    CE_BT\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\Hua #
#                    ceApp\DEVICE_COM\ -I D:\wangfan2\桌面\RTU_1.2\project\ia #
#                    r\..\..\HuaceApp\DEVICE_GPRS\ -I                         #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\DEVI #
#                    CE_GPS\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\Hu #
#                    aceApp\DEVICE_RADIO\ -I D:\wangfan2\桌面\RTU_1.2\project #
#                    \iar\..\..\HuaceApp\iap\ -I                              #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\FatFs\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\USB\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\bsp\spi_flash #
#                    \ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp #
#                    \LED\ -On --use_c++_inline                               #
#    List file    =  D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\List\DIST.lst #
#    Object file  =  D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\Obj\DIST.o    #
#                                                                             #
#                                                                             #
###############################################################################

D:\wangfan2\桌面\RTU_1.2\HuaceApp\DIST.c
      1          /**************************Copyright (C) 2003-2014. All rights reserved*********************************
      2          **                                  上海华测导航科技有限公司
      3          **                                  http://www.huace.cn
      4          **                                  Email:support@huace.cn
      5          **
      6          **--------------文件信息--------------------------------------------------------------------------------
      7          **文   件   名: DIST.c
      8          **创   建   人: Z.X.F.
      9          **最后修改日期: 2015年04月14日
     10          **描        述: DIST
     11          ********************************************************************************************************/
     12          
     13          
     14          #include "includes.h"

   \                                 In section .text, align 2
   \   __intrinsic __nounwind __interwork __softfp void *memcpy(void *, void const *, size_t)
   \                     memcpy:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x0032             MOVS     R2,R6
   \   0000000A   0x0029             MOVS     R1,R5
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_memcpy
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xBD70             POP      {R4-R6,PC}       ;; return
     15          
     16          #define MAX_DIST_LENGTH 50 
     17          //static UINT8  MsgTmp_BD[MAX_BD_LENGTH];
     18          static unsigned char  MsgTmp_DIST[MAX_DIST_LENGTH];// 转发缓冲
     19          
     20          static unsigned char RecFlag = 0x00;
     21          static unsigned short  MsgLength;
     22          static unsigned short  RdSpTmp;
     23          

   \                                 In section .text, align 2, keep-with-next
     24          void SetDIST_INIT()
     25          {
   \                     SetDIST_INIT:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB09A             SUB      SP,SP,#+104
     26              char cmd_frq[50]   = "AT+MENU+52=10000\r\n";
   \   00000004   0xA80D             ADD      R0,SP,#+52
   \   00000006   0x....             LDR.N    R1,??DataTable3
   \   00000008   0x2234             MOVS     R2,#+52
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy4
     27              char cmd_write[50] = "AT+EEPROM=WRITE\r\n";
   \   0000000E   0xA800             ADD      R0,SP,#+0
   \   00000010   0x....             LDR.N    R1,??DataTable3_1
   \   00000012   0x2234             MOVS     R2,#+52
   \   00000014   0x.... 0x....      BL       __aeabi_memcpy4
     28              int  len;
     29          
     30              //MENU+52=H;M41u8
     31              
     32              len = strlen(cmd_frq);
   \   00000018   0xA80D             ADD      R0,SP,#+52
   \   0000001A   0x.... 0x....      BL       strlen
   \   0000001E   0x0004             MOVS     R4,R0
     33              SendOutHardware(PORT_ID_GPS, cmd_frq, len);
   \   00000020   0x0022             MOVS     R2,R4
   \   00000022   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000024   0xA90D             ADD      R1,SP,#+52
   \   00000026   0x2002             MOVS     R0,#+2
   \   00000028   0x.... 0x....      BL       SendOutHardware
     34              OSTimeDlyHMSM(0, 0, 0, 500);
   \   0000002C   0xF44F 0x73FA      MOV      R3,#+500
   \   00000030   0x2200             MOVS     R2,#+0
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x.... 0x....      BL       OSTimeDlyHMSM
     35             
     36              len = strlen(cmd_write);
   \   0000003A   0xA800             ADD      R0,SP,#+0
   \   0000003C   0x.... 0x....      BL       strlen
   \   00000040   0x0004             MOVS     R4,R0
     37              SendOutHardware(PORT_ID_GPS, cmd_write, len);
   \   00000042   0x0022             MOVS     R2,R4
   \   00000044   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000046   0xA900             ADD      R1,SP,#+0
   \   00000048   0x2002             MOVS     R0,#+2
   \   0000004A   0x.... 0x....      BL       SendOutHardware
     38              OSTimeDlyHMSM(0, 0, 0, 500);
   \   0000004E   0xF44F 0x73FA      MOV      R3,#+500
   \   00000052   0x2200             MOVS     R2,#+0
   \   00000054   0x2100             MOVS     R1,#+0
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x.... 0x....      BL       OSTimeDlyHMSM
     39          }
   \   0000005C   0xB01A             ADD      SP,SP,#+104
   \   0000005E   0xBD10             POP      {R4,PC}          ;; return
     40          
     41          
     42          
     43          
     44          //static uint32_t 
     45          

   \                                 In section .text, align 2, keep-with-next
     46          void dist_init(void)
     47          {
   \                     dist_init:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB085             SUB      SP,SP,#+20
     48            char cmd[] = "AT+MENU+52=\r\n";
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x....             LDR.N    R1,??DataTable3_2
   \   00000008   0x2210             MOVS     R2,#+16
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy4
     49            
     50            GPIO_OutputValue(RS485_OE_PORT,RS485_OE_PIN,1);
   \   0000000E   0x2201             MOVS     R2,#+1
   \   00000010   0xF45F 0x2100      MOVS     R1,#+524288
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x.... 0x....      BL       GPIO_OutputValue
     51            
     52            SendOutHardware(DIST_PORT_ID, cmd, strlen(cmd));
   \   0000001A   0xA800             ADD      R0,SP,#+0
   \   0000001C   0x.... 0x....      BL       strlen
   \   00000020   0x0002             MOVS     R2,R0
   \   00000022   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000024   0xA900             ADD      R1,SP,#+0
   \   00000026   0x2002             MOVS     R0,#+2
   \   00000028   0x.... 0x....      BL       SendOutHardware
     53            
     54            OSTimeDly(10);//50ms
   \   0000002C   0x200A             MOVS     R0,#+10
   \   0000002E   0x.... 0x....      BL       OSTimeDly
     55            
     56            GPIO_OutputValue(RS485_OE_PORT,RS485_OE_PIN,0);
   \   00000032   0x2200             MOVS     R2,#+0
   \   00000034   0xF45F 0x2100      MOVS     R1,#+524288
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0x.... 0x....      BL       GPIO_OutputValue
     57            
     58            OSTimeDlyHMSM(0,0,0,500);//500ms
   \   0000003E   0xF44F 0x73FA      MOV      R3,#+500
   \   00000042   0x2200             MOVS     R2,#+0
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x.... 0x....      BL       OSTimeDlyHMSM
     59            
     60            dist_quiry(1);
   \   0000004C   0x2001             MOVS     R0,#+1
   \   0000004E   0x.... 0x....      BL       dist_quiry
     61          }
   \   00000052   0xB005             ADD      SP,SP,#+20
   \   00000054   0xBD00             POP      {PC}             ;; return
     62          

   \                                 In section .rodata, align 4
     63          const uint8_t dist_cmd1[] = {0x01,0x03,0x00,0x00,0x00,0x02,0xC4,0x0B};
   \                     dist_cmd1:
   \   00000000   0x01 0x03          DC8 1, 3, 0, 0, 0, 2, 196, 11
   \              0x00 0x00    
   \              0x00 0x02    
   \              0xC4 0x0B    

   \                                 In section .rodata, align 4
     64          const uint8_t dist_cmd2[] = {0x02,0x03,0x00,0x00,0x00,0x02,0xC4,0x38};
   \                     dist_cmd2:
   \   00000000   0x02 0x03          DC8 2, 3, 0, 0, 0, 2, 196, 56
   \              0x00 0x00    
   \              0x00 0x02    
   \              0xC4 0x38    

   \                                 In section .rodata, align 4
     65          const uint8_t dist_cmd3[] = {0x03,0x03,0x00,0x00,0x00,0x02,0xC5,0xE9};
   \                     dist_cmd3:
   \   00000000   0x03 0x03          DC8 3, 3, 0, 0, 0, 2, 197, 233
   \              0x00 0x00    
   \              0x00 0x02    
   \              0xC5 0xE9    
     66          

   \                                 In section .text, align 2, keep-with-next
     67          void dist_quiry(uint32_t addr)
     68          {
   \                     dist_quiry:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
     69            const uint8_t * p_cmd;
     70            
     71            if(addr == 1)
   \   00000004   0x2C01             CMP      R4,#+1
   \   00000006   0xD102             BNE.N    ??dist_quiry_0
     72            {
     73              p_cmd = dist_cmd1;
   \   00000008   0x....             LDR.N    R0,??DataTable3_3
   \   0000000A   0x0005             MOVS     R5,R0
   \   0000000C   0xE00A             B.N      ??dist_quiry_1
     74            }
     75            else if( addr == 2)
   \                     ??dist_quiry_0:
   \   0000000E   0x2C02             CMP      R4,#+2
   \   00000010   0xD102             BNE.N    ??dist_quiry_2
     76            {
     77              p_cmd = dist_cmd2;
   \   00000012   0x....             LDR.N    R0,??DataTable3_4
   \   00000014   0x0005             MOVS     R5,R0
   \   00000016   0xE005             B.N      ??dist_quiry_1
     78            }
     79            else if( addr == 3)
   \                     ??dist_quiry_2:
   \   00000018   0x2C03             CMP      R4,#+3
   \   0000001A   0xD102             BNE.N    ??dist_quiry_3
     80            {
     81              p_cmd = dist_cmd3;
   \   0000001C   0x....             LDR.N    R0,??DataTable3_5
   \   0000001E   0x0005             MOVS     R5,R0
   \   00000020   0xE000             B.N      ??dist_quiry_1
     82            }
     83            else 
     84            {
     85              return;
   \                     ??dist_quiry_3:
   \   00000022   0xE01C             B.N      ??dist_quiry_4
     86            }
     87            
     88            GPIO_OutputValue(RS485_OE_PORT,RS485_OE_PIN,1);
   \                     ??dist_quiry_1:
   \   00000024   0x2201             MOVS     R2,#+1
   \   00000026   0xF45F 0x2100      MOVS     R1,#+524288
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       GPIO_OutputValue
     89            
     90            SendOutHardware(DIST_PORT_ID, (uint8_t *)p_cmd, 8);
   \   00000030   0x2208             MOVS     R2,#+8
   \   00000032   0x0029             MOVS     R1,R5
   \   00000034   0x2002             MOVS     R0,#+2
   \   00000036   0x.... 0x....      BL       SendOutHardware
     91          
     92            while( CmcCommandEmpty_gps == FALSE);
   \                     ??dist_quiry_5:
   \   0000003A   0x....             LDR.N    R0,??DataTable3_6
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD0FB             BEQ.N    ??dist_quiry_5
     93          
     94            //OSTimeDly(1);//5ms
     95            int i ;
     96            for( i = 0; i < 2000;i ++)
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x0006             MOVS     R6,R0
   \                     ??dist_quiry_6:
   \   00000046   0xF5B6 0x6FFA      CMP      R6,#+2000
   \   0000004A   0xDA02             BGE.N    ??dist_quiry_7
     97            {
     98              i++;
   \   0000004C   0x1C76             ADDS     R6,R6,#+1
     99            }
   \   0000004E   0x1C76             ADDS     R6,R6,#+1
   \   00000050   0xE7F9             B.N      ??dist_quiry_6
    100            
    101            GPIO_OutputValue(RS485_OE_PORT,RS485_OE_PIN,0);
   \                     ??dist_quiry_7:
   \   00000052   0x2200             MOVS     R2,#+0
   \   00000054   0xF45F 0x2100      MOVS     R1,#+524288
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0x.... 0x....      BL       GPIO_OutputValue
    102          }
   \                     ??dist_quiry_4:
   \   0000005E   0xBD70             POP      {R4-R6,PC}       ;; return
    103           

   \                                 In section .text, align 2, keep-with-next
    104          void dist_process(uint8_t * p_pkg,uint32_t len,uint8_t flag)
    105          {
   \                     dist_process:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB091             SUB      SP,SP,#+68
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
   \   0000000A   0x0016             MOVS     R6,R2
    106            uint8_t dist_addr;
    107            uint32_t dist_int;
    108            
    109            float dist_val;
    110            
    111            /** CRC16 校验: TODO  **/
    112            
    113            /** 现在只做长度检查^_^ **/
    114            if( len != (*(p_pkg + 2) + 5))
   \   0000000C   0x78A0             LDRB     R0,[R4, #+2]
   \   0000000E   0x1D40             ADDS     R0,R0,#+5
   \   00000010   0x4285             CMP      R5,R0
   \   00000012   0xF040 0x8081      BNE.W    ??dist_process_0
    115              return ;
    116            
    117            /** 状态灯 **/
    118            
    119            g_RtuStatus.led_dwload = 1;
   \                     ??dist_process_1:
   \   00000016   0x....             LDR.N    R0,??DataTable3_7
   \   00000018   0x2101             MOVS     R1,#+1
   \   0000001A   0xF880 0x1037      STRB     R1,[R0, #+55]
    120            
    121            g_RtuStatus.dist = 1;//传感器OK
   \   0000001E   0x....             LDR.N    R0,??DataTable3_7
   \   00000020   0x2101             MOVS     R1,#+1
   \   00000022   0x72C1             STRB     R1,[R0, #+11]
    122            
    123              
    124            /** 数据保存 **/
    125            
    126            struct DATA_STRUCT dat;
    127            
    128            dat.type = 1;
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0xF88D 0x0013      STRB     R0,[SP, #+19]
    129            
    130            dist_addr = *p_pkg;
   \   0000002A   0x7820             LDRB     R0,[R4, #+0]
   \   0000002C   0x0007             MOVS     R7,R0
    131            
    132            dist_int =(((*(p_pkg+3)) << 24)|((*(p_pkg+4)) << 16)|\
    133              ((*(p_pkg+5)) << 8)|((*(p_pkg+6)) << 0));
   \   0000002E   0x78E0             LDRB     R0,[R4, #+3]
   \   00000030   0x7921             LDRB     R1,[R4, #+4]
   \   00000032   0x0409             LSLS     R1,R1,#+16
   \   00000034   0xEA51 0x6000      ORRS     R0,R1,R0, LSL #+24
   \   00000038   0x7961             LDRB     R1,[R4, #+5]
   \   0000003A   0xEA50 0x2001      ORRS     R0,R0,R1, LSL #+8
   \   0000003E   0x79A1             LDRB     R1,[R4, #+6]
   \   00000040   0x4308             ORRS     R0,R1,R0
   \   00000042   0x4680             MOV      R8,R0
    134            
    135            dist_val = *(float *)(&dist_int);
   \   00000044   0x46C1             MOV      R9,R8
    136            
    137            dist_val = rs485_para.para0 + rs485_para.para1 * dist_val;
   \   00000046   0x....             LDR.N    R0,??DataTable3_8
   \   00000048   0x6940             LDR      R0,[R0, #+20]
   \   0000004A   0x4649             MOV      R1,R9
   \   0000004C   0x.... 0x....      BL       __aeabi_fmul
   \   00000050   0x....             LDR.N    R1,??DataTable3_8
   \   00000052   0x6909             LDR      R1,[R1, #+16]
   \   00000054   0x.... 0x....      BL       __aeabi_fadd
   \   00000058   0x4681             MOV      R9,R0
    138            
    139            sprintf(rs485_para.data,"%s,%d,%c%d.%03d",rs485_para.sname,dist_addr+80,dist_val > 0?' ':'-',abs(dist_val),abs(dist_val * 1000)%1000);
   \   0000005A   0x....             LDR.N    R0,??DataTable3_9  ;; 0x447a0000
   \   0000005C   0x4649             MOV      R1,R9
   \   0000005E   0x.... 0x....      BL       __aeabi_fmul
   \   00000062   0x.... 0x....      BL       __aeabi_f2iz
   \   00000066   0x.... 0x....      BL       abs
   \   0000006A   0x4682             MOV      R10,R0
   \   0000006C   0xF44F 0x7B7A      MOV      R11,#+1000
   \   00000070   0x4648             MOV      R0,R9
   \   00000072   0x.... 0x....      BL       __aeabi_f2iz
   \   00000076   0x.... 0x....      BL       abs
   \   0000007A   0x0002             MOVS     R2,R0
   \   0000007C   0x4648             MOV      R0,R9
   \   0000007E   0x2100             MOVS     R1,#+0
   \   00000080   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000084   0xD201             BCS.N    ??dist_process_2
   \   00000086   0x2020             MOVS     R0,#+32
   \   00000088   0xE000             B.N      ??dist_process_3
   \                     ??dist_process_2:
   \   0000008A   0x202D             MOVS     R0,#+45
   \                     ??dist_process_3:
   \   0000008C   0xFB9A 0xF1FB      SDIV     R1,R10,R11
   \   00000090   0xFB0B 0xA111      MLS      R1,R11,R1,R10
   \   00000094   0x9102             STR      R1,[SP, #+8]
   \   00000096   0x9201             STR      R2,[SP, #+4]
   \   00000098   0x9000             STR      R0,[SP, #+0]
   \   0000009A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000009C   0xF117 0x0350      ADDS     R3,R7,#+80
   \   000000A0   0x....             LDR.N    R2,??DataTable3_10
   \   000000A2   0x....             LDR.N    R1,??DataTable3_11
   \   000000A4   0x....             LDR.N    R0,??DataTable3_12
   \   000000A6   0x.... 0x....      BL       sprintf
    140            
    141            if( flag == 1)
   \   000000AA   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000AC   0x2E01             CMP      R6,#+1
   \   000000AE   0xD133             BNE.N    ??dist_process_4
    142            {
    143              struct TIME_STRUCT time_now;
    144              
    145              rtc_get_time(&time_now);
   \   000000B0   0xA800             ADD      R0,SP,#+0
   \   000000B2   0x.... 0x....      BL       rtc_get_time
    146              
    147              if((time_now.y < 2015) || (time_now.y > 2100))
   \   000000B6   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   000000BA   0xF240 0x71DF      MOVW     R1,#+2015
   \   000000BE   0x4288             CMP      R0,R1
   \   000000C0   0xDB05             BLT.N    ??dist_process_5
   \   000000C2   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   000000C6   0xF640 0x0135      MOVW     R1,#+2101
   \   000000CA   0x4288             CMP      R0,R1
   \   000000CC   0xDB00             BLT.N    ??dist_process_6
    148              {
    149                return;
   \                     ??dist_process_5:
   \   000000CE   0xE023             B.N      ??dist_process_0
    150              }
    151              
    152              dat.y = time_now.y;
   \                     ??dist_process_6:
   \   000000D0   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   000000D4   0xF8AD 0x000C      STRH     R0,[SP, #+12]
    153              dat.m = time_now.m;
   \   000000D8   0xF89D 0x0002      LDRB     R0,[SP, #+2]
   \   000000DC   0xF88D 0x000E      STRB     R0,[SP, #+14]
    154              dat.d = time_now.d;
   \   000000E0   0xF89D 0x0003      LDRB     R0,[SP, #+3]
   \   000000E4   0xF88D 0x000F      STRB     R0,[SP, #+15]
    155              dat.H = time_now.H;
   \   000000E8   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   000000EC   0xF88D 0x0010      STRB     R0,[SP, #+16]
    156              dat.M = time_now.M;
   \   000000F0   0xF89D 0x0005      LDRB     R0,[SP, #+5]
   \   000000F4   0xF88D 0x0011      STRB     R0,[SP, #+17]
    157              dat.S = time_now.S;
   \   000000F8   0xF89D 0x0006      LDRB     R0,[SP, #+6]
   \   000000FC   0xF88D 0x0012      STRB     R0,[SP, #+18]
    158              
    159              memcpy(dat.data,rs485_para.data,sizeof(dat.data));
   \   00000100   0x222A             MOVS     R2,#+42
   \   00000102   0x....             LDR.N    R1,??DataTable3_12
   \   00000104   0xA805             ADD      R0,SP,#+20
   \   00000106   0x.... 0x....      BL       memcpy
    160              
    161              g_RtuStatus.led_dwload = 1;
   \   0000010A   0x....             LDR.N    R0,??DataTable3_7
   \   0000010C   0x2101             MOVS     R1,#+1
   \   0000010E   0xF880 0x1037      STRB     R1,[R0, #+55]
    162              file_write(&dat);
   \   00000112   0xA803             ADD      R0,SP,#+12
   \   00000114   0x.... 0x....      BL       file_write
    163            }
    164          }
   \                     ??dist_process_4:
   \                     ??dist_process_0:
   \   00000118   0xB011             ADD      SP,SP,#+68
   \   0000011A   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     `?<Constant "AT+MENU+52=10000\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     `?<Constant "AT+EEPROM=WRITE\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     `?<Constant "AT+MENU+52=\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     dist_cmd1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     dist_cmd2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     dist_cmd3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     CmcCommandEmpty_gps

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     g_RtuStatus

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     rs485_para

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x447A0000         DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     rs485_para+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     `?<Constant "%s,%d,%c%d.%03d">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     rs485_para+0x35

   \                                 In section .rodata, align 4
   \                     `?<Constant "AT+MENU+52=10000\\r\\n">`:
   \   00000000   0x41 0x54          DC8 "AT+MENU+52=10000\015\012"
   \              0x2B 0x4D    
   \              0x45 0x4E    
   \              0x55 0x2B    
   \              0x35 0x32    
   \              0x3D 0x31    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x0D 0x0A    
   \              0x00         
   \   00000013   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000023   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "AT+EEPROM=WRITE\\r\\n">`:
   \   00000000   0x41 0x54          DC8 "AT+EEPROM=WRITE\015\012"
   \              0x2B 0x45    
   \              0x45 0x50    
   \              0x52 0x4F    
   \              0x4D 0x3D    
   \              0x57 0x52    
   \              0x49 0x54    
   \              0x45 0x0D    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000022   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "AT+MENU+52=\\r\\n">`:
   \   00000000   0x41 0x54          DC8 "AT+MENU+52=\015\012"
   \              0x2B 0x4D    
   \              0x45 0x4E    
   \              0x55 0x2B    
   \              0x35 0x32    
   \              0x3D 0x0D    
   \              0x0A 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "%s,%d,%c%d.%03d">`:
   \   00000000   0x25 0x73          DC8 "%s,%d,%c%d.%03d"
   \              0x2C 0x25    
   \              0x64 0x2C    
   \              0x25 0x63    
   \              0x25 0x64    
   \              0x2E 0x25    
   \              0x30 0x33    
   \              0x64 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     112   SetDIST_INIT
       112   -> OSTimeDlyHMSM
       112   -> SendOutHardware
       112   -> __aeabi_memcpy4
       112   -> strlen
      24   dist_init
        24   -> GPIO_OutputValue
        24   -> OSTimeDly
        24   -> OSTimeDlyHMSM
        24   -> SendOutHardware
        24   -> __aeabi_memcpy4
        24   -> dist_quiry
        24   -> strlen
     104   dist_process
       104   -> __aeabi_cfrcmple
       104   -> __aeabi_f2iz
       104   -> __aeabi_fadd
       104   -> __aeabi_fmul
       104   -> abs
       104   -> file_write
       104   -> memcpy
       104   -> rtc_get_time
       104   -> sprintf
      16   dist_quiry
        16   -> GPIO_OutputValue
        16   -> SendOutHardware
      16   memcpy
        16   -> __aeabi_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      16  ?<Constant "%s,%d,%c%d.%03d">
      52  ?<Constant "AT+EEPROM=WRITE\r\n">
      52  ?<Constant "AT+MENU+52=10000\r\n">
      16  ?<Constant "AT+MENU+52=\r\n">
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      96  SetDIST_INIT
       8  dist_cmd1
       8  dist_cmd2
       8  dist_cmd3
      86  dist_init
     286  dist_process
      96  dist_quiry
      22  memcpy

 
 160 bytes in section .rodata
 638 bytes in section .text
 
 616 bytes of CODE  memory (+ 22 bytes shared)
 160 bytes of CONST memory

Errors: none
Warnings: 10
