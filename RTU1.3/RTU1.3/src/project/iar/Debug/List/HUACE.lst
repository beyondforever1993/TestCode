###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.6.4896/W32 for ARM      26/Mar/2017  12:37:43 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\wangfan2\桌面\RTU_1.2\HuaceApp\HUACE.c                #
#    Command line =  D:\wangfan2\桌面\RTU_1.2\HuaceApp\HUACE.c -lCN           #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\List\ -o      #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\Obj\          #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5_2\arm\INC\c\DLib_Config_F #
#                    ull.h" -I D:\wangfan2\桌面\RTU_1.2\project\iar\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\ADC\ -I   #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RTC\ -I   #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\TILT\ -I  #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RDLevel\  #
#                    -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RS232\ #
#                     -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\OS-v2 #
#                    \ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\Vibr #
#                    ationString\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\ #
#                    ..\ucos2\uCOS-II\Ports\ARM-Cortex-M3\Generic\IAR\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\ucos2\uCOS-II #
#                    \Source\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\u #
#                    cos2\uC-LIB\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\ #
#                    ..\ucos2\uC-CPU\ -I D:\wangfan2\桌面\RTU_1.2\project\iar #
#                    \..\..\ucos2\uC-CPU\ARM-Cortex-M3\IAR\ -I                #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\cmsis\Drivers #
#                    \source\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\c #
#                    msis\Drivers\include\ -I D:\wangfan2\桌面\RTU_1.2\projec #
#                    t\iar\..\..\app\ -I D:\wangfan2\桌面\RTU_1.2\project\iar #
#                    \..\..\uC-Probe\Target\Plugins\uCOS-II\ -I               #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Demos\Intro\Workspaces\ -I                            #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Demos\Intro\Source\ -I D:\wangfan2\桌面\RTU_1.2\proje #
#                    ct\iar\..\..\uC-Probe\Target\Communication\Generic\Sourc #
#                    e\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Prob #
#                    e\Target\Communication\Generic\RS-232\Source\ -I         #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Communication\Generic\RS-232\Ports\NXP\LPC17xx\ -I    #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Communication\Generic\RS-232\OS\uCOS-II\ -I           #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\cmsis\Core\CM #
#                    3\CoreSupport\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\. #
#                    .\..\cmsis\Core\CM3\DeviceSupport\NXP\LPC177x_8x\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\ -I  #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\DEVI #
#                    CE_BT\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\Hua #
#                    ceApp\DEVICE_COM\ -I D:\wangfan2\桌面\RTU_1.2\project\ia #
#                    r\..\..\HuaceApp\DEVICE_GPRS\ -I                         #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\DEVI #
#                    CE_GPS\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\Hu #
#                    aceApp\DEVICE_RADIO\ -I D:\wangfan2\桌面\RTU_1.2\project #
#                    \iar\..\..\HuaceApp\iap\ -I                              #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\FatFs\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\USB\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\bsp\spi_flash #
#                    \ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp #
#                    \LED\ -On --use_c++_inline                               #
#    List file    =  D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\List\HUACE.ls #
#                    t                                                        #
#    Object file  =  D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\Obj\HUACE.o   #
#                                                                             #
#                                                                             #
###############################################################################

D:\wangfan2\桌面\RTU_1.2\HuaceApp\HUACE.c
      1          /**************************Copyright (C) 2003-2014. All rights reserved*********************************
      2          **                                  上海华测导航科技有限公司
      3          **                                  http://www.huace.cn
      4          **                                  Email:support@huace.cn
      5          **
      6          **--------------文件信息--------------------------------------------------------------------------------
      7          **文   件   名: HUACE.c
      8          **创   建   人:
      9          **最后修改日期: 2014年08月12日
     10          **描        述: 处理华测协议命令
     11          ********************************************************************************************************/
     12          
     13          #include "includes.h"

   \                                 In section .text, align 2
   \   __intrinsic __nounwind __interwork __softfp void *memcpy(void *, void const *, size_t)
   \                     memcpy:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x0032             MOVS     R2,R6
   \   0000000A   0x0029             MOVS     R1,R5
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_memcpy
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2
   \   __intrinsic __nounwind __interwork __softfp void *memset(void *, int, size_t)
   \                     memset:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x002A             MOVS     R2,R5
   \   0000000A   0x0031             MOVS     R1,R6
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_memset
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_SystemReset(void)
   \                     NVIC_SystemReset:
   \   00000000   0xF3BF 0x8F4F      DSB      
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0xe000ed0c
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF410 0x60E0      ANDS     R0,R0,#0x700
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable3_1  ;; 0x5fa0004
   \   00000012   0x4308             ORRS     R0,R1,R0
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable3  ;; 0xe000ed0c
   \   00000018   0x6008             STR      R0,[R1, #+0]
   \   0000001A   0xF3BF 0x8F4F      DSB      
   \                     ??NVIC_SystemReset_0:
   \   0000001E   0xE7FE             B.N      ??NVIC_SystemReset_0
     14          #include "USB_MMC.h"
     15          #include "iap.h"
     16          //static unsigned char RecFlag = 0x00;
     17          //static unsigned short  MsgLength;
     18          //static unsigned short  RdSpTmp;
     19          
     20          //static void ProcessMsg_HUACE(unsigned char *pMsg, unsigned short Length);
     21          static char CheckMsgSum(unsigned char* buff, char ComLen);
     22          
     23          void Uart_Init(UINT8 id, UINT8 rateT);
     24          extern unsigned char g_bModuleRestartFlag;

   \                                 In section .bss, align 4
     25          unsigned char Gps_name[20];
   \                     Gps_name:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     26          unsigned char RTK_angle[70];
   \                     RTK_angle:
   \   00000000                      DS8 72

   \                                 In section .bss, align 1
     27          unsigned char RTK_angle_half = 0;
   \                     RTK_angle_half:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     28          unsigned char static_set = 0;
   \                     static_set:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     29          unsigned char NMEA_set = 0;
   \                     NMEA_set:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
     30          char rtkSource = 0x20;//Z.X.F. 20121228 //edit 2013.02.22
   \                     rtkSource:
   \   00000000   0x20               DC8 32

   \                                 In section .data, align 1
     31          UINT8  sensor_frq = 8;
   \                     sensor_frq:
   \   00000000   0x08               DC8 8

   \                                 In section .bss, align 1
     32          UINT8 calibration_en = 0;
   \                     calibration_en:
   \   00000000                      DS8 1
     33          
     34          #define USER_START_SECTOR				0x00050000
     35          #define	IMG_START_SECTOR				0x00050000			/* Address of Sector 16 */
     36          #define	IMG_END_SECTOR					0x00077FFF			/* Address of Sector 28 Modify by hefaqiang 20130711*/
     37          #define IMG_START_SECTOR_NUM		(((USER_START_SECTOR-0x10000)/0x8000)+16)//			
     38          #define	IMG_END_SECTOR_NUM		28					
     39          /*EEPROM*/
     40          #define PAGE_OFFSET			0x00   //0x10
     41          #define PAGE_ADDR			0x01
     42          /* Size of packet payloads and header */
     43          #define LONG_PACKET_PAYLOAD_LEN		256//1024
     44          #define SHORT_PACKET_PAYLOAD_LEN	128
     45          #define EEPROM_BLOCK_SIZE					64		//ò?′??áμ?×??ú  by hefa880
     46          /* Buffer in which received data is stored, must be aligned on a word boundary
     47          as point to this array is going to be passed to IAP routines (which require
     48          word alignment). */
     49          static uint8_t au8RxBuffer[LONG_PACKET_PAYLOAD_LEN];
     50          static uint32_t received_data = 0;

   \                                 In section .data, align 4
     51          unsigned int g_SetRTCCount = RTCSETTIME;
   \                     g_SetRTCCount:
   \   00000000   0x00001C20         DC32 7200
     52          
     53          
     54          extern void bd_uart_init();
     55          

   \                                 In section .text, align 2, keep-with-next
     56          void ProcessData_HUACE(unsigned char *DatBuf, unsigned short *RdSp, unsigned short WrSp, struct HC_MSG *HcMsg)
     57          {
   \                     ProcessData_HUACE:
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB0B3             SUB      SP,SP,#+204
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
   \   0000000A   0x0016             MOVS     R6,R2
   \   0000000C   0x001F             MOVS     R7,R3
     58            unsigned char  ch;
     59            unsigned short   i;
     60            unsigned char  HuaceMsgTmp[MAX_HUACE_LENGTH];// 转发缓冲
     61            if(WrSp != *RdSp)
   \   0000000E   0x8828             LDRH     R0,[R5, #+0]
   \   00000010   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000012   0x4286             CMP      R6,R0
   \   00000014   0xF000 0x8109      BEQ.W    ??ProcessData_HUACE_0
     62            {
     63              if( (HcMsg->RecFlag == 0x94) || (HcMsg->RecFlag == 0x84) )   //收到huace协议头
   \   00000018   0x7838             LDRB     R0,[R7, #+0]
   \   0000001A   0x2894             CMP      R0,#+148
   \   0000001C   0xD003             BEQ.N    ??ProcessData_HUACE_1
   \   0000001E   0x7838             LDRB     R0,[R7, #+0]
   \   00000020   0x2884             CMP      R0,#+132
   \   00000022   0xF040 0x80B0      BNE.W    ??ProcessData_HUACE_2
     64              {		
     65                while(*RdSp != WrSp)
   \                     ??ProcessData_HUACE_1:
   \   00000026   0x8828             LDRH     R0,[R5, #+0]
   \   00000028   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000002A   0x42B0             CMP      R0,R6
   \   0000002C   0xF000 0x80AA      BEQ.W    ??ProcessData_HUACE_3
     66                {
     67                  ch = DatBuf[*RdSp];
   \   00000030   0x8828             LDRH     R0,[R5, #+0]
   \   00000032   0x5D00             LDRB     R0,[R0, R4]
   \   00000034   0x4680             MOV      R8,R0
     68                  INCREASE_POINTER(*RdSp);	
   \   00000036   0x8828             LDRH     R0,[R5, #+0]
   \   00000038   0x1C40             ADDS     R0,R0,#+1
   \   0000003A   0x8028             STRH     R0,[R5, #+0]
   \   0000003C   0x8828             LDRH     R0,[R5, #+0]
   \   0000003E   0xF44F 0x6100      MOV      R1,#+2048
   \   00000042   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000046   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   0000004A   0x802A             STRH     R2,[R5, #+0]
     69                  
     70                  if(ch == '\n')
   \   0000004C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000050   0xF1B8 0x0F0A      CMP      R8,#+10
   \   00000054   0xD1E7             BNE.N    ??ProcessData_HUACE_1
     71                  {
     72                    if(HcMsg->RecFlag == 0x84)
   \   00000056   0x7838             LDRB     R0,[R7, #+0]
   \   00000058   0x2884             CMP      R0,#+132
   \   0000005A   0xD10B             BNE.N    ??ProcessData_HUACE_4
     73                    {
     74                      if(HcMsg->RdSpTmp >= 2)
   \   0000005C   0x88B8             LDRH     R0,[R7, #+4]
   \   0000005E   0x2802             CMP      R0,#+2
   \   00000060   0xDB03             BLT.N    ??ProcessData_HUACE_5
     75                        HcMsg->RdSpTmp -=2;
   \   00000062   0x88B8             LDRH     R0,[R7, #+4]
   \   00000064   0x1E80             SUBS     R0,R0,#+2
   \   00000066   0x80B8             STRH     R0,[R7, #+4]
   \   00000068   0xE00F             B.N      ??ProcessData_HUACE_6
     76                      else
     77                        HcMsg->RdSpTmp = HcMsg->RdSpTmp + DATA_BUF_NUM - 2;
   \                     ??ProcessData_HUACE_5:
   \   0000006A   0x88B8             LDRH     R0,[R7, #+4]
   \   0000006C   0xF200 0x70FE      ADDW     R0,R0,#+2046
   \   00000070   0x80B8             STRH     R0,[R7, #+4]
   \   00000072   0xE00A             B.N      ??ProcessData_HUACE_6
     78                    }
     79                    else
     80                    {//0x94
     81                      if(HcMsg->RdSpTmp >= 2)
   \                     ??ProcessData_HUACE_4:
   \   00000074   0x88B8             LDRH     R0,[R7, #+4]
   \   00000076   0x2802             CMP      R0,#+2
   \   00000078   0xDB03             BLT.N    ??ProcessData_HUACE_7
     82                        HcMsg->RdSpTmp -=2;
   \   0000007A   0x88B8             LDRH     R0,[R7, #+4]
   \   0000007C   0x1E80             SUBS     R0,R0,#+2
   \   0000007E   0x80B8             STRH     R0,[R7, #+4]
   \   00000080   0xE003             B.N      ??ProcessData_HUACE_6
     83                      else
     84                        HcMsg->RdSpTmp = HcMsg->RdSpTmp + DATA_BUF_NUM - 2;
   \                     ??ProcessData_HUACE_7:
   \   00000082   0x88B8             LDRH     R0,[R7, #+4]
   \   00000084   0xF200 0x70FE      ADDW     R0,R0,#+2046
   \   00000088   0x80B8             STRH     R0,[R7, #+4]
     85                    }
     86                    
     87                    if(*RdSp >= HcMsg->RdSpTmp)
   \                     ??ProcessData_HUACE_6:
   \   0000008A   0x8828             LDRH     R0,[R5, #+0]
   \   0000008C   0x88B9             LDRH     R1,[R7, #+4]
   \   0000008E   0x4288             CMP      R0,R1
   \   00000090   0xD304             BCC.N    ??ProcessData_HUACE_8
     88                      HcMsg->MsgLength = *RdSp - HcMsg->RdSpTmp ;
   \   00000092   0x8828             LDRH     R0,[R5, #+0]
   \   00000094   0x88B9             LDRH     R1,[R7, #+4]
   \   00000096   0x1A40             SUBS     R0,R0,R1
   \   00000098   0x8078             STRH     R0,[R7, #+2]
   \   0000009A   0xE005             B.N      ??ProcessData_HUACE_9
     89                    else
     90                      HcMsg->MsgLength = *RdSp + DATA_BUF_NUM - HcMsg->RdSpTmp ;
   \                     ??ProcessData_HUACE_8:
   \   0000009C   0x8828             LDRH     R0,[R5, #+0]
   \   0000009E   0xF510 0x6000      ADDS     R0,R0,#+2048
   \   000000A2   0x88B9             LDRH     R1,[R7, #+4]
   \   000000A4   0x1A40             SUBS     R0,R0,R1
   \   000000A6   0x8078             STRH     R0,[R7, #+2]
     91                    
     92                    if(HcMsg->MsgLength > MAX_HUACE_LENGTH)
   \                     ??ProcessData_HUACE_9:
   \   000000A8   0x8878             LDRH     R0,[R7, #+2]
   \   000000AA   0x28C9             CMP      R0,#+201
   \   000000AC   0xDB34             BLT.N    ??ProcessData_HUACE_10
     93                    {
     94          			if(g_Debug.HcMsg)
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000000B2   0x7900             LDRB     R0,[R0, #+4]
   \   000000B4   0x2800             CMP      R0,#+0
   \   000000B6   0xD028             BEQ.N    ??ProcessData_HUACE_11
     95          			{
     96          				for(i=0; i<HcMsg->MsgLength; i++)
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x4681             MOV      R9,R0
   \                     ??ProcessData_HUACE_12:
   \   000000BC   0x8878             LDRH     R0,[R7, #+2]
   \   000000BE   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000000C2   0x4581             CMP      R9,R0
   \   000000C4   0xD214             BCS.N    ??ProcessData_HUACE_13
     97          				{
     98          				  HuaceMsgTmp[i] = DatBuf[HcMsg->RdSpTmp];
   \   000000C6   0x88B8             LDRH     R0,[R7, #+4]
   \   000000C8   0x5D00             LDRB     R0,[R0, R4]
   \   000000CA   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000000CE   0xA900             ADD      R1,SP,#+0
   \   000000D0   0xF809 0x0001      STRB     R0,[R9, R1]
     99          				  INCREASE_POINTER(HcMsg->RdSpTmp);
   \   000000D4   0x88B8             LDRH     R0,[R7, #+4]
   \   000000D6   0x1C40             ADDS     R0,R0,#+1
   \   000000D8   0x80B8             STRH     R0,[R7, #+4]
   \   000000DA   0x88B8             LDRH     R0,[R7, #+4]
   \   000000DC   0xF44F 0x6100      MOV      R1,#+2048
   \   000000E0   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000E4   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   000000E8   0x80BA             STRH     R2,[R7, #+4]
    100          				}
   \   000000EA   0xF119 0x0901      ADDS     R9,R9,#+1
   \   000000EE   0xE7E5             B.N      ??ProcessData_HUACE_12
    101          				DebugMsg("********\r\n");
   \                     ??ProcessData_HUACE_13:
   \   000000F0   0x.... 0x....      LDR.W    R0,??ProcessMsg_HUACE_0+0x8
   \   000000F4   0x.... 0x....      BL       DebugMsg
    102          				SendOutHardware(PORT_ID_COM, (UINT8*)HuaceMsgTmp, HcMsg->MsgLength);
   \   000000F8   0x887A             LDRH     R2,[R7, #+2]
   \   000000FA   0xA900             ADD      R1,SP,#+0
   \   000000FC   0x2000             MOVS     R0,#+0
   \   000000FE   0x.... 0x....      BL       SendOutHardware
    103          				DebugMsg("********\r\n");
   \   00000102   0x.... 0x....      LDR.W    R0,??ProcessMsg_HUACE_0+0x8
   \   00000106   0x.... 0x....      BL       DebugMsg
    104          			}
    105                      HcMsg->RecFlag = 0;
   \                     ??ProcessData_HUACE_11:
   \   0000010A   0x2000             MOVS     R0,#+0
   \   0000010C   0x7038             STRB     R0,[R7, #+0]
    106                      DebugMsg("huace buffer overflow MsgTmp !!!\r\n");
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable3_3
   \   00000112   0x.... 0x....      BL       DebugMsg
    107                      return;
   \   00000116   0xE088             B.N      ??ProcessData_HUACE_14
    108                    }
    109                    
    110                    for(i=0; i<HcMsg->MsgLength; i++)
   \                     ??ProcessData_HUACE_10:
   \   00000118   0x2000             MOVS     R0,#+0
   \   0000011A   0x4681             MOV      R9,R0
   \                     ??ProcessData_HUACE_15:
   \   0000011C   0x8878             LDRH     R0,[R7, #+2]
   \   0000011E   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000122   0x4581             CMP      R9,R0
   \   00000124   0xD214             BCS.N    ??ProcessData_HUACE_16
    111                    {
    112                      HuaceMsgTmp[i] = DatBuf[HcMsg->RdSpTmp];
   \   00000126   0x88B8             LDRH     R0,[R7, #+4]
   \   00000128   0x5D00             LDRB     R0,[R0, R4]
   \   0000012A   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   0000012E   0xA900             ADD      R1,SP,#+0
   \   00000130   0xF809 0x0001      STRB     R0,[R9, R1]
    113                      INCREASE_POINTER(HcMsg->RdSpTmp);
   \   00000134   0x88B8             LDRH     R0,[R7, #+4]
   \   00000136   0x1C40             ADDS     R0,R0,#+1
   \   00000138   0x80B8             STRH     R0,[R7, #+4]
   \   0000013A   0x88B8             LDRH     R0,[R7, #+4]
   \   0000013C   0xF44F 0x6100      MOV      R1,#+2048
   \   00000140   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000144   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   00000148   0x80BA             STRH     R2,[R7, #+4]
    114                    }
   \   0000014A   0xF119 0x0901      ADDS     R9,R9,#+1
   \   0000014E   0xE7E5             B.N      ??ProcessData_HUACE_15
    115                    
    116                    if( HcMsg->RecFlag == 0x94)
   \                     ??ProcessData_HUACE_16:
   \   00000150   0x7838             LDRB     R0,[R7, #+0]
   \   00000152   0x2894             CMP      R0,#+148
   \   00000154   0xD104             BNE.N    ??ProcessData_HUACE_17
    117                    {
    118                      ProcessMsg_HUACE(HuaceMsgTmp, HcMsg->MsgLength);//命令处理
   \   00000156   0x8879             LDRH     R1,[R7, #+2]
   \   00000158   0xA800             ADD      R0,SP,#+0
   \   0000015A   0x.... 0x....      BL       ProcessMsg_HUACE
   \   0000015E   0xE00F             B.N      ??ProcessData_HUACE_18
    119                    }
    120                    else if( HcMsg->RecFlag == 0x84)
   \                     ??ProcessData_HUACE_17:
   \   00000160   0x7838             LDRB     R0,[R7, #+0]
   \   00000162   0x2884             CMP      R0,#+132
   \   00000164   0xD10C             BNE.N    ??ProcessData_HUACE_18
    121                    {
    122                      if( rs232_para.frq != 0)
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable3_4
   \   0000016A   0x6840             LDR      R0,[R0, #+4]
   \   0000016C   0x2800             CMP      R0,#+0
   \   0000016E   0xD007             BEQ.N    ??ProcessData_HUACE_18
    123                      {
    124                        HuaceMsgTmp[HcMsg->MsgLength] ='\0';
   \   00000170   0x8878             LDRH     R0,[R7, #+2]
   \   00000172   0xA900             ADD      R1,SP,#+0
   \   00000174   0x2200             MOVS     R2,#+0
   \   00000176   0x5442             STRB     R2,[R0, R1]
    125                        rs232_data_put(HuaceMsgTmp, HcMsg->MsgLength);
   \   00000178   0x8879             LDRH     R1,[R7, #+2]
   \   0000017A   0xA800             ADD      R0,SP,#+0
   \   0000017C   0x.... 0x....      BL       rs232_data_put
    126                      }
    127                    }
    128                    HcMsg->RecFlag = 0x00;
   \                     ??ProcessData_HUACE_18:
   \   00000180   0x2000             MOVS     R0,#+0
   \   00000182   0x7038             STRB     R0,[R7, #+0]
    129                    break;
    130                  }
    131                }//while
    132                return;
   \                     ??ProcessData_HUACE_3:
   \   00000184   0xE051             B.N      ??ProcessData_HUACE_14
    133              }//if 0x94
    134              
    135              while( WrSp != *RdSp )//find msg head
   \                     ??ProcessData_HUACE_2:
   \   00000186   0x8828             LDRH     R0,[R5, #+0]
   \   00000188   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000018A   0x4286             CMP      R6,R0
   \   0000018C   0xD04D             BEQ.N    ??ProcessData_HUACE_0
    136              {
    137                ch = DatBuf[*RdSp] ;
   \   0000018E   0x8828             LDRH     R0,[R5, #+0]
   \   00000190   0x5D00             LDRB     R0,[R0, R4]
   \   00000192   0x4680             MOV      R8,R0
    138                INCREASE_POINTER(*RdSp);
   \   00000194   0x8828             LDRH     R0,[R5, #+0]
   \   00000196   0x1C40             ADDS     R0,R0,#+1
   \   00000198   0x8028             STRH     R0,[R5, #+0]
   \   0000019A   0x8828             LDRH     R0,[R5, #+0]
   \   0000019C   0xF44F 0x6100      MOV      R1,#+2048
   \   000001A0   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000001A4   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   000001A8   0x802A             STRH     R2,[R5, #+0]
    139                
    140                if(HcMsg->RecFlag == 0x00)
   \   000001AA   0x7838             LDRB     R0,[R7, #+0]
   \   000001AC   0x2800             CMP      R0,#+0
   \   000001AE   0xD11C             BNE.N    ??ProcessData_HUACE_19
    141                {
    142                  if(ch == '$')
   \   000001B0   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000001B4   0xF1B8 0x0F24      CMP      R8,#+36
   \   000001B8   0xD102             BNE.N    ??ProcessData_HUACE_20
    143                    HcMsg->RecFlag = 0x91;
   \   000001BA   0x2091             MOVS     R0,#+145
   \   000001BC   0x7038             STRB     R0,[R7, #+0]
   \   000001BE   0xE7E2             B.N      ??ProcessData_HUACE_2
    144                  else if( (ch == 'Z')||(ch == 'X') ||(ch == 'Y'))
   \                     ??ProcessData_HUACE_20:
   \   000001C0   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000001C4   0xF1B8 0x0F5A      CMP      R8,#+90
   \   000001C8   0xD009             BEQ.N    ??ProcessData_HUACE_21
   \   000001CA   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000001CE   0xF1B8 0x0F58      CMP      R8,#+88
   \   000001D2   0xD004             BEQ.N    ??ProcessData_HUACE_21
   \   000001D4   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000001D8   0xF1B8 0x0F59      CMP      R8,#+89
   \   000001DC   0xD102             BNE.N    ??ProcessData_HUACE_22
    145                    HcMsg->RecFlag = 0x81;
   \                     ??ProcessData_HUACE_21:
   \   000001DE   0x2081             MOVS     R0,#+129
   \   000001E0   0x7038             STRB     R0,[R7, #+0]
   \   000001E2   0xE7D0             B.N      ??ProcessData_HUACE_2
    146                  else
    147                    HcMsg->RecFlag = 0x00;
   \                     ??ProcessData_HUACE_22:
   \   000001E4   0x2000             MOVS     R0,#+0
   \   000001E6   0x7038             STRB     R0,[R7, #+0]
   \   000001E8   0xE7CD             B.N      ??ProcessData_HUACE_2
    148                  
    149                }
    150                else if( HcMsg->RecFlag == 0x81)
   \                     ??ProcessData_HUACE_19:
   \   000001EA   0x7838             LDRB     R0,[R7, #+0]
   \   000001EC   0x2881             CMP      R0,#+129
   \   000001EE   0xD10C             BNE.N    ??ProcessData_HUACE_23
    151                {
    152                  if(ch == ':')
   \   000001F0   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000001F4   0xF1B8 0x0F3A      CMP      R8,#+58
   \   000001F8   0xD104             BNE.N    ??ProcessData_HUACE_24
    153                  {
    154                    HcMsg->RdSpTmp = *RdSp; //remember this sp
   \   000001FA   0x8828             LDRH     R0,[R5, #+0]
   \   000001FC   0x80B8             STRH     R0,[R7, #+4]
    155                    HcMsg->RecFlag = 0x84;
   \   000001FE   0x2084             MOVS     R0,#+132
   \   00000200   0x7038             STRB     R0,[R7, #+0]
    156                    break;
   \   00000202   0xE012             B.N      ??ProcessData_HUACE_0
    157                  }
    158                  else
    159                  {
    160                    HcMsg->RecFlag = 0x00;
   \                     ??ProcessData_HUACE_24:
   \   00000204   0x2000             MOVS     R0,#+0
   \   00000206   0x7038             STRB     R0,[R7, #+0]
   \   00000208   0xE7BD             B.N      ??ProcessData_HUACE_2
    161                  }
    162                }
    163                else if(HcMsg->RecFlag == 0x91)
   \                     ??ProcessData_HUACE_23:
   \   0000020A   0x7838             LDRB     R0,[R7, #+0]
   \   0000020C   0x2891             CMP      R0,#+145
   \   0000020E   0xD1BA             BNE.N    ??ProcessData_HUACE_2
    164                {
    165                  if(ch == '0')
   \   00000210   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000214   0xF1B8 0x0F30      CMP      R8,#+48
   \   00000218   0xD104             BNE.N    ??ProcessData_HUACE_25
    166                  {
    167                    HcMsg->RdSpTmp = *RdSp; //remember this sp
   \   0000021A   0x8828             LDRH     R0,[R5, #+0]
   \   0000021C   0x80B8             STRH     R0,[R7, #+4]
    168                    HcMsg->RecFlag = 0x94;
   \   0000021E   0x2094             MOVS     R0,#+148
   \   00000220   0x7038             STRB     R0,[R7, #+0]
    169                    break;
   \   00000222   0xE002             B.N      ??ProcessData_HUACE_0
    170                  }
    171                  else
    172                  {
    173                    HcMsg->RecFlag = 0x00;
   \                     ??ProcessData_HUACE_25:
   \   00000224   0x2000             MOVS     R0,#+0
   \   00000226   0x7038             STRB     R0,[R7, #+0]
   \   00000228   0xE7AD             B.N      ??ProcessData_HUACE_2
    174                  }
    175                }
    176               
    177              }// End While
    178            }//if(WrSp != *RdSp)
    179          }
   \                     ??ProcessData_HUACE_0:
   \                     ??ProcessData_HUACE_14:
   \   0000022A   0xB033             ADD      SP,SP,#+204
   \   0000022C   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
    180          static void DbgMsg(char *msg)
    181          {
   \                     DbgMsg:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    182            DebugMsg(msg);
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       DebugMsg
    183          }
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
    184          void log_config_info(char *msg)
    185          {
   \                     log_config_info:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB0B1             SUB      SP,SP,#+196
   \   00000006   0x0004             MOVS     R4,R0
    186            char commod_s[10];
    187            char usrbaud[10];
    188            char bdbaud[10];
    189            char pwmod[10];
    190            char code_type[10];//北斗编码类型
    191            char proto_type[4];//北斗协议类型
    192            char HardwareVersion[5] = {0};
   \   00000008   0xA81B             ADD      R0,SP,#+108
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0xC006             STM      R0!,{R1,R2}
   \   00000010   0x3808             SUBS     R0,R0,#+8
    193            int i;
    194            
    195            //for temp -----------------
    196            UINT8  commod;//1:BD 2:GPRS 3:AUTO
    197            UINT8  ip[6];//ip and port
    198            UINT16 rain_frq;//min
    199            UINT8  usr_baud;//1:4800 2:9600 3:19200 4:57600 5:115200 
    200            UINT8  bd_baud; //1:4800 2:9600 3:19200 4:57600 5:115200
    201            //UINT8  dist_baud;//1:4800 2:9600 3:19200 4:57600 5:115200
    202            UINT8  power_mod;//1:sleep 2:week
    203            UINT8  rain_par;
    204            UINT8  rtuid[32];
    205            UINT32 own_ic;//123456
    206            
    207            
    208            
    209            commod = g_Byte128[32+0];
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable3_5
   \   00000016   0xF890 0x0020      LDRB     R0,[R0, #+32]
   \   0000001A   0xF88D 0x0046      STRB     R0,[SP, #+70]
    210            //dst_ic = (g_Byte128[32+1]<<24) + (g_Byte128[32+2]<<16) + (g_Byte128[32+3]<<8) + (g_Byte128[32+4]<<0);
    211            ip[0] = g_Byte128[32+5];
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable3_5
   \   00000022   0xF890 0x0025      LDRB     R0,[R0, #+37]
   \   00000026   0xF88D 0x004C      STRB     R0,[SP, #+76]
    212            ip[1] = g_Byte128[32+6];
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable3_5
   \   0000002E   0xF890 0x0026      LDRB     R0,[R0, #+38]
   \   00000032   0xF88D 0x004D      STRB     R0,[SP, #+77]
    213            ip[2] = g_Byte128[32+7];
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable3_5
   \   0000003A   0xF890 0x0027      LDRB     R0,[R0, #+39]
   \   0000003E   0xF88D 0x004E      STRB     R0,[SP, #+78]
    214            ip[3] = g_Byte128[32+8];
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable3_5
   \   00000046   0xF890 0x0028      LDRB     R0,[R0, #+40]
   \   0000004A   0xF88D 0x004F      STRB     R0,[SP, #+79]
    215            ip[4] = g_Byte128[32+9];
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable3_5
   \   00000052   0xF890 0x0029      LDRB     R0,[R0, #+41]
   \   00000056   0xF88D 0x0050      STRB     R0,[SP, #+80]
    216            ip[5] = g_Byte128[32+10];
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable3_5
   \   0000005E   0xF890 0x002A      LDRB     R0,[R0, #+42]
   \   00000062   0xF88D 0x0051      STRB     R0,[SP, #+81]
    217            rain_frq = (g_Byte128[32+13]<<8) + (g_Byte128[32+14]<<0);
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable3_5
   \   0000006A   0xF890 0x002D      LDRB     R0,[R0, #+45]
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable3_5
   \   00000072   0xF891 0x102E      LDRB     R1,[R1, #+46]
   \   00000076   0xEB11 0x2000      ADDS     R0,R1,R0, LSL #+8
   \   0000007A   0xF8AD 0x0054      STRH     R0,[SP, #+84]
    218            usr_baud  = g_Byte128[32+15];
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable3_5
   \   00000082   0xF890 0x002F      LDRB     R0,[R0, #+47]
   \   00000086   0xF88D 0x0045      STRB     R0,[SP, #+69]
    219            //dist_baud = rs485_para.baud;
    220            power_mod = g_Byte128[32+17];
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable3_5
   \   0000008E   0xF890 0x0031      LDRB     R0,[R0, #+49]
   \   00000092   0xF88D 0x0048      STRB     R0,[SP, #+72]
    221            rain_par = g_Byte128[32+18];
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable3_5
   \   0000009A   0xF890 0x0032      LDRB     R0,[R0, #+50]
   \   0000009E   0xF88D 0x0047      STRB     R0,[SP, #+71]
    222            bd_baud  = bd_para.baud;
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable3_6
   \   000000A6   0x7A00             LDRB     R0,[R0, #+8]
   \   000000A8   0xF88D 0x0044      STRB     R0,[SP, #+68]
    223            for(i=0;i<32;i++)
   \   000000AC   0x2000             MOVS     R0,#+0
   \   000000AE   0x0005             MOVS     R5,R0
   \                     ??log_config_info_0:
   \   000000B0   0x2D20             CMP      R5,#+32
   \   000000B2   0xDA08             BGE.N    ??log_config_info_1
    224              rtuid[i] = g_Byte128[32+73+i];
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable3_5
   \   000000B8   0x1828             ADDS     R0,R5,R0
   \   000000BA   0xF890 0x0069      LDRB     R0,[R0, #+105]
   \   000000BE   0xA929             ADD      R1,SP,#+164
   \   000000C0   0x5468             STRB     R0,[R5, R1]
   \   000000C2   0x1C6D             ADDS     R5,R5,#+1
   \   000000C4   0xE7F4             B.N      ??log_config_info_0
    225            own_ic = g_RtuStatus.own_ic;
   \                     ??log_config_info_1:
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable3_7
   \   000000CA   0x6900             LDR      R0,[R0, #+16]
   \   000000CC   0x9017             STR      R0,[SP, #+92]
    226            
    227            if(commod == 1)
   \   000000CE   0xF89D 0x0046      LDRB     R0,[SP, #+70]
   \   000000D2   0x2801             CMP      R0,#+1
   \   000000D4   0xD104             BNE.N    ??log_config_info_2
    228              strcpy(commod_s, "BD");
   \   000000D6   0xA1BA             ADR.N    R1,??log_config_info_3  ;; 0x42, 0x44, 0x00, 0x00
   \   000000D8   0xA823             ADD      R0,SP,#+140
   \   000000DA   0x.... 0x....      BL       strcpy
   \   000000DE   0xE012             B.N      ??log_config_info_4
    229            else if(commod == 2)
   \                     ??log_config_info_2:
   \   000000E0   0xF89D 0x0046      LDRB     R0,[SP, #+70]
   \   000000E4   0x2802             CMP      R0,#+2
   \   000000E6   0xD105             BNE.N    ??log_config_info_5
    230              strcpy(commod_s, "GPRS");
   \   000000E8   0x.... 0x....      LDR.W    R1,??DataTable3_8
   \   000000EC   0xA823             ADD      R0,SP,#+140
   \   000000EE   0x.... 0x....      BL       strcpy
   \   000000F2   0xE008             B.N      ??log_config_info_4
    231            else if(commod == 3)
   \                     ??log_config_info_5:
   \   000000F4   0xF89D 0x0046      LDRB     R0,[SP, #+70]
   \   000000F8   0x2803             CMP      R0,#+3
   \   000000FA   0xD104             BNE.N    ??log_config_info_4
    232              strcpy(commod_s, "AUTO");
   \   000000FC   0x.... 0x....      LDR.W    R1,??DataTable3_9
   \   00000100   0xA823             ADD      R0,SP,#+140
   \   00000102   0x.... 0x....      BL       strcpy
    233            
    234            if(usr_baud == 1)
   \                     ??log_config_info_4:
   \   00000106   0xF89D 0x0045      LDRB     R0,[SP, #+69]
   \   0000010A   0x2801             CMP      R0,#+1
   \   0000010C   0xD105             BNE.N    ??log_config_info_6
    235              strcpy(usrbaud, "4800");
   \   0000010E   0x.... 0x....      LDR.W    R1,??DataTable3_10
   \   00000112   0xA81D             ADD      R0,SP,#+116
   \   00000114   0x.... 0x....      BL       strcpy
   \   00000118   0xE030             B.N      ??log_config_info_7
    236            else if(usr_baud == 2)
   \                     ??log_config_info_6:
   \   0000011A   0xF89D 0x0045      LDRB     R0,[SP, #+69]
   \   0000011E   0x2802             CMP      R0,#+2
   \   00000120   0xD105             BNE.N    ??log_config_info_8
    237              strcpy(usrbaud, "9600");
   \   00000122   0x.... 0x....      LDR.W    R1,??DataTable3_11
   \   00000126   0xA81D             ADD      R0,SP,#+116
   \   00000128   0x.... 0x....      BL       strcpy
   \   0000012C   0xE026             B.N      ??log_config_info_7
    238            else if(usr_baud == 3)
   \                     ??log_config_info_8:
   \   0000012E   0xF89D 0x0045      LDRB     R0,[SP, #+69]
   \   00000132   0x2803             CMP      R0,#+3
   \   00000134   0xD105             BNE.N    ??log_config_info_9
    239              strcpy(usrbaud, "19200");
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable3_12
   \   0000013A   0xA81D             ADD      R0,SP,#+116
   \   0000013C   0x.... 0x....      BL       strcpy
   \   00000140   0xE01C             B.N      ??log_config_info_7
    240            else if(usr_baud == 4)
   \                     ??log_config_info_9:
   \   00000142   0xF89D 0x0045      LDRB     R0,[SP, #+69]
   \   00000146   0x2804             CMP      R0,#+4
   \   00000148   0xD105             BNE.N    ??log_config_info_10
    241              strcpy(usrbaud, "57600");
   \   0000014A   0x.... 0x....      LDR.W    R1,??DataTable3_13
   \   0000014E   0xA81D             ADD      R0,SP,#+116
   \   00000150   0x.... 0x....      BL       strcpy
   \   00000154   0xE012             B.N      ??log_config_info_7
    242            else if(usr_baud == 5)
   \                     ??log_config_info_10:
   \   00000156   0xF89D 0x0045      LDRB     R0,[SP, #+69]
   \   0000015A   0x2805             CMP      R0,#+5
   \   0000015C   0xD105             BNE.N    ??log_config_info_11
    243              strcpy(usrbaud, "115200");
   \   0000015E   0x.... 0x....      LDR.W    R1,??DataTable3_14
   \   00000162   0xA81D             ADD      R0,SP,#+116
   \   00000164   0x.... 0x....      BL       strcpy
   \   00000168   0xE008             B.N      ??log_config_info_7
    244            else if(usr_baud == 6)
   \                     ??log_config_info_11:
   \   0000016A   0xF89D 0x0045      LDRB     R0,[SP, #+69]
   \   0000016E   0x2806             CMP      R0,#+6
   \   00000170   0xD104             BNE.N    ??log_config_info_7
    245              strcpy(usrbaud, "38400");
   \   00000172   0x.... 0x....      LDR.W    R1,??DataTable3_15
   \   00000176   0xA81D             ADD      R0,SP,#+116
   \   00000178   0x.... 0x....      BL       strcpy
    246            
    247            if(bd_baud == 1)
   \                     ??log_config_info_7:
   \   0000017C   0xF89D 0x0044      LDRB     R0,[SP, #+68]
   \   00000180   0x2801             CMP      R0,#+1
   \   00000182   0xD105             BNE.N    ??log_config_info_12
    248              strcpy(bdbaud, "4800");
   \   00000184   0x.... 0x....      LDR.W    R1,??DataTable3_10
   \   00000188   0xA818             ADD      R0,SP,#+96
   \   0000018A   0x.... 0x....      BL       strcpy
   \   0000018E   0xE036             B.N      ??log_config_info_13
    249            else if(bd_baud == 2)
   \                     ??log_config_info_12:
   \   00000190   0xF89D 0x0044      LDRB     R0,[SP, #+68]
   \   00000194   0x2802             CMP      R0,#+2
   \   00000196   0xD105             BNE.N    ??log_config_info_14
    250              strcpy(bdbaud, "9600");
   \   00000198   0x.... 0x....      LDR.W    R1,??DataTable3_11
   \   0000019C   0xA818             ADD      R0,SP,#+96
   \   0000019E   0x.... 0x....      BL       strcpy
   \   000001A2   0xE02C             B.N      ??log_config_info_13
    251            else if(bd_baud == 3)
   \                     ??log_config_info_14:
   \   000001A4   0xF89D 0x0044      LDRB     R0,[SP, #+68]
   \   000001A8   0x2803             CMP      R0,#+3
   \   000001AA   0xD105             BNE.N    ??log_config_info_15
    252              strcpy(bdbaud, "19200");
   \   000001AC   0x.... 0x....      LDR.W    R1,??DataTable3_12
   \   000001B0   0xA818             ADD      R0,SP,#+96
   \   000001B2   0x.... 0x....      BL       strcpy
   \   000001B6   0xE022             B.N      ??log_config_info_13
    253            else if(bd_baud == 4)
   \                     ??log_config_info_15:
   \   000001B8   0xF89D 0x0044      LDRB     R0,[SP, #+68]
   \   000001BC   0x2804             CMP      R0,#+4
   \   000001BE   0xD105             BNE.N    ??log_config_info_16
    254              strcpy(bdbaud, "57600");
   \   000001C0   0x.... 0x....      LDR.W    R1,??DataTable3_13
   \   000001C4   0xA818             ADD      R0,SP,#+96
   \   000001C6   0x.... 0x....      BL       strcpy
   \   000001CA   0xE018             B.N      ??log_config_info_13
    255            else if(bd_baud == 5)
   \                     ??log_config_info_16:
   \   000001CC   0xF89D 0x0044      LDRB     R0,[SP, #+68]
   \   000001D0   0x2805             CMP      R0,#+5
   \   000001D2   0xD105             BNE.N    ??log_config_info_17
    256              strcpy(bdbaud, "115200");
   \   000001D4   0x.... 0x....      LDR.W    R1,??DataTable3_14
   \   000001D8   0xA818             ADD      R0,SP,#+96
   \   000001DA   0x.... 0x....      BL       strcpy
   \   000001DE   0xE00E             B.N      ??log_config_info_13
    257              else if(bd_baud == 6)
   \                     ??log_config_info_17:
   \   000001E0   0xF89D 0x0044      LDRB     R0,[SP, #+68]
   \   000001E4   0x2806             CMP      R0,#+6
   \   000001E6   0xD105             BNE.N    ??log_config_info_18
    258              strcpy(bdbaud, "38400");
   \   000001E8   0x.... 0x....      LDR.W    R1,??DataTable3_15
   \   000001EC   0xA818             ADD      R0,SP,#+96
   \   000001EE   0x.... 0x....      BL       strcpy
   \   000001F2   0xE004             B.N      ??log_config_info_13
    259            else
    260              strcpy(bdbaud, "19200");
   \                     ??log_config_info_18:
   \   000001F4   0x.... 0x....      LDR.W    R1,??DataTable3_12
   \   000001F8   0xA818             ADD      R0,SP,#+96
   \   000001FA   0x.... 0x....      BL       strcpy
    261            
    262            if(power_mod == 1)
   \                     ??log_config_info_13:
   \   000001FE   0xF89D 0x0048      LDRB     R0,[SP, #+72]
   \   00000202   0x2801             CMP      R0,#+1
   \   00000204   0xD105             BNE.N    ??log_config_info_19
    263              strcpy(pwmod, "SLEEP");
   \   00000206   0x.... 0x....      LDR.W    R1,??DataTable3_16
   \   0000020A   0xA826             ADD      R0,SP,#+152
   \   0000020C   0x.... 0x....      BL       strcpy
   \   00000210   0xE008             B.N      ??log_config_info_20
    264            else if(power_mod == 2)
   \                     ??log_config_info_19:
   \   00000212   0xF89D 0x0048      LDRB     R0,[SP, #+72]
   \   00000216   0x2802             CMP      R0,#+2
   \   00000218   0xD104             BNE.N    ??log_config_info_20
    265              strcpy(pwmod, "WAKE");
   \   0000021A   0x.... 0x....      LDR.W    R1,??DataTable3_17
   \   0000021E   0xA826             ADD      R0,SP,#+152
   \   00000220   0x.... 0x....      BL       strcpy
    266            
    267            memset(proto_type,0,sizeof(proto_type));
   \                     ??log_config_info_20:
   \   00000224   0x2204             MOVS     R2,#+4
   \   00000226   0x2100             MOVS     R1,#+0
   \   00000228   0xA816             ADD      R0,SP,#+88
   \   0000022A   0x.... 0x....      BL       memset
    268            
    269            if( bd_para.proto_type == 1)
   \   0000022E   0x.... 0x....      LDR.W    R0,??DataTable3_6
   \   00000232   0x7A40             LDRB     R0,[R0, #+9]
   \   00000234   0x2801             CMP      R0,#+1
   \   00000236   0xD104             BNE.N    ??log_config_info_21
    270            {
    271              strcpy(proto_type,"2.5");
   \   00000238   0xA1C9             ADR.N    R1,??log_config_info_22  ;; "2.5"
   \   0000023A   0xA816             ADD      R0,SP,#+88
   \   0000023C   0x.... 0x....      BL       strcpy
   \   00000240   0xE008             B.N      ??log_config_info_23
    272            }
    273            else if(bd_para.proto_type == 2)
   \                     ??log_config_info_21:
   \   00000242   0x.... 0x....      LDR.W    R0,??DataTable3_6
   \   00000246   0x7A40             LDRB     R0,[R0, #+9]
   \   00000248   0x2802             CMP      R0,#+2
   \   0000024A   0xD103             BNE.N    ??log_config_info_23
    274            {
    275              strcpy(proto_type,"4.0");
   \   0000024C   0xA1C5             ADR.N    R1,??log_config_info_22+0x4  ;; "4.0"
   \   0000024E   0xA816             ADD      R0,SP,#+88
   \   00000250   0x.... 0x....      BL       strcpy
    276            }
    277            
    278            
    279            memset(code_type,0,sizeof(code_type));
   \                     ??log_config_info_23:
   \   00000254   0x220A             MOVS     R2,#+10
   \   00000256   0x2100             MOVS     R1,#+0
   \   00000258   0xA820             ADD      R0,SP,#+128
   \   0000025A   0x.... 0x....      BL       memset
    280            
    281            if( bd_para.code_type == 1)
   \   0000025E   0x.... 0x....      LDR.W    R0,??DataTable3_6
   \   00000262   0x7A80             LDRB     R0,[R0, #+10]
   \   00000264   0x2801             CMP      R0,#+1
   \   00000266   0xD105             BNE.N    ??log_config_info_24
    282            {
    283              strcpy(code_type,"HANZI");
   \   00000268   0x.... 0x....      LDR.W    R1,??DataTable3_18
   \   0000026C   0xA820             ADD      R0,SP,#+128
   \   0000026E   0x.... 0x....      BL       strcpy
   \   00000272   0xE008             B.N      ??log_config_info_25
    284            }
    285            else if(bd_para.code_type == 2)
   \                     ??log_config_info_24:
   \   00000274   0x.... 0x....      LDR.W    R0,??DataTable3_6
   \   00000278   0x7A80             LDRB     R0,[R0, #+10]
   \   0000027A   0x2802             CMP      R0,#+2
   \   0000027C   0xD103             BNE.N    ??log_config_info_25
    286            {
    287              strcpy(code_type,"BCD");
   \   0000027E   0xA1D7             ADR.N    R1,??log_config_info_26  ;; "BCD"
   \   00000280   0xA820             ADD      R0,SP,#+128
   \   00000282   0x.... 0x....      BL       strcpy
    288            }
    289            
    290            if(HardvareVersion == V13)
   \                     ??log_config_info_25:
   \   00000286   0x.... 0x....      LDR.W    R0,??DataTable3_19
   \   0000028A   0x7800             LDRB     R0,[R0, #+0]
   \   0000028C   0x2801             CMP      R0,#+1
   \   0000028E   0xD105             BNE.N    ??log_config_info_27
    291          	  strcpy(HardwareVersion,"V1.3");
   \   00000290   0x.... 0x....      LDR.W    R1,??DataTable3_20
   \   00000294   0xA81B             ADD      R0,SP,#+108
   \   00000296   0x.... 0x....      BL       strcpy
   \   0000029A   0xE004             B.N      ??log_config_info_28
    292            else
    293            	  strcpy(HardwareVersion,"V1.1");
   \                     ??log_config_info_27:
   \   0000029C   0x.... 0x....      LDR.W    R1,??DataTable3_21
   \   000002A0   0xA81B             ADD      R0,SP,#+108
   \   000002A2   0x.... 0x....      BL       strcpy
    294            
    295            //float rain_parf = ((float)rain_par)/10;
    296            UINT8 a = rain_par/10;
   \                     ??log_config_info_28:
   \   000002A6   0xF89D 0x0047      LDRB     R0,[SP, #+71]
   \   000002AA   0x210A             MOVS     R1,#+10
   \   000002AC   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000002B0   0xF88D 0x004A      STRB     R0,[SP, #+74]
    297            UINT8 b = rain_par%10;
   \   000002B4   0xF89D 0x0047      LDRB     R0,[SP, #+71]
   \   000002B8   0x210A             MOVS     R1,#+10
   \   000002BA   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000002BE   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000002C2   0xF88D 0x0049      STRB     R0,[SP, #+73]
    298            
    299            sprintf(msg,"$0,REQCONF,RTUID:%s,COMMOD:%s,DSTIP:%d.%d.%d.%d:%d,RAINFRQ:%d,USRBAUD:%s,PWMOD:%s,RAINRESOL:%d.%d,SN:%s,VER:%s,RS232-BDS:0;%s;%s;%d;%s;%6d,",\
    300              rtuid,commod_s, ip[0], ip[1], ip[2], ip[3], (ip[4]<<8)+(ip[5]<<0),\
    301                rain_frq, usrbaud, pwmod, a,b,g_RtuStatus.sn,HardwareVersion,bdbaud,proto_type,bd_para.dist_ic,code_type,own_ic); 
   \   000002C6   0x9817             LDR      R0,[SP, #+92]
   \   000002C8   0x9010             STR      R0,[SP, #+64]
   \   000002CA   0xA820             ADD      R0,SP,#+128
   \   000002CC   0x900F             STR      R0,[SP, #+60]
   \   000002CE   0x.... 0x....      LDR.W    R0,??DataTable3_6
   \   000002D2   0x68C0             LDR      R0,[R0, #+12]
   \   000002D4   0x900E             STR      R0,[SP, #+56]
   \   000002D6   0xA816             ADD      R0,SP,#+88
   \   000002D8   0x900D             STR      R0,[SP, #+52]
   \   000002DA   0xA818             ADD      R0,SP,#+96
   \   000002DC   0x900C             STR      R0,[SP, #+48]
   \   000002DE   0xA81B             ADD      R0,SP,#+108
   \   000002E0   0x900B             STR      R0,[SP, #+44]
   \   000002E2   0x.... 0x....      LDR.W    R0,??DataTable3_22
   \   000002E6   0x900A             STR      R0,[SP, #+40]
   \   000002E8   0xF89D 0x0049      LDRB     R0,[SP, #+73]
   \   000002EC   0x9009             STR      R0,[SP, #+36]
   \   000002EE   0xF89D 0x004A      LDRB     R0,[SP, #+74]
   \   000002F2   0x9008             STR      R0,[SP, #+32]
   \   000002F4   0xA826             ADD      R0,SP,#+152
   \   000002F6   0x9007             STR      R0,[SP, #+28]
   \   000002F8   0xA81D             ADD      R0,SP,#+116
   \   000002FA   0x9006             STR      R0,[SP, #+24]
   \   000002FC   0xF8BD 0x0054      LDRH     R0,[SP, #+84]
   \   00000300   0x9005             STR      R0,[SP, #+20]
   \   00000302   0xF89D 0x0050      LDRB     R0,[SP, #+80]
   \   00000306   0xF89D 0x1051      LDRB     R1,[SP, #+81]
   \   0000030A   0xEB11 0x2000      ADDS     R0,R1,R0, LSL #+8
   \   0000030E   0x9004             STR      R0,[SP, #+16]
   \   00000310   0xF89D 0x004F      LDRB     R0,[SP, #+79]
   \   00000314   0x9003             STR      R0,[SP, #+12]
   \   00000316   0xF89D 0x004E      LDRB     R0,[SP, #+78]
   \   0000031A   0x9002             STR      R0,[SP, #+8]
   \   0000031C   0xF89D 0x004D      LDRB     R0,[SP, #+77]
   \   00000320   0x9001             STR      R0,[SP, #+4]
   \   00000322   0xF89D 0x004C      LDRB     R0,[SP, #+76]
   \   00000326   0x9000             STR      R0,[SP, #+0]
   \   00000328   0xAB23             ADD      R3,SP,#+140
   \   0000032A   0xAA29             ADD      R2,SP,#+164
   \   0000032C   0x.... 0x....      LDR.W    R1,??DataTable3_23
   \   00000330   0x0020             MOVS     R0,R4
   \   00000332   0x.... 0x....      BL       sprintf
    302            
    303            msg+=strlen(msg);
   \   00000336   0x0020             MOVS     R0,R4
   \   00000338   0x.... 0x....      BL       strlen
   \   0000033C   0x1904             ADDS     R4,R0,R4
    304            
    305            sprintf(msg,"RS485:%s;%d;%d;%d;%s;%c%d.%03d;%c%d.%03d;,",sensor_type_table[rs485_para.type],\
    306              rs485_para.frq,rs485_para.cnt,rs485_para.baud,rs485_para.sname,
    307              rs485_para.para0< 0 ?'-':' ',
    308              abs(rs485_para.para0),
    309              abs(rs485_para.para0*1000)%1000,
    310              rs485_para.para1< 0 ?'-':' ',
    311              abs(rs485_para.para1),
    312              abs(rs485_para.para1*1000)%1000
    313              );
   \   0000033E   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   00000342   0x6941             LDR      R1,[R0, #+20]
   \   00000344   0x.... 0x....      LDR.W    R0,??DataTable3_25  ;; 0x447a0000
   \   00000348   0x.... 0x....      BL       __aeabi_fmul
   \   0000034C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000350   0x.... 0x....      BL       abs
   \   00000354   0x0006             MOVS     R6,R0
   \   00000356   0xF44F 0x777A      MOV      R7,#+1000
   \   0000035A   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   0000035E   0x6940             LDR      R0,[R0, #+20]
   \   00000360   0x.... 0x....      BL       __aeabi_f2iz
   \   00000364   0x.... 0x....      BL       abs
   \   00000368   0x4680             MOV      R8,R0
   \   0000036A   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   0000036E   0x6940             LDR      R0,[R0, #+20]
   \   00000370   0x2100             MOVS     R1,#+0
   \   00000372   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000376   0xD202             BCS.N    ??log_config_info_29
   \   00000378   0xF05F 0x092D      MOVS     R9,#+45
   \   0000037C   0xE001             B.N      ??log_config_info_30
   \                     ??log_config_info_29:
   \   0000037E   0xF05F 0x0920      MOVS     R9,#+32
   \                     ??log_config_info_30:
   \   00000382   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   00000386   0x6901             LDR      R1,[R0, #+16]
   \   00000388   0x.... 0x....      LDR.W    R0,??DataTable3_25  ;; 0x447a0000
   \   0000038C   0x.... 0x....      BL       __aeabi_fmul
   \   00000390   0x.... 0x....      BL       __aeabi_f2iz
   \   00000394   0x.... 0x....      BL       abs
   \   00000398   0x4682             MOV      R10,R0
   \   0000039A   0xF44F 0x7B7A      MOV      R11,#+1000
   \   0000039E   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   000003A2   0x6900             LDR      R0,[R0, #+16]
   \   000003A4   0x.... 0x....      BL       __aeabi_f2iz
   \   000003A8   0x.... 0x....      BL       abs
   \   000003AC   0x0002             MOVS     R2,R0
   \   000003AE   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   000003B2   0x6900             LDR      R0,[R0, #+16]
   \   000003B4   0x2100             MOVS     R1,#+0
   \   000003B6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000003BA   0xD203             BCS.N    ??log_config_info_31
   \   000003BC   0x202D             MOVS     R0,#+45
   \   000003BE   0xE002             B.N      ??log_config_info_32
   \                     ??log_config_info_3:
   \   000003C0   0x42 0x44          DC8      0x42, 0x44, 0x00, 0x00
   \              0x00 0x00    
   \                     ??log_config_info_31:
   \   000003C4   0x2020             MOVS     R0,#+32
   \                     ??log_config_info_32:
   \   000003C6   0xFB96 0xF1F7      SDIV     R1,R6,R7
   \   000003CA   0xFB07 0x6111      MLS      R1,R7,R1,R6
   \   000003CE   0x9108             STR      R1,[SP, #+32]
   \   000003D0   0xF8CD 0x801C      STR      R8,[SP, #+28]
   \   000003D4   0xF8CD 0x9018      STR      R9,[SP, #+24]
   \   000003D8   0xFB9A 0xF1FB      SDIV     R1,R10,R11
   \   000003DC   0xFB0B 0xA111      MLS      R1,R11,R1,R10
   \   000003E0   0x9105             STR      R1,[SP, #+20]
   \   000003E2   0x9204             STR      R2,[SP, #+16]
   \   000003E4   0x9003             STR      R0,[SP, #+12]
   \   000003E6   0x.... 0x....      LDR.W    R0,??DataTable3_26
   \   000003EA   0x9002             STR      R0,[SP, #+8]
   \   000003EC   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   000003F0   0x68C0             LDR      R0,[R0, #+12]
   \   000003F2   0x9001             STR      R0,[SP, #+4]
   \   000003F4   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   000003F8   0x6880             LDR      R0,[R0, #+8]
   \   000003FA   0x9000             STR      R0,[SP, #+0]
   \   000003FC   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   00000400   0x6843             LDR      R3,[R0, #+4]
   \   00000402   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   00000406   0x6800             LDR      R0,[R0, #+0]
   \   00000408   0x.... 0x....      LDR.W    R1,??DataTable3_27
   \   0000040C   0xF851 0x2020      LDR      R2,[R1, R0, LSL #+2]
   \   00000410   0x.... 0x....      LDR.W    R1,??DataTable3_28
   \   00000414   0x0020             MOVS     R0,R4
   \   00000416   0x.... 0x....      BL       sprintf
    314            
    315            msg+=strlen(msg);
   \   0000041A   0x0020             MOVS     R0,R4
   \   0000041C   0x.... 0x....      BL       strlen
   \   00000420   0x1904             ADDS     R4,R0,R4
    316            
    317            if( adc0_para.type == 5)
   \   00000422   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   00000426   0x6800             LDR      R0,[R0, #+0]
   \   00000428   0x2805             CMP      R0,#+5
   \   0000042A   0xD11A             BNE.N    ??log_config_info_33
    318            {//土壤水分计
    319              sprintf(msg,"ADC1:%s;%d;%d;%s;%c;,",sensor_type_table[adc0_para.type],\
    320                adc0_para.frq,adc0_para.stype,adc0_para.sname,adc0_para.para0.c[0]);
   \   0000042C   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   00000430   0x7B00             LDRB     R0,[R0, #+12]
   \   00000432   0x9002             STR      R0,[SP, #+8]
   \   00000434   0x.... 0x....      LDR.W    R0,??DataTable3_30
   \   00000438   0x9001             STR      R0,[SP, #+4]
   \   0000043A   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   0000043E   0x6880             LDR      R0,[R0, #+8]
   \   00000440   0x9000             STR      R0,[SP, #+0]
   \   00000442   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   00000446   0x6843             LDR      R3,[R0, #+4]
   \   00000448   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   0000044C   0x6800             LDR      R0,[R0, #+0]
   \   0000044E   0x.... 0x....      LDR.W    R1,??DataTable3_27
   \   00000452   0xF851 0x2020      LDR      R2,[R1, R0, LSL #+2]
   \   00000456   0x.... 0x....      LDR.W    R1,??DataTable3_31
   \   0000045A   0x0020             MOVS     R0,R4
   \   0000045C   0x.... 0x....      BL       sprintf
   \   00000460   0xE061             B.N      ??log_config_info_34
    321            }
    322            else
    323            {
    324              sprintf(msg,"ADC1:%s;%d;%d;%s;%c%d.%03d;%c%d.%03d;,",sensor_type_table[adc0_para.type],\
    325                adc0_para.frq,adc0_para.stype,adc0_para.sname,
    326                adc0_para.para0.f < 0 ?'-':' ',
    327                abs(adc0_para.para0.f),
    328                abs(adc0_para.para0.f*1000)%1000,
    329                adc0_para.para1 < 0 ?'-':' ',
    330                abs(adc0_para.para1),
    331                abs(adc0_para.para1*1000)%1000
    332                );
   \                     ??log_config_info_33:
   \   00000462   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   00000466   0x6901             LDR      R1,[R0, #+16]
   \   00000468   0x.... 0x....      LDR.W    R0,??DataTable3_25  ;; 0x447a0000
   \   0000046C   0x.... 0x....      BL       __aeabi_fmul
   \   00000470   0x.... 0x....      BL       __aeabi_f2iz
   \   00000474   0x.... 0x....      BL       abs
   \   00000478   0x0006             MOVS     R6,R0
   \   0000047A   0xF44F 0x777A      MOV      R7,#+1000
   \   0000047E   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   00000482   0x6900             LDR      R0,[R0, #+16]
   \   00000484   0x.... 0x....      BL       __aeabi_f2iz
   \   00000488   0x.... 0x....      BL       abs
   \   0000048C   0x4680             MOV      R8,R0
   \   0000048E   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   00000492   0x6900             LDR      R0,[R0, #+16]
   \   00000494   0x2100             MOVS     R1,#+0
   \   00000496   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000049A   0xD202             BCS.N    ??log_config_info_35
   \   0000049C   0xF05F 0x092D      MOVS     R9,#+45
   \   000004A0   0xE001             B.N      ??log_config_info_36
   \                     ??log_config_info_35:
   \   000004A2   0xF05F 0x0920      MOVS     R9,#+32
   \                     ??log_config_info_36:
   \   000004A6   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   000004AA   0x68C1             LDR      R1,[R0, #+12]
   \   000004AC   0x.... 0x....      LDR.W    R0,??DataTable3_25  ;; 0x447a0000
   \   000004B0   0x.... 0x....      BL       __aeabi_fmul
   \   000004B4   0x.... 0x....      BL       __aeabi_f2iz
   \   000004B8   0x.... 0x....      BL       abs
   \   000004BC   0x4682             MOV      R10,R0
   \   000004BE   0xF44F 0x7B7A      MOV      R11,#+1000
   \   000004C2   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   000004C6   0x68C0             LDR      R0,[R0, #+12]
   \   000004C8   0x.... 0x....      BL       __aeabi_f2iz
   \   000004CC   0x.... 0x....      BL       abs
   \   000004D0   0x0002             MOVS     R2,R0
   \   000004D2   0x.... 0x....      LDR.W    R0,??DataTable3_29
   \   000004D6   0x68C0             LDR      R0,[R0, #+12]
   \   000004D8   0x2100             MOVS     R1,#+0
   \   000004DA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000004DE   0xD201             BCS.N    ??log_config_info_37
   \   000004E0   0x202D             MOVS     R0,#+45
   \   000004E2   0xE000             B.N      ??log_config_info_38
   \                     ??log_config_info_37:
   \   000004E4   0x2020             MOVS     R0,#+32
   \                     ??log_config_info_38:
   \   000004E6   0xFB96 0xF1F7      SDIV     R1,R6,R7
   \   000004EA   0xFB07 0x6111      MLS      R1,R7,R1,R6
   \   000004EE   0x9107             STR      R1,[SP, #+28]
   \   000004F0   0xF8CD 0x8018      STR      R8,[SP, #+24]
   \   000004F4   0xF8CD 0x9014      STR      R9,[SP, #+20]
   \   000004F8   0xFB9A 0xF1FB      SDIV     R1,R10,R11
   \   000004FC   0xFB0B 0xA111      MLS      R1,R11,R1,R10
   \   00000500   0x9104             STR      R1,[SP, #+16]
   \   00000502   0x9203             STR      R2,[SP, #+12]
   \   00000504   0x9002             STR      R0,[SP, #+8]
   \   00000506   0x....             LDR.N    R0,??DataTable3_30
   \   00000508   0x9001             STR      R0,[SP, #+4]
   \   0000050A   0x....             LDR.N    R0,??DataTable3_29
   \   0000050C   0x6880             LDR      R0,[R0, #+8]
   \   0000050E   0x9000             STR      R0,[SP, #+0]
   \   00000510   0x....             LDR.N    R0,??DataTable3_29
   \   00000512   0x6843             LDR      R3,[R0, #+4]
   \   00000514   0x....             LDR.N    R0,??DataTable3_29
   \   00000516   0x6800             LDR      R0,[R0, #+0]
   \   00000518   0x....             LDR.N    R1,??DataTable3_27
   \   0000051A   0xF851 0x2020      LDR      R2,[R1, R0, LSL #+2]
   \   0000051E   0x....             LDR.N    R1,??DataTable3_32
   \   00000520   0x0020             MOVS     R0,R4
   \   00000522   0x.... 0x....      BL       sprintf
    333            }
    334            
    335            
    336            msg+=strlen(msg);
   \                     ??log_config_info_34:
   \   00000526   0x0020             MOVS     R0,R4
   \   00000528   0x.... 0x....      BL       strlen
   \   0000052C   0x1904             ADDS     R4,R0,R4
    337            
    338            if( adc1_para.type == 5)
   \   0000052E   0x....             LDR.N    R0,??DataTable3_33
   \   00000530   0x6800             LDR      R0,[R0, #+0]
   \   00000532   0x2805             CMP      R0,#+5
   \   00000534   0xD118             BNE.N    ??log_config_info_39
    339            {//土壤水分计
    340              sprintf(msg,"ADC2:%s;%d;%d;%s;%c;,",sensor_type_table[adc1_para.type],\
    341                adc1_para.frq,adc1_para.stype,adc1_para.sname,adc1_para.para0.c[0]);
   \   00000536   0x....             LDR.N    R0,??DataTable3_33
   \   00000538   0x7B00             LDRB     R0,[R0, #+12]
   \   0000053A   0x9002             STR      R0,[SP, #+8]
   \   0000053C   0x....             LDR.N    R0,??DataTable3_34
   \   0000053E   0x9001             STR      R0,[SP, #+4]
   \   00000540   0x....             LDR.N    R0,??DataTable3_33
   \   00000542   0x6880             LDR      R0,[R0, #+8]
   \   00000544   0x9000             STR      R0,[SP, #+0]
   \   00000546   0x....             LDR.N    R0,??DataTable3_33
   \   00000548   0x6843             LDR      R3,[R0, #+4]
   \   0000054A   0x....             LDR.N    R0,??DataTable3_33
   \   0000054C   0x6800             LDR      R0,[R0, #+0]
   \   0000054E   0x....             LDR.N    R1,??DataTable3_27
   \   00000550   0xF851 0x2020      LDR      R2,[R1, R0, LSL #+2]
   \   00000554   0x....             LDR.N    R1,??DataTable3_35
   \   00000556   0x0020             MOVS     R0,R4
   \   00000558   0x.... 0x....      BL       sprintf
   \   0000055C   0xE061             B.N      ??log_config_info_40
   \   0000055E   0xBF00             Nop      
   \                     ??log_config_info_22:
   \   00000560   0x32 0x2E          DC8      "2.5"
   \              0x35 0x00    
   \   00000564   0x34 0x2E          DC8      "4.0"
   \              0x30 0x00    
    342            }
    343            else
    344            {
    345              sprintf(msg,"ADC2:%s;%d;%d;%s;%c%d.%03d;%c%d.%03d;,",sensor_type_table[adc1_para.type],\
    346                adc1_para.frq,adc1_para.stype,adc1_para.sname,
    347                adc1_para.para0.f < 0 ?'-':' ',
    348                abs(adc1_para.para0.f),
    349                abs(adc1_para.para0.f*1000)%1000,
    350                adc1_para.para1 < 0 ?'-':' ',
    351                abs(adc1_para.para1),
    352                abs(adc1_para.para1*1000)%1000
    353                );
   \                     ??log_config_info_39:
   \   00000568   0x....             LDR.N    R0,??DataTable3_33
   \   0000056A   0x6901             LDR      R1,[R0, #+16]
   \   0000056C   0x....             LDR.N    R0,??DataTable3_25  ;; 0x447a0000
   \   0000056E   0x.... 0x....      BL       __aeabi_fmul
   \   00000572   0x.... 0x....      BL       __aeabi_f2iz
   \   00000576   0x.... 0x....      BL       abs
   \   0000057A   0x0006             MOVS     R6,R0
   \   0000057C   0xF44F 0x777A      MOV      R7,#+1000
   \   00000580   0x....             LDR.N    R0,??DataTable3_33
   \   00000582   0x6900             LDR      R0,[R0, #+16]
   \   00000584   0x.... 0x....      BL       __aeabi_f2iz
   \   00000588   0x.... 0x....      BL       abs
   \   0000058C   0x4680             MOV      R8,R0
   \   0000058E   0x....             LDR.N    R0,??DataTable3_33
   \   00000590   0x6900             LDR      R0,[R0, #+16]
   \   00000592   0x2100             MOVS     R1,#+0
   \   00000594   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000598   0xD202             BCS.N    ??log_config_info_41
   \   0000059A   0xF05F 0x092D      MOVS     R9,#+45
   \   0000059E   0xE001             B.N      ??log_config_info_42
   \                     ??log_config_info_41:
   \   000005A0   0xF05F 0x0920      MOVS     R9,#+32
   \                     ??log_config_info_42:
   \   000005A4   0x....             LDR.N    R0,??DataTable3_33
   \   000005A6   0x68C1             LDR      R1,[R0, #+12]
   \   000005A8   0x....             LDR.N    R0,??DataTable3_25  ;; 0x447a0000
   \   000005AA   0x.... 0x....      BL       __aeabi_fmul
   \   000005AE   0x.... 0x....      BL       __aeabi_f2iz
   \   000005B2   0x.... 0x....      BL       abs
   \   000005B6   0x4682             MOV      R10,R0
   \   000005B8   0xF44F 0x7B7A      MOV      R11,#+1000
   \   000005BC   0x....             LDR.N    R0,??DataTable3_33
   \   000005BE   0x68C0             LDR      R0,[R0, #+12]
   \   000005C0   0x.... 0x....      BL       __aeabi_f2iz
   \   000005C4   0x.... 0x....      BL       abs
   \   000005C8   0x0002             MOVS     R2,R0
   \   000005CA   0x....             LDR.N    R0,??DataTable3_33
   \   000005CC   0x68C0             LDR      R0,[R0, #+12]
   \   000005CE   0x2100             MOVS     R1,#+0
   \   000005D0   0x.... 0x....      BL       __aeabi_cfcmple
   \   000005D4   0xD204             BCS.N    ??log_config_info_43
   \   000005D6   0x202D             MOVS     R0,#+45
   \   000005D8   0xE003             B.N      ??log_config_info_44
   \   000005DA   0xBF00             Nop      
   \                     ??log_config_info_26:
   \   000005DC   0x42 0x43          DC8      "BCD"
   \              0x44 0x00    
   \                     ??log_config_info_43:
   \   000005E0   0x2020             MOVS     R0,#+32
   \                     ??log_config_info_44:
   \   000005E2   0xFB96 0xF1F7      SDIV     R1,R6,R7
   \   000005E6   0xFB07 0x6111      MLS      R1,R7,R1,R6
   \   000005EA   0x9107             STR      R1,[SP, #+28]
   \   000005EC   0xF8CD 0x8018      STR      R8,[SP, #+24]
   \   000005F0   0xF8CD 0x9014      STR      R9,[SP, #+20]
   \   000005F4   0xFB9A 0xF1FB      SDIV     R1,R10,R11
   \   000005F8   0xFB0B 0xA111      MLS      R1,R11,R1,R10
   \   000005FC   0x9104             STR      R1,[SP, #+16]
   \   000005FE   0x9203             STR      R2,[SP, #+12]
   \   00000600   0x9002             STR      R0,[SP, #+8]
   \   00000602   0x....             LDR.N    R0,??DataTable3_34
   \   00000604   0x9001             STR      R0,[SP, #+4]
   \   00000606   0x....             LDR.N    R0,??DataTable3_33
   \   00000608   0x6880             LDR      R0,[R0, #+8]
   \   0000060A   0x9000             STR      R0,[SP, #+0]
   \   0000060C   0x....             LDR.N    R0,??DataTable3_33
   \   0000060E   0x6843             LDR      R3,[R0, #+4]
   \   00000610   0x....             LDR.N    R0,??DataTable3_33
   \   00000612   0x6800             LDR      R0,[R0, #+0]
   \   00000614   0x....             LDR.N    R1,??DataTable3_27
   \   00000616   0xF851 0x2020      LDR      R2,[R1, R0, LSL #+2]
   \   0000061A   0x....             LDR.N    R1,??DataTable3_36
   \   0000061C   0x0020             MOVS     R0,R4
   \   0000061E   0x.... 0x....      BL       sprintf
    354            }
    355            
    356            msg+=strlen(msg);
   \                     ??log_config_info_40:
   \   00000622   0x0020             MOVS     R0,R4
   \   00000624   0x.... 0x....      BL       strlen
   \   00000628   0x1904             ADDS     R4,R0,R4
    357            
    358            if( adc2_para.type == 5)
   \   0000062A   0x....             LDR.N    R0,??DataTable3_37
   \   0000062C   0x6800             LDR      R0,[R0, #+0]
   \   0000062E   0x2805             CMP      R0,#+5
   \   00000630   0xD113             BNE.N    ??log_config_info_45
    359            {//土壤水分计
    360              sprintf(msg,"ADC3:%s;%d;%d;%s;%c;,",sensor_type_table[adc2_para.type],\
    361                adc2_para.frq,adc2_para.stype,adc2_para.sname,adc2_para.para0.c[0]);
   \   00000632   0x....             LDR.N    R0,??DataTable3_37
   \   00000634   0x7B00             LDRB     R0,[R0, #+12]
   \   00000636   0x9002             STR      R0,[SP, #+8]
   \   00000638   0x....             LDR.N    R0,??DataTable3_38
   \   0000063A   0x9001             STR      R0,[SP, #+4]
   \   0000063C   0x....             LDR.N    R0,??DataTable3_37
   \   0000063E   0x6880             LDR      R0,[R0, #+8]
   \   00000640   0x9000             STR      R0,[SP, #+0]
   \   00000642   0x....             LDR.N    R0,??DataTable3_37
   \   00000644   0x6843             LDR      R3,[R0, #+4]
   \   00000646   0x....             LDR.N    R0,??DataTable3_37
   \   00000648   0x6800             LDR      R0,[R0, #+0]
   \   0000064A   0x....             LDR.N    R1,??DataTable3_27
   \   0000064C   0xF851 0x2020      LDR      R2,[R1, R0, LSL #+2]
   \   00000650   0x....             LDR.N    R1,??DataTable3_39
   \   00000652   0x0020             MOVS     R0,R4
   \   00000654   0x.... 0x....      BL       sprintf
   \   00000658   0xE059             B.N      ??log_config_info_46
    362            }
    363            else
    364            {
    365              sprintf(msg,"ADC3:%s;%d;%d;%s;%c%d.%03d;%c%d.%03d;,",sensor_type_table[adc2_para.type],\
    366                adc2_para.frq,adc2_para.stype,adc2_para.sname,
    367                adc2_para.para0.f < 0 ?'-':' ',
    368                abs(adc2_para.para0.f),
    369                abs(adc2_para.para0.f*1000)%1000,
    370                adc2_para.para1 < 0 ?'-':' ',
    371                abs(adc2_para.para1),
    372                abs(adc2_para.para1*1000)%1000
    373                );
   \                     ??log_config_info_45:
   \   0000065A   0x....             LDR.N    R0,??DataTable3_37
   \   0000065C   0x6901             LDR      R1,[R0, #+16]
   \   0000065E   0x....             LDR.N    R0,??DataTable3_25  ;; 0x447a0000
   \   00000660   0x.... 0x....      BL       __aeabi_fmul
   \   00000664   0x.... 0x....      BL       __aeabi_f2iz
   \   00000668   0x.... 0x....      BL       abs
   \   0000066C   0x0006             MOVS     R6,R0
   \   0000066E   0xF44F 0x777A      MOV      R7,#+1000
   \   00000672   0x....             LDR.N    R0,??DataTable3_37
   \   00000674   0x6900             LDR      R0,[R0, #+16]
   \   00000676   0x.... 0x....      BL       __aeabi_f2iz
   \   0000067A   0x.... 0x....      BL       abs
   \   0000067E   0x4680             MOV      R8,R0
   \   00000680   0x....             LDR.N    R0,??DataTable3_37
   \   00000682   0x6900             LDR      R0,[R0, #+16]
   \   00000684   0x2100             MOVS     R1,#+0
   \   00000686   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000068A   0xD202             BCS.N    ??log_config_info_47
   \   0000068C   0xF05F 0x092D      MOVS     R9,#+45
   \   00000690   0xE001             B.N      ??log_config_info_48
   \                     ??log_config_info_47:
   \   00000692   0xF05F 0x0920      MOVS     R9,#+32
   \                     ??log_config_info_48:
   \   00000696   0x....             LDR.N    R0,??DataTable3_37
   \   00000698   0x68C1             LDR      R1,[R0, #+12]
   \   0000069A   0x....             LDR.N    R0,??DataTable3_25  ;; 0x447a0000
   \   0000069C   0x.... 0x....      BL       __aeabi_fmul
   \   000006A0   0x.... 0x....      BL       __aeabi_f2iz
   \   000006A4   0x.... 0x....      BL       abs
   \   000006A8   0x4682             MOV      R10,R0
   \   000006AA   0xF44F 0x7B7A      MOV      R11,#+1000
   \   000006AE   0x....             LDR.N    R0,??DataTable3_37
   \   000006B0   0x68C0             LDR      R0,[R0, #+12]
   \   000006B2   0x.... 0x....      BL       __aeabi_f2iz
   \   000006B6   0x.... 0x....      BL       abs
   \   000006BA   0x0002             MOVS     R2,R0
   \   000006BC   0x....             LDR.N    R0,??DataTable3_37
   \   000006BE   0x68C0             LDR      R0,[R0, #+12]
   \   000006C0   0x2100             MOVS     R1,#+0
   \   000006C2   0x.... 0x....      BL       __aeabi_cfcmple
   \   000006C6   0xD201             BCS.N    ??log_config_info_49
   \   000006C8   0x202D             MOVS     R0,#+45
   \   000006CA   0xE000             B.N      ??log_config_info_50
   \                     ??log_config_info_49:
   \   000006CC   0x2020             MOVS     R0,#+32
   \                     ??log_config_info_50:
   \   000006CE   0xFB96 0xF1F7      SDIV     R1,R6,R7
   \   000006D2   0xFB07 0x6111      MLS      R1,R7,R1,R6
   \   000006D6   0x9107             STR      R1,[SP, #+28]
   \   000006D8   0xF8CD 0x8018      STR      R8,[SP, #+24]
   \   000006DC   0xF8CD 0x9014      STR      R9,[SP, #+20]
   \   000006E0   0xFB9A 0xF1FB      SDIV     R1,R10,R11
   \   000006E4   0xFB0B 0xA111      MLS      R1,R11,R1,R10
   \   000006E8   0x9104             STR      R1,[SP, #+16]
   \   000006EA   0x9203             STR      R2,[SP, #+12]
   \   000006EC   0x9002             STR      R0,[SP, #+8]
   \   000006EE   0x....             LDR.N    R0,??DataTable3_38
   \   000006F0   0x9001             STR      R0,[SP, #+4]
   \   000006F2   0x....             LDR.N    R0,??DataTable3_37
   \   000006F4   0x6880             LDR      R0,[R0, #+8]
   \   000006F6   0x9000             STR      R0,[SP, #+0]
   \   000006F8   0x....             LDR.N    R0,??DataTable3_37
   \   000006FA   0x6843             LDR      R3,[R0, #+4]
   \   000006FC   0x....             LDR.N    R0,??DataTable3_37
   \   000006FE   0x6800             LDR      R0,[R0, #+0]
   \   00000700   0x....             LDR.N    R1,??DataTable3_27
   \   00000702   0xF851 0x2020      LDR      R2,[R1, R0, LSL #+2]
   \   00000706   0x....             LDR.N    R1,??DataTable3_40
   \   00000708   0x0020             MOVS     R0,R4
   \   0000070A   0x.... 0x....      BL       sprintf
    374            }
    375            
    376            msg+=strlen(msg);
   \                     ??log_config_info_46:
   \   0000070E   0x0020             MOVS     R0,R4
   \   00000710   0x.... 0x....      BL       strlen
   \   00000714   0x1904             ADDS     R4,R0,R4
    377            
    378            /** rs232 **/
    379            sprintf(msg,"RS232:%s;%d;%d;%s;,",sensor_type_table[rs232_para.type],\
    380              rs232_para.frq,rs232_para.baud,rs232_para.sname);
   \   00000716   0x....             LDR.N    R0,??DataTable3_41
   \   00000718   0x9001             STR      R0,[SP, #+4]
   \   0000071A   0x....             LDR.N    R0,??DataTable3_4
   \   0000071C   0x6880             LDR      R0,[R0, #+8]
   \   0000071E   0x9000             STR      R0,[SP, #+0]
   \   00000720   0x....             LDR.N    R0,??DataTable3_4
   \   00000722   0x6843             LDR      R3,[R0, #+4]
   \   00000724   0x....             LDR.N    R0,??DataTable3_4
   \   00000726   0x6800             LDR      R0,[R0, #+0]
   \   00000728   0x....             LDR.N    R1,??DataTable3_27
   \   0000072A   0xF851 0x2020      LDR      R2,[R1, R0, LSL #+2]
   \   0000072E   0x....             LDR.N    R1,??DataTable3_42
   \   00000730   0x0020             MOVS     R0,R4
   \   00000732   0x.... 0x....      BL       sprintf
    381            
    382            msg+=strlen(msg);
   \   00000736   0x0020             MOVS     R0,R4
   \   00000738   0x.... 0x....      BL       strlen
   \   0000073C   0x1904             ADDS     R4,R0,R4
    383            
    384            sprintf(msg,"PWM:%s;%d;%s;\r\n",sensor_type_table[pwm_para.type],\
    385              pwm_para.frq,pwm_para.sname);
   \   0000073E   0x....             LDR.N    R0,??DataTable3_43
   \   00000740   0x9000             STR      R0,[SP, #+0]
   \   00000742   0x....             LDR.N    R0,??DataTable3_44
   \   00000744   0x6843             LDR      R3,[R0, #+4]
   \   00000746   0x....             LDR.N    R0,??DataTable3_44
   \   00000748   0x6800             LDR      R0,[R0, #+0]
   \   0000074A   0x....             LDR.N    R1,??DataTable3_27
   \   0000074C   0xF851 0x2020      LDR      R2,[R1, R0, LSL #+2]
   \   00000750   0x....             LDR.N    R1,??DataTable3_45
   \   00000752   0x0020             MOVS     R0,R4
   \   00000754   0x.... 0x....      BL       sprintf
    386            
    387          }
   \   00000758   0xB031             ADD      SP,SP,#+196
   \   0000075A   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return

   \                                 In section .text, align 2, keep-with-next
    388          static void reply_cmd(unsigned char *pMsg, unsigned short Length)
    389          {
   \                     reply_cmd:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    390            if(g_RtuStatus.cmd_port == 1)
   \   00000006   0x....             LDR.N    R0,??DataTable3_7
   \   00000008   0xF890 0x002F      LDRB     R0,[R0, #+47]
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xD106             BNE.N    ??reply_cmd_0
    391            {
    392              SendOutHardware(PORT_ID_COM, pMsg, Length);
   \   00000010   0x002A             MOVS     R2,R5
   \   00000012   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000014   0x0021             MOVS     R1,R4
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x.... 0x....      BL       SendOutHardware
   \   0000001C   0xE015             B.N      ??reply_cmd_1
    393            }
    394            else if(g_RtuStatus.cmd_port == 2)
   \                     ??reply_cmd_0:
   \   0000001E   0x....             LDR.N    R0,??DataTable3_7
   \   00000020   0xF890 0x002F      LDRB     R0,[R0, #+47]
   \   00000024   0x2802             CMP      R0,#+2
   \   00000026   0xD106             BNE.N    ??reply_cmd_2
    395            {
    396              SendDataByGPRS(0,pMsg, Length);
   \   00000028   0x002A             MOVS     R2,R5
   \   0000002A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000002C   0x0021             MOVS     R1,R4
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x.... 0x....      BL       SendDataByGPRS
   \   00000034   0xE009             B.N      ??reply_cmd_1
    397            }
    398            else if(g_RtuStatus.cmd_port == 3)
   \                     ??reply_cmd_2:
   \   00000036   0x....             LDR.N    R0,??DataTable3_7
   \   00000038   0xF890 0x002F      LDRB     R0,[R0, #+47]
   \   0000003C   0x2803             CMP      R0,#+3
   \   0000003E   0xD104             BNE.N    ??reply_cmd_1
    399            {
    400              SetBD_TXSQ(pMsg, Length);
   \   00000040   0x0029             MOVS     R1,R5
   \   00000042   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0x.... 0x....      BL       SetBD_TXSQ
    401            }
    402            
    403          }
   \                     ??reply_cmd_1:
   \   0000004A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    404          

   \                                 In section .text, align 4, keep-with-next
    405          void ProcessMsg_HUACE(unsigned char *pMsg, unsigned short Length)
    406          {
   \                     ProcessMsg_HUACE:
   \   00000000   0xE92D 0x4FF2      PUSH     {R1,R4-R11,LR}
   \   00000004   0xF5AD 0x6D03      SUB      SP,SP,#+2096
   \   00000008   0x0004             MOVS     R4,R0
    407            
    408          	UINT8 CmdHead[8] = {0};
   \   0000000A   0xA83E             ADD      R0,SP,#+248
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x2200             MOVS     R2,#+0
   \   00000010   0xC006             STM      R0!,{R1,R2}
   \   00000012   0x3808             SUBS     R0,R0,#+8
    409          	UINT8 CmdId[20] = {0};
   \   00000014   0xA822             ADD      R0,SP,#+136
   \   00000016   0x2114             MOVS     R1,#+20
   \   00000018   0x.... 0x....      BL       __aeabi_memclr4
    410          	UINT8 CmdPara[50] = {0};
   \   0000001C   0xA814             ADD      R0,SP,#+80
   \   0000001E   0x2134             MOVS     R1,#+52
   \   00000020   0x.... 0x....      BL       __aeabi_memclr4
    411            
    412            GetField(pMsg, CmdHead, 0);
   \   00000024   0x2200             MOVS     R2,#+0
   \   00000026   0xA93E             ADD      R1,SP,#+248
   \   00000028   0x0020             MOVS     R0,R4
   \   0000002A   0x.... 0x....      BL       GetField
    413            if(strcmp((const char *)CmdHead,"$0") != 0)
   \   0000002E   0xA1B7             ADR.N    R1,??ProcessMsg_HUACE_0  ;; 0x24, 0x30, 0x00, 0x00
   \   00000030   0xA83E             ADD      R0,SP,#+248
   \   00000032   0x.... 0x....      BL       strcmp
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD016             BEQ.N    ??ProcessMsg_HUACE_1
    414            {
    415          	if(g_Debug.HcMsg)
   \   0000003A   0xF8DF 0x0CC8      LDR.W    R0,??ProcessMsg_HUACE_2+0x8
   \   0000003E   0x7900             LDRB     R0,[R0, #+4]
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD00B             BEQ.N    ??ProcessMsg_HUACE_3
    416          	{
    417          		DebugMsg("********\r\n");
   \   00000044   0x48B3             LDR.N    R0,??ProcessMsg_HUACE_0+0x8
   \   00000046   0x.... 0x....      BL       DebugMsg
    418          		SendOutHardware(PORT_ID_COM, (UINT8*)pMsg, Length);
   \   0000004A   0xF8BD 0x2830      LDRH     R2,[SP, #+2096]
   \   0000004E   0x0021             MOVS     R1,R4
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x.... 0x....      BL       SendOutHardware
    419          		DebugMsg("********\r\n");
   \   00000056   0x48AF             LDR.N    R0,??ProcessMsg_HUACE_0+0x8
   \   00000058   0x.... 0x....      BL       DebugMsg
    420          	}
    421              DebugMsg("hc msg err !!! \r\n");
   \                     ??ProcessMsg_HUACE_3:
   \   0000005C   0xF8DF 0x0CA8      LDR.W    R0,??ProcessMsg_HUACE_2+0xC
   \   00000060   0x.... 0x....      BL       DebugMsg
    422              return;
   \   00000064   0xF002 0xB9DB      B.W      ??ProcessMsg_HUACE_4
    423            }
    424            GetField(pMsg, CmdId, 1);
   \                     ??ProcessMsg_HUACE_1:
   \   00000068   0x2201             MOVS     R2,#+1
   \   0000006A   0xA922             ADD      R1,SP,#+136
   \   0000006C   0x0020             MOVS     R0,R4
   \   0000006E   0x.... 0x....      BL       GetField
    425            if(strcmp((const char *)CmdId,"COMMOD") == 0)//need reboot
   \   00000072   0xF8DF 0x1C9C      LDR.W    R1,??ProcessMsg_HUACE_2+0x14
   \   00000076   0xA822             ADD      R0,SP,#+136
   \   00000078   0x.... 0x....      BL       strcmp
   \   0000007C   0x2800             CMP      R0,#+0
   \   0000007E   0xD134             BNE.N    ??ProcessMsg_HUACE_5
    426            {
    427              DbgMsg("COMMOD need reboot\r\n");
   \   00000080   0xF8DF 0x0C90      LDR.W    R0,??ProcessMsg_HUACE_2+0x18
   \   00000084   0x.... 0x....      BL       DbgMsg
    428              GetField(pMsg, CmdPara, 2);
   \   00000088   0x2202             MOVS     R2,#+2
   \   0000008A   0xA914             ADD      R1,SP,#+80
   \   0000008C   0x0020             MOVS     R0,R4
   \   0000008E   0x.... 0x....      BL       GetField
    429              if(strcmp((const char *)CmdPara,"BD") == 0)
   \   00000092   0xA19F             ADR.N    R1,??ProcessMsg_HUACE_0+0x4  ;; 0x42, 0x44, 0x00, 0x00
   \   00000094   0xA814             ADD      R0,SP,#+80
   \   00000096   0x.... 0x....      BL       strcmp
   \   0000009A   0x2800             CMP      R0,#+0
   \   0000009C   0xD105             BNE.N    ??ProcessMsg_HUACE_6
    430                g_Byte128[32+0] = 1;
   \   0000009E   0xF8DF 0x0C78      LDR.W    R0,??ProcessMsg_HUACE_2+0x1C
   \   000000A2   0x2101             MOVS     R1,#+1
   \   000000A4   0xF880 0x1020      STRB     R1,[R0, #+32]
   \   000000A8   0xE018             B.N      ??ProcessMsg_HUACE_7
    431              else if(strcmp((const char *)CmdPara,"GPRS") == 0)
   \                     ??ProcessMsg_HUACE_6:
   \   000000AA   0xF8DF 0x1C70      LDR.W    R1,??ProcessMsg_HUACE_2+0x20
   \   000000AE   0xA814             ADD      R0,SP,#+80
   \   000000B0   0x.... 0x....      BL       strcmp
   \   000000B4   0x2800             CMP      R0,#+0
   \   000000B6   0xD105             BNE.N    ??ProcessMsg_HUACE_8
    432                g_Byte128[32+0] = 2;
   \   000000B8   0xF8DF 0x0C5C      LDR.W    R0,??ProcessMsg_HUACE_2+0x1C
   \   000000BC   0x2102             MOVS     R1,#+2
   \   000000BE   0xF880 0x1020      STRB     R1,[R0, #+32]
   \   000000C2   0xE00B             B.N      ??ProcessMsg_HUACE_7
    433              else if(strcmp((const char *)CmdPara,"AUTO") == 0)
   \                     ??ProcessMsg_HUACE_8:
   \   000000C4   0xF8DF 0x1C58      LDR.W    R1,??ProcessMsg_HUACE_2+0x24
   \   000000C8   0xA814             ADD      R0,SP,#+80
   \   000000CA   0x.... 0x....      BL       strcmp
   \   000000CE   0x2800             CMP      R0,#+0
   \   000000D0   0xD104             BNE.N    ??ProcessMsg_HUACE_7
    434                g_Byte128[32+0] = 3;
   \   000000D2   0xF8DF 0x0C44      LDR.W    R0,??ProcessMsg_HUACE_2+0x1C
   \   000000D6   0x2103             MOVS     R1,#+3
   \   000000D8   0xF880 0x1020      STRB     R1,[R0, #+32]
    435              reply_cmd(pMsg, Length);
   \                     ??ProcessMsg_HUACE_7:
   \   000000DC   0xF8BD 0x1830      LDRH     R1,[SP, #+2096]
   \   000000E0   0x0020             MOVS     R0,R4
   \   000000E2   0x.... 0x....      BL       reply_cmd
   \   000000E6   0xF002 0xB998      B.W      ??ProcessMsg_HUACE_9
    436            }
    437            else if(strcmp((const char *)CmdId,"DSTIC") == 0)
   \                     ??ProcessMsg_HUACE_5:
   \   000000EA   0xF8DF 0x1C38      LDR.W    R1,??ProcessMsg_HUACE_2+0x28
   \   000000EE   0xA822             ADD      R0,SP,#+136
   \   000000F0   0x.... 0x....      BL       strcmp
   \   000000F4   0x2800             CMP      R0,#+0
   \   000000F6   0xD134             BNE.N    ??ProcessMsg_HUACE_10
    438            {
    439              DbgMsg("DSTIC \r\n");
   \   000000F8   0xF8DF 0x0C2C      LDR.W    R0,??ProcessMsg_HUACE_2+0x2C
   \   000000FC   0x.... 0x....      BL       DbgMsg
    440              GetField(pMsg, CmdPara, 2);
   \   00000100   0x2202             MOVS     R2,#+2
   \   00000102   0xA914             ADD      R1,SP,#+80
   \   00000104   0x0020             MOVS     R0,R4
   \   00000106   0x.... 0x....      BL       GetField
    441              bd_para.dist_ic = atoi((const char *)CmdPara);
   \   0000010A   0xA814             ADD      R0,SP,#+80
   \   0000010C   0x.... 0x....      BL       atoi
   \   00000110   0xF8DF 0x1C18      LDR.W    R1,??ProcessMsg_HUACE_2+0x30
   \   00000114   0x60C8             STR      R0,[R1, #+12]
    442              g_Byte128[32+1] = bd_para.dist_ic >> 24;
   \   00000116   0xF8DF 0x0C14      LDR.W    R0,??ProcessMsg_HUACE_2+0x30
   \   0000011A   0x68C0             LDR      R0,[R0, #+12]
   \   0000011C   0x0E00             LSRS     R0,R0,#+24
   \   0000011E   0xF8DF 0x1BF8      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   00000122   0xF881 0x0021      STRB     R0,[R1, #+33]
    443              g_Byte128[32+2] = bd_para.dist_ic >> 16;
   \   00000126   0xF8DF 0x0C04      LDR.W    R0,??ProcessMsg_HUACE_2+0x30
   \   0000012A   0x68C0             LDR      R0,[R0, #+12]
   \   0000012C   0x0C00             LSRS     R0,R0,#+16
   \   0000012E   0xF8DF 0x1BE8      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   00000132   0xF881 0x0022      STRB     R0,[R1, #+34]
    444              g_Byte128[32+3] = bd_para.dist_ic >> 8;
   \   00000136   0xF8DF 0x0BF4      LDR.W    R0,??ProcessMsg_HUACE_2+0x30
   \   0000013A   0x68C0             LDR      R0,[R0, #+12]
   \   0000013C   0x0A00             LSRS     R0,R0,#+8
   \   0000013E   0xF8DF 0x1BD8      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   00000142   0xF881 0x0023      STRB     R0,[R1, #+35]
    445              g_Byte128[32+4] = bd_para.dist_ic >> 0;
   \   00000146   0xF8DF 0x0BD0      LDR.W    R0,??ProcessMsg_HUACE_2+0x1C
   \   0000014A   0xF8DF 0x1BE0      LDR.W    R1,??ProcessMsg_HUACE_2+0x30
   \   0000014E   0x68C9             LDR      R1,[R1, #+12]
   \   00000150   0xF880 0x1024      STRB     R1,[R0, #+36]
    446              reply_cmd(pMsg, Length);
   \   00000154   0xF8BD 0x1830      LDRH     R1,[SP, #+2096]
   \   00000158   0x0020             MOVS     R0,R4
   \   0000015A   0x.... 0x....      BL       reply_cmd
   \   0000015E   0xF002 0xB95C      B.W      ??ProcessMsg_HUACE_9
    447            }
    448            else if(strcmp((const char *)CmdId,"DSTIP") == 0)//need reboot
   \                     ??ProcessMsg_HUACE_10:
   \   00000162   0xF8DF 0x1E04      LDR.W    R1,??ProcessMsg_HUACE_11
   \   00000166   0xA822             ADD      R0,SP,#+136
   \   00000168   0x.... 0x....      BL       strcmp
   \   0000016C   0x2800             CMP      R0,#+0
   \   0000016E   0xD159             BNE.N    ??ProcessMsg_HUACE_12
    449            {
    450              UINT8 str[10];
    451              DbgMsg("DSTIP need reboot\r\n");
   \   00000170   0xF8DF 0x0DF8      LDR.W    R0,??ProcessMsg_HUACE_11+0x4
   \   00000174   0x.... 0x....      BL       DbgMsg
    452              GetField(pMsg, CmdPara, 2);
   \   00000178   0x2202             MOVS     R2,#+2
   \   0000017A   0xA914             ADD      R1,SP,#+80
   \   0000017C   0x0020             MOVS     R0,R4
   \   0000017E   0x.... 0x....      BL       GetField
    453              sprintf((char *)CmdPara,"%s\r\n",CmdPara);
   \   00000182   0xAA14             ADD      R2,SP,#+80
   \   00000184   0xF8DF 0x1DE8      LDR.W    R1,??ProcessMsg_HUACE_11+0x8
   \   00000188   0xA814             ADD      R0,SP,#+80
   \   0000018A   0x.... 0x....      BL       sprintf
    454              GetField_IP(CmdPara, str, 0);
   \   0000018E   0x2200             MOVS     R2,#+0
   \   00000190   0xA93B             ADD      R1,SP,#+236
   \   00000192   0xA814             ADD      R0,SP,#+80
   \   00000194   0x.... 0x....      BL       GetField_IP
    455              g_Byte128[32+5] = atoi((const char *)str);
   \   00000198   0xA83B             ADD      R0,SP,#+236
   \   0000019A   0x.... 0x....      BL       atoi
   \   0000019E   0xF8DF 0x1B78      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   000001A2   0xF881 0x0025      STRB     R0,[R1, #+37]
    456              GetField_IP(CmdPara, str, 1);
   \   000001A6   0x2201             MOVS     R2,#+1
   \   000001A8   0xA93B             ADD      R1,SP,#+236
   \   000001AA   0xA814             ADD      R0,SP,#+80
   \   000001AC   0x.... 0x....      BL       GetField_IP
    457              g_Byte128[32+6] = atoi((const char *)str);
   \   000001B0   0xA83B             ADD      R0,SP,#+236
   \   000001B2   0x.... 0x....      BL       atoi
   \   000001B6   0xF8DF 0x1B60      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   000001BA   0xF881 0x0026      STRB     R0,[R1, #+38]
    458              GetField_IP(CmdPara, str, 2);
   \   000001BE   0x2202             MOVS     R2,#+2
   \   000001C0   0xA93B             ADD      R1,SP,#+236
   \   000001C2   0xA814             ADD      R0,SP,#+80
   \   000001C4   0x.... 0x....      BL       GetField_IP
    459              g_Byte128[32+7] = atoi((const char *)str);
   \   000001C8   0xA83B             ADD      R0,SP,#+236
   \   000001CA   0x.... 0x....      BL       atoi
   \   000001CE   0xF8DF 0x1B48      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   000001D2   0xF881 0x0027      STRB     R0,[R1, #+39]
    460              GetField_IP(CmdPara, str, 3);
   \   000001D6   0x2203             MOVS     R2,#+3
   \   000001D8   0xA93B             ADD      R1,SP,#+236
   \   000001DA   0xA814             ADD      R0,SP,#+80
   \   000001DC   0x.... 0x....      BL       GetField_IP
    461              g_Byte128[32+8] = atoi((const char *)str);
   \   000001E0   0xA83B             ADD      R0,SP,#+236
   \   000001E2   0x.... 0x....      BL       atoi
   \   000001E6   0xF8DF 0x1B30      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   000001EA   0xF881 0x0028      STRB     R0,[R1, #+40]
    462              
    463              GetField(pMsg, CmdPara, 3);
   \   000001EE   0x2203             MOVS     R2,#+3
   \   000001F0   0xA914             ADD      R1,SP,#+80
   \   000001F2   0x0020             MOVS     R0,R4
   \   000001F4   0x.... 0x....      BL       GetField
    464              g_Byte128[32+9]  = atoi((const char *)CmdPara) >> 8 ;
   \   000001F8   0xA814             ADD      R0,SP,#+80
   \   000001FA   0x.... 0x....      BL       atoi
   \   000001FE   0x1200             ASRS     R0,R0,#+8
   \   00000200   0xF8DF 0x1B14      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   00000204   0xF881 0x0029      STRB     R0,[R1, #+41]
    465              g_Byte128[32+10] = atoi((const char *)CmdPara) >> 0 ;
   \   00000208   0xA814             ADD      R0,SP,#+80
   \   0000020A   0x.... 0x....      BL       atoi
   \   0000020E   0xF8DF 0x1B08      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   00000212   0xF881 0x002A      STRB     R0,[R1, #+42]
    466              
    467              reply_cmd(pMsg, Length);
   \   00000216   0xF8BD 0x1830      LDRH     R1,[SP, #+2096]
   \   0000021A   0x0020             MOVS     R0,R4
   \   0000021C   0x.... 0x....      BL       reply_cmd
   \   00000220   0xF002 0xB8FB      B.W      ??ProcessMsg_HUACE_9
    468            }
    469            else if(strcmp((const char *)CmdId,"TERMCONF") == 0)
   \                     ??ProcessMsg_HUACE_12:
   \   00000224   0xF8DF 0x1D4C      LDR.W    R1,??ProcessMsg_HUACE_11+0xC
   \   00000228   0xA822             ADD      R0,SP,#+136
   \   0000022A   0x.... 0x....      BL       strcmp
   \   0000022E   0x2800             CMP      R0,#+0
   \   00000230   0xF040 0x81B1      BNE.W    ??ProcessMsg_HUACE_13
    470            {
    471              
    472              DebugMsg("admin TERMCONF\r\n");
   \   00000234   0xF8DF 0x0D40      LDR.W    R0,??ProcessMsg_HUACE_11+0x10
   \   00000238   0x.... 0x....      BL       DebugMsg
    473              /** RTUID **/
    474              GetField(pMsg, CmdPara, 2);
   \   0000023C   0x2202             MOVS     R2,#+2
   \   0000023E   0xA914             ADD      R1,SP,#+80
   \   00000240   0x0020             MOVS     R0,R4
   \   00000242   0x.... 0x....      BL       GetField
    475              
    476              if( strlen(CmdPara) <= 32)
   \   00000246   0xA814             ADD      R0,SP,#+80
   \   00000248   0x.... 0x....      BL       strlen
   \   0000024C   0x2821             CMP      R0,#+33
   \   0000024E   0xD204             BCS.N    ??ProcessMsg_HUACE_14
    477              {
    478                strcpy(g_RtuConfig.rtuid, CmdPara);
   \   00000250   0xA914             ADD      R1,SP,#+80
   \   00000252   0xF8DF 0x0D28      LDR.W    R0,??ProcessMsg_HUACE_11+0x14
   \   00000256   0x.... 0x....      BL       strcpy
    479              }
    480              
    481              memcpy(&g_Byte128[32+73],g_RtuConfig.rtuid,32);
   \                     ??ProcessMsg_HUACE_14:
   \   0000025A   0x2220             MOVS     R2,#+32
   \   0000025C   0xF8DF 0x1D1C      LDR.W    R1,??ProcessMsg_HUACE_11+0x14
   \   00000260   0xF8DF 0x0D1C      LDR.W    R0,??ProcessMsg_HUACE_11+0x18
   \   00000264   0x.... 0x....      BL       memcpy
    482              
    483              /** COMMOD **/
    484              GetField(pMsg, CmdPara, 3);
   \   00000268   0x2203             MOVS     R2,#+3
   \   0000026A   0xA914             ADD      R1,SP,#+80
   \   0000026C   0x0020             MOVS     R0,R4
   \   0000026E   0x.... 0x....      BL       GetField
    485              if( strcmp(CmdPara,"AUTO") == 0)
   \   00000272   0xF8DF 0x1AAC      LDR.W    R1,??ProcessMsg_HUACE_2+0x24
   \   00000276   0xA814             ADD      R0,SP,#+80
   \   00000278   0x.... 0x....      BL       strcmp
   \   0000027C   0x2800             CMP      R0,#+0
   \   0000027E   0xD113             BNE.N    ??ProcessMsg_HUACE_15
    486              {
    487          
    488                if( g_RtuConfig.commod != 3)
   \   00000280   0xF8DF 0x0D00      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   00000284   0x7800             LDRB     R0,[R0, #+0]
   \   00000286   0x2803             CMP      R0,#+3
   \   00000288   0xD009             BEQ.N    ??ProcessMsg_HUACE_16
    489                {
    490                Telit_Connection_State = T_CHECK_SIMCARD;
   \   0000028A   0xF8DF 0x0CFC      LDR.W    R0,??ProcessMsg_HUACE_11+0x20
   \   0000028E   0x2100             MOVS     R1,#+0
   \   00000290   0x7001             STRB     R1,[R0, #+0]
    491                      /** 开GPRS电源 **/
    492                GPIO_OutputValue(3,1<<24,1);
   \   00000292   0x2201             MOVS     R2,#+1
   \   00000294   0xF05F 0x7180      MOVS     R1,#+16777216
   \   00000298   0x2003             MOVS     R0,#+3
   \   0000029A   0x.... 0x....      BL       GPIO_OutputValue
    493                }
    494          //      GprsSoftReset();
    495                g_RtuConfig.commod = 3;
   \                     ??ProcessMsg_HUACE_16:
   \   0000029E   0xF8DF 0x0CE4      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   000002A2   0x2103             MOVS     R1,#+3
   \   000002A4   0x7001             STRB     R1,[R0, #+0]
   \   000002A6   0xE045             B.N      ??ProcessMsg_HUACE_17
    496              }
    497              else if(strcmp(CmdPara,"GPRS") == 0)
   \                     ??ProcessMsg_HUACE_15:
   \   000002A8   0xF8DF 0x1A70      LDR.W    R1,??ProcessMsg_HUACE_2+0x20
   \   000002AC   0xA814             ADD      R0,SP,#+80
   \   000002AE   0x.... 0x....      BL       strcmp
   \   000002B2   0x2800             CMP      R0,#+0
   \   000002B4   0xD113             BNE.N    ??ProcessMsg_HUACE_18
    498              {
    499                if( g_RtuConfig.commod != 2)
   \   000002B6   0xF8DF 0x0CCC      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   000002BA   0x7800             LDRB     R0,[R0, #+0]
   \   000002BC   0x2802             CMP      R0,#+2
   \   000002BE   0xD009             BEQ.N    ??ProcessMsg_HUACE_19
    500                {
    501                Telit_Connection_State = T_CHECK_SIMCARD;
   \   000002C0   0xF8DF 0x0CC4      LDR.W    R0,??ProcessMsg_HUACE_11+0x20
   \   000002C4   0x2100             MOVS     R1,#+0
   \   000002C6   0x7001             STRB     R1,[R0, #+0]
    502                      /** 开GPRS电源 **/
    503                GPIO_OutputValue(3,1<<24,1);
   \   000002C8   0x2201             MOVS     R2,#+1
   \   000002CA   0xF05F 0x7180      MOVS     R1,#+16777216
   \   000002CE   0x2003             MOVS     R0,#+3
   \   000002D0   0x.... 0x....      BL       GPIO_OutputValue
    504                }
    505          //      GprsSoftReset();
    506                
    507                g_RtuConfig.commod = 2;
   \                     ??ProcessMsg_HUACE_19:
   \   000002D4   0xF8DF 0x0CAC      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   000002D8   0x2102             MOVS     R1,#+2
   \   000002DA   0x7001             STRB     R1,[R0, #+0]
   \   000002DC   0xE02A             B.N      ??ProcessMsg_HUACE_17
    508              }
    509              else if(strcmp(CmdPara,"BD") == 0)
   \                     ??ProcessMsg_HUACE_18:
   \   000002DE   0xA10C             ADR.N    R1,??ProcessMsg_HUACE_0+0x4  ;; 0x42, 0x44, 0x00, 0x00
   \   000002E0   0xA814             ADD      R0,SP,#+80
   \   000002E2   0x.... 0x....      BL       strcmp
   \   000002E6   0x2800             CMP      R0,#+0
   \   000002E8   0xD116             BNE.N    ??ProcessMsg_HUACE_20
    510              {
    511                g_RtuConfig.commod = 1;
   \   000002EA   0xF8DF 0x0C98      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   000002EE   0x2101             MOVS     R1,#+1
   \   000002F0   0x7001             STRB     R1,[R0, #+0]
    512                
    513                //关闭GPRS电源
    514                GPIO_OutputValue(3,1<<24,0);
   \   000002F2   0x2200             MOVS     R2,#+0
   \   000002F4   0xF05F 0x7180      MOVS     R1,#+16777216
   \   000002F8   0x2003             MOVS     R0,#+3
   \   000002FA   0x.... 0x....      BL       GPIO_OutputValue
    515                
    516                //关闭指示灯
    517                g_RtuStatus.led_gprs_st = 0;
   \   000002FE   0xF8DF 0x0C8C      LDR.W    R0,??ProcessMsg_HUACE_11+0x24
   \   00000302   0x2100             MOVS     R1,#+0
   \   00000304   0xF880 0x1034      STRB     R1,[R0, #+52]
   \   00000308   0xE014             B.N      ??ProcessMsg_HUACE_17
   \   0000030A   0xBF00             Nop      
   \                     ??ProcessMsg_HUACE_0:
   \   0000030C   0x24 0x30          DC8      0x24, 0x30, 0x00, 0x00
   \              0x00 0x00    
   \   00000310   0x42 0x44          DC8      0x42, 0x44, 0x00, 0x00
   \              0x00 0x00    
   \   00000314   0x........         DC32     `?<Constant "********\\r\\n">`
    518                
    519              }
    520              else
    521              {
    522                Telit_Connection_State = T_CHECK_SIMCARD;
   \                     ??ProcessMsg_HUACE_20:
   \   00000318   0xF8DF 0x0C6C      LDR.W    R0,??ProcessMsg_HUACE_11+0x20
   \   0000031C   0x2100             MOVS     R1,#+0
   \   0000031E   0x7001             STRB     R1,[R0, #+0]
    523                      /** 开GPRS电源 **/
    524                GPIO_OutputValue(3,1<<24,1);
   \   00000320   0x2201             MOVS     R2,#+1
   \   00000322   0xF05F 0x7180      MOVS     R1,#+16777216
   \   00000326   0x2003             MOVS     R0,#+3
   \   00000328   0x.... 0x....      BL       GPIO_OutputValue
    525                
    526                g_RtuConfig.commod = 3;
   \   0000032C   0xF8DF 0x0C54      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   00000330   0x2103             MOVS     R1,#+3
   \   00000332   0x7001             STRB     R1,[R0, #+0]
    527              }
    528              
    529              g_Byte128[32+0] = g_RtuConfig.commod;
   \                     ??ProcessMsg_HUACE_17:
   \   00000334   0xF8DF 0x09E0      LDR.W    R0,??ProcessMsg_HUACE_2+0x1C
   \   00000338   0xF8DF 0x1C48      LDR.W    R1,??ProcessMsg_HUACE_11+0x1C
   \   0000033C   0x7809             LDRB     R1,[R1, #+0]
   \   0000033E   0xF880 0x1020      STRB     R1,[R0, #+32]
    530              
    531              /** USRBAUD **/
    532              
    533              GetField(pMsg, CmdPara, 4);
   \   00000342   0x2204             MOVS     R2,#+4
   \   00000344   0xA914             ADD      R1,SP,#+80
   \   00000346   0x0020             MOVS     R0,R4
   \   00000348   0x.... 0x....      BL       GetField
    534              
    535              int baud = atoi((const char *)CmdPara);
   \   0000034C   0xA814             ADD      R0,SP,#+80
   \   0000034E   0x.... 0x....      BL       atoi
   \   00000352   0x0005             MOVS     R5,R0
    536              if(baud == 4800)
   \   00000354   0xF5B5 0x5F96      CMP      R5,#+4800
   \   00000358   0xD104             BNE.N    ??ProcessMsg_HUACE_21
    537                g_RtuConfig.usr_baud = 1;
   \   0000035A   0xF8DF 0x0C28      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   0000035E   0x2101             MOVS     R1,#+1
   \   00000360   0x7481             STRB     R1,[R0, #+18]
   \   00000362   0xE026             B.N      ??ProcessMsg_HUACE_22
    538              else if(baud == 9600)
   \                     ??ProcessMsg_HUACE_21:
   \   00000364   0xF5B5 0x5F16      CMP      R5,#+9600
   \   00000368   0xD104             BNE.N    ??ProcessMsg_HUACE_23
    539                g_RtuConfig.usr_baud = 2;
   \   0000036A   0xF8DF 0x0C18      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   0000036E   0x2102             MOVS     R1,#+2
   \   00000370   0x7481             STRB     R1,[R0, #+18]
   \   00000372   0xE01E             B.N      ??ProcessMsg_HUACE_22
    540              else if(baud == 19200)
   \                     ??ProcessMsg_HUACE_23:
   \   00000374   0xF5B5 0x4F96      CMP      R5,#+19200
   \   00000378   0xD104             BNE.N    ??ProcessMsg_HUACE_24
    541                g_RtuConfig.usr_baud = 3;
   \   0000037A   0xF8DF 0x0C08      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   0000037E   0x2103             MOVS     R1,#+3
   \   00000380   0x7481             STRB     R1,[R0, #+18]
   \   00000382   0xE016             B.N      ??ProcessMsg_HUACE_22
    542              else if(baud == 57600)
   \                     ??ProcessMsg_HUACE_24:
   \   00000384   0xF5B5 0x4F61      CMP      R5,#+57600
   \   00000388   0xD104             BNE.N    ??ProcessMsg_HUACE_25
    543                g_RtuConfig.usr_baud = 4;
   \   0000038A   0xF8DF 0x0BF8      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   0000038E   0x2104             MOVS     R1,#+4
   \   00000390   0x7481             STRB     R1,[R0, #+18]
   \   00000392   0xE00E             B.N      ??ProcessMsg_HUACE_22
    544              else if(baud == 115200)
   \                     ??ProcessMsg_HUACE_25:
   \   00000394   0xF5B5 0x3FE1      CMP      R5,#+115200
   \   00000398   0xD104             BNE.N    ??ProcessMsg_HUACE_26
    545                g_RtuConfig.usr_baud = 5;
   \   0000039A   0xF8DF 0x0BE8      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   0000039E   0x2105             MOVS     R1,#+5
   \   000003A0   0x7481             STRB     R1,[R0, #+18]
   \   000003A2   0xE006             B.N      ??ProcessMsg_HUACE_22
    546              else if(baud == 38400)
   \                     ??ProcessMsg_HUACE_26:
   \   000003A4   0xF5B5 0x4F16      CMP      R5,#+38400
   \   000003A8   0xD103             BNE.N    ??ProcessMsg_HUACE_22
    547                g_RtuConfig.usr_baud = 6;
   \   000003AA   0xF8DF 0x0BD8      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   000003AE   0x2106             MOVS     R1,#+6
   \   000003B0   0x7481             STRB     R1,[R0, #+18]
    548              
    549              if( g_Byte128[32+15] != g_RtuConfig.usr_baud)
   \                     ??ProcessMsg_HUACE_22:
   \   000003B2   0xF8DF 0x0964      LDR.W    R0,??ProcessMsg_HUACE_2+0x1C
   \   000003B6   0xF890 0x002F      LDRB     R0,[R0, #+47]
   \   000003BA   0xF8DF 0x1BC8      LDR.W    R1,??ProcessMsg_HUACE_11+0x1C
   \   000003BE   0x7C89             LDRB     R1,[R1, #+18]
   \   000003C0   0x4288             CMP      R0,R1
   \   000003C2   0xD035             BEQ.N    ??ProcessMsg_HUACE_27
    550              {
    551                g_Byte128[32+15] = g_RtuConfig.usr_baud;
   \   000003C4   0xF8DF 0x0950      LDR.W    R0,??ProcessMsg_HUACE_2+0x1C
   \   000003C8   0xF8DF 0x1BB8      LDR.W    R1,??ProcessMsg_HUACE_11+0x1C
   \   000003CC   0x7C89             LDRB     R1,[R1, #+18]
   \   000003CE   0xF880 0x102F      STRB     R1,[R0, #+47]
    552                
    553                    baud = g_RtuConfig.usr_baud;
   \   000003D2   0xF8DF 0x0BB0      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   000003D6   0x7C80             LDRB     R0,[R0, #+18]
   \   000003D8   0x0005             MOVS     R5,R0
    554                if(baud == 1)
   \   000003DA   0x2D01             CMP      R5,#+1
   \   000003DC   0xD103             BNE.N    ??ProcessMsg_HUACE_28
    555                    baud = 4800;
   \   000003DE   0xF44F 0x5096      MOV      R0,#+4800
   \   000003E2   0x0005             MOVS     R5,R0
   \   000003E4   0xE020             B.N      ??ProcessMsg_HUACE_29
    556                else if(baud == 2)
   \                     ??ProcessMsg_HUACE_28:
   \   000003E6   0x2D02             CMP      R5,#+2
   \   000003E8   0xD103             BNE.N    ??ProcessMsg_HUACE_30
    557                    baud = 9600;
   \   000003EA   0xF44F 0x5016      MOV      R0,#+9600
   \   000003EE   0x0005             MOVS     R5,R0
   \   000003F0   0xE01A             B.N      ??ProcessMsg_HUACE_29
    558                else if(baud == 3)
   \                     ??ProcessMsg_HUACE_30:
   \   000003F2   0x2D03             CMP      R5,#+3
   \   000003F4   0xD103             BNE.N    ??ProcessMsg_HUACE_31
    559                    baud = 19200;
   \   000003F6   0xF44F 0x4096      MOV      R0,#+19200
   \   000003FA   0x0005             MOVS     R5,R0
   \   000003FC   0xE014             B.N      ??ProcessMsg_HUACE_29
    560                else if(baud == 4)
   \                     ??ProcessMsg_HUACE_31:
   \   000003FE   0x2D04             CMP      R5,#+4
   \   00000400   0xD103             BNE.N    ??ProcessMsg_HUACE_32
    561                    baud = 57600;
   \   00000402   0xF44F 0x4061      MOV      R0,#+57600
   \   00000406   0x0005             MOVS     R5,R0
   \   00000408   0xE00E             B.N      ??ProcessMsg_HUACE_29
    562                else if(baud == 5)
   \                     ??ProcessMsg_HUACE_32:
   \   0000040A   0x2D05             CMP      R5,#+5
   \   0000040C   0xD103             BNE.N    ??ProcessMsg_HUACE_33
    563                    baud = 115200;
   \   0000040E   0xF45F 0x30E1      MOVS     R0,#+115200
   \   00000412   0x0005             MOVS     R5,R0
   \   00000414   0xE008             B.N      ??ProcessMsg_HUACE_29
    564                else if(baud == 6)
   \                     ??ProcessMsg_HUACE_33:
   \   00000416   0x2D06             CMP      R5,#+6
   \   00000418   0xD103             BNE.N    ??ProcessMsg_HUACE_34
    565                  baud = 38400;
   \   0000041A   0xF44F 0x4016      MOV      R0,#+38400
   \   0000041E   0x0005             MOVS     R5,R0
   \   00000420   0xE002             B.N      ??ProcessMsg_HUACE_29
    566                else
    567                  baud = 9600;
   \                     ??ProcessMsg_HUACE_34:
   \   00000422   0xF44F 0x5016      MOV      R0,#+9600
   \   00000426   0x0005             MOVS     R5,R0
    568                
    569                BSP_SerInit(PORT_ID_COM, baud);
   \                     ??ProcessMsg_HUACE_29:
   \   00000428   0x0029             MOVS     R1,R5
   \   0000042A   0x2000             MOVS     R0,#+0
   \   0000042C   0x.... 0x....      BL       BSP_SerInit
    570              }
    571              
    572              /** PWRMOD **/
    573              
    574              GetField(pMsg, CmdPara, 5);
   \                     ??ProcessMsg_HUACE_27:
   \   00000430   0x2205             MOVS     R2,#+5
   \   00000432   0xA914             ADD      R1,SP,#+80
   \   00000434   0x0020             MOVS     R0,R4
   \   00000436   0x.... 0x....      BL       GetField
    575              if(strcmp((const char *)CmdPara,"SLEEP") == 0)
   \   0000043A   0xF8DF 0x1E18      LDR.W    R1,??ProcessMsg_HUACE_35
   \   0000043E   0xA814             ADD      R0,SP,#+80
   \   00000440   0x.... 0x....      BL       strcmp
   \   00000444   0x2800             CMP      R0,#+0
   \   00000446   0xD106             BNE.N    ??ProcessMsg_HUACE_36
    576              {
    577                g_RtuConfig.power_mod = 1;
   \   00000448   0xF8DF 0x0B38      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   0000044C   0x2101             MOVS     R1,#+1
   \   0000044E   0x7541             STRB     R1,[R0, #+21]
    578                ClearRadioLLed();
   \   00000450   0x.... 0x....      BL       ClearRadioLLed
   \   00000454   0xE00C             B.N      ??ProcessMsg_HUACE_37
    579              }
    580              else if(strcmp((const char *)CmdPara,"WAKE") == 0)
   \                     ??ProcessMsg_HUACE_36:
   \   00000456   0xF8DF 0x1E00      LDR.W    R1,??ProcessMsg_HUACE_35+0x4
   \   0000045A   0xA814             ADD      R0,SP,#+80
   \   0000045C   0x.... 0x....      BL       strcmp
   \   00000460   0x2800             CMP      R0,#+0
   \   00000462   0xD105             BNE.N    ??ProcessMsg_HUACE_37
    581              {
    582                g_RtuConfig.power_mod = 2;
   \   00000464   0xF8DF 0x0B1C      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   00000468   0x2102             MOVS     R1,#+2
   \   0000046A   0x7541             STRB     R1,[R0, #+21]
    583                SetRadioLLed();
   \   0000046C   0x.... 0x....      BL       SetRadioLLed
    584              }
    585              
    586              g_Byte128[32+17] = g_RtuConfig.power_mod;
   \                     ??ProcessMsg_HUACE_37:
   \   00000470   0xF8DF 0x08A4      LDR.W    R0,??ProcessMsg_HUACE_2+0x1C
   \   00000474   0xF8DF 0x1B0C      LDR.W    R1,??ProcessMsg_HUACE_11+0x1C
   \   00000478   0x7D49             LDRB     R1,[R1, #+21]
   \   0000047A   0xF880 0x1031      STRB     R1,[R0, #+49]
    587              
    588              /** DISTIP **/
    589              
    590              UINT8 str[10];
    591              
    592              GetField(pMsg, CmdPara, 6);
   \   0000047E   0x2206             MOVS     R2,#+6
   \   00000480   0xA914             ADD      R1,SP,#+80
   \   00000482   0x0020             MOVS     R0,R4
   \   00000484   0x.... 0x....      BL       GetField
    593              sprintf((char *)CmdPara,"%s\r\n",CmdPara);
   \   00000488   0xAA14             ADD      R2,SP,#+80
   \   0000048A   0xF8DF 0x1AE4      LDR.W    R1,??ProcessMsg_HUACE_11+0x8
   \   0000048E   0xA814             ADD      R0,SP,#+80
   \   00000490   0x.... 0x....      BL       sprintf
    594              GetField_IP(CmdPara, str, 0);
   \   00000494   0x2200             MOVS     R2,#+0
   \   00000496   0xA938             ADD      R1,SP,#+224
   \   00000498   0xA814             ADD      R0,SP,#+80
   \   0000049A   0x.... 0x....      BL       GetField_IP
    595              g_Byte128[32+5] = atoi((const char *)str);
   \   0000049E   0xA838             ADD      R0,SP,#+224
   \   000004A0   0x.... 0x....      BL       atoi
   \   000004A4   0xF8DF 0x1870      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   000004A8   0xF881 0x0025      STRB     R0,[R1, #+37]
    596              GetField_IP(CmdPara, str, 1);
   \   000004AC   0x2201             MOVS     R2,#+1
   \   000004AE   0xA938             ADD      R1,SP,#+224
   \   000004B0   0xA814             ADD      R0,SP,#+80
   \   000004B2   0x.... 0x....      BL       GetField_IP
    597              g_Byte128[32+6] = atoi((const char *)str);
   \   000004B6   0xA838             ADD      R0,SP,#+224
   \   000004B8   0x.... 0x....      BL       atoi
   \   000004BC   0xF8DF 0x1858      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   000004C0   0xF881 0x0026      STRB     R0,[R1, #+38]
    598              GetField_IP(CmdPara, str, 2);
   \   000004C4   0x2202             MOVS     R2,#+2
   \   000004C6   0xA938             ADD      R1,SP,#+224
   \   000004C8   0xA814             ADD      R0,SP,#+80
   \   000004CA   0x.... 0x....      BL       GetField_IP
    599              g_Byte128[32+7] = atoi((const char *)str);
   \   000004CE   0xA838             ADD      R0,SP,#+224
   \   000004D0   0x.... 0x....      BL       atoi
   \   000004D4   0xF8DF 0x1840      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   000004D8   0xF881 0x0027      STRB     R0,[R1, #+39]
    600              GetField_IP(CmdPara, str, 3);
   \   000004DC   0x2203             MOVS     R2,#+3
   \   000004DE   0xA938             ADD      R1,SP,#+224
   \   000004E0   0xA814             ADD      R0,SP,#+80
   \   000004E2   0x.... 0x....      BL       GetField_IP
    601              g_Byte128[32+8] = atoi((const char *)str);
   \   000004E6   0xA838             ADD      R0,SP,#+224
   \   000004E8   0x.... 0x....      BL       atoi
   \   000004EC   0xF8DF 0x1828      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   000004F0   0xF881 0x0028      STRB     R0,[R1, #+40]
    602              
    603              
    604              g_RtuConfig.ip[0] = g_Byte128[32+5];
   \   000004F4   0xF8DF 0x0A8C      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   000004F8   0xF8DF 0x181C      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   000004FC   0xF891 0x1025      LDRB     R1,[R1, #+37]
   \   00000500   0x7201             STRB     R1,[R0, #+8]
    605              g_RtuConfig.ip[1] = g_Byte128[32+6];
   \   00000502   0xF8DF 0x0A80      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   00000506   0xF8DF 0x1810      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   0000050A   0xF891 0x1026      LDRB     R1,[R1, #+38]
   \   0000050E   0x7241             STRB     R1,[R0, #+9]
    606              g_RtuConfig.ip[2] = g_Byte128[32+7];
   \   00000510   0xF8DF 0x0A70      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   00000514   0xF8DF 0x1800      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   00000518   0xF891 0x1027      LDRB     R1,[R1, #+39]
   \   0000051C   0x7281             STRB     R1,[R0, #+10]
    607              g_RtuConfig.ip[3] = g_Byte128[32+8];
   \   0000051E   0xF8DF 0x0A64      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   00000522   0xF8DF 0x17F4      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   00000526   0xF891 0x1028      LDRB     R1,[R1, #+40]
   \   0000052A   0x72C1             STRB     R1,[R0, #+11]
    608          
    609              
    610              /** DISTPORT **/
    611              
    612              GetField(pMsg, CmdPara, 7);
   \   0000052C   0x2207             MOVS     R2,#+7
   \   0000052E   0xA914             ADD      R1,SP,#+80
   \   00000530   0x0020             MOVS     R0,R4
   \   00000532   0x.... 0x....      BL       GetField
    613              g_Byte128[32+9]  = atoi((const char *)CmdPara) >> 8 ;
   \   00000536   0xA814             ADD      R0,SP,#+80
   \   00000538   0x.... 0x....      BL       atoi
   \   0000053C   0x1200             ASRS     R0,R0,#+8
   \   0000053E   0xF8DF 0x17D8      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   00000542   0xF881 0x0029      STRB     R0,[R1, #+41]
    614              g_Byte128[32+10] = atoi((const char *)CmdPara) >> 0 ;
   \   00000546   0xA814             ADD      R0,SP,#+80
   \   00000548   0x.... 0x....      BL       atoi
   \   0000054C   0xF8DF 0x17C8      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   00000550   0xF881 0x002A      STRB     R0,[R1, #+42]
    615              
    616              g_RtuConfig.ip[4] = g_Byte128[32+9];
   \   00000554   0xF8DF 0x0A2C      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   00000558   0xF8DF 0x17BC      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   0000055C   0xF891 0x1029      LDRB     R1,[R1, #+41]
   \   00000560   0x7301             STRB     R1,[R0, #+12]
    617              g_RtuConfig.ip[5] = g_Byte128[32+10];
   \   00000562   0xF8DF 0x0A20      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   00000566   0xF8DF 0x17B0      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   0000056A   0xF891 0x102A      LDRB     R1,[R1, #+42]
   \   0000056E   0x7341             STRB     R1,[R0, #+13]
    618              
    619              if(g_RtuConfig.commod == 2 || g_RtuConfig.commod == 3)
   \   00000570   0xF8DF 0x0A10      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   00000574   0x7800             LDRB     R0,[R0, #+0]
   \   00000576   0x2802             CMP      R0,#+2
   \   00000578   0xD004             BEQ.N    ??ProcessMsg_HUACE_38
   \   0000057A   0xF8DF 0x0A08      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   0000057E   0x7800             LDRB     R0,[R0, #+0]
   \   00000580   0x2803             CMP      R0,#+3
   \   00000582   0xD101             BNE.N    ??ProcessMsg_HUACE_39
    620                 GprsSoftReset();
   \                     ??ProcessMsg_HUACE_38:
   \   00000584   0x.... 0x....      BL       GprsSoftReset
    621                
    622              reply_cmd(pMsg, Length);
   \                     ??ProcessMsg_HUACE_39:
   \   00000588   0xF8BD 0x1830      LDRH     R1,[SP, #+2096]
   \   0000058C   0x0020             MOVS     R0,R4
   \   0000058E   0x.... 0x....      BL       reply_cmd
   \   00000592   0xF001 0xBF42      B.W      ??ProcessMsg_HUACE_9
    623              
    624            }
    625            else if(strcmp((const char *)CmdId,"RAINFRQ") == 0)
   \                     ??ProcessMsg_HUACE_13:
   \   00000596   0xF8DF 0x1DC0      LDR.W    R1,??ProcessMsg_HUACE_40
   \   0000059A   0xA822             ADD      R0,SP,#+136
   \   0000059C   0x.... 0x....      BL       strcmp
   \   000005A0   0x2800             CMP      R0,#+0
   \   000005A2   0xD124             BNE.N    ??ProcessMsg_HUACE_41
    626            {
    627              DbgMsg("RAINFRQ \r\n");
   \   000005A4   0xF8DF 0x0DB4      LDR.W    R0,??ProcessMsg_HUACE_40+0x4
   \   000005A8   0x.... 0x....      BL       DbgMsg
    628              GetField(pMsg, CmdPara, 2);
   \   000005AC   0x2202             MOVS     R2,#+2
   \   000005AE   0xA914             ADD      R1,SP,#+80
   \   000005B0   0x0020             MOVS     R0,R4
   \   000005B2   0x.... 0x....      BL       GetField
    629              rain_para.frq = atoi((const char *)CmdPara);
   \   000005B6   0xA814             ADD      R0,SP,#+80
   \   000005B8   0x.... 0x....      BL       atoi
   \   000005BC   0xF8DF 0x1DA0      LDR.W    R1,??ProcessMsg_HUACE_40+0x8
   \   000005C0   0x6048             STR      R0,[R1, #+4]
    630              g_Byte128[32+13] = rain_para.frq>>8;
   \   000005C2   0xF8DF 0x0D9C      LDR.W    R0,??ProcessMsg_HUACE_40+0x8
   \   000005C6   0x6840             LDR      R0,[R0, #+4]
   \   000005C8   0x0A00             LSRS     R0,R0,#+8
   \   000005CA   0xF8DF 0x174C      LDR.W    R1,??ProcessMsg_HUACE_2+0x1C
   \   000005CE   0xF881 0x002D      STRB     R0,[R1, #+45]
    631              g_Byte128[32+14] = rain_para.frq>>0;
   \   000005D2   0xF8DF 0x0744      LDR.W    R0,??ProcessMsg_HUACE_2+0x1C
   \   000005D6   0xF8DF 0x1D88      LDR.W    R1,??ProcessMsg_HUACE_40+0x8
   \   000005DA   0x6849             LDR      R1,[R1, #+4]
   \   000005DC   0xF880 0x102E      STRB     R1,[R0, #+46]
    632              reply_cmd(pMsg, Length);
   \   000005E0   0xF8BD 0x1830      LDRH     R1,[SP, #+2096]
   \   000005E4   0x0020             MOVS     R0,R4
   \   000005E6   0x.... 0x....      BL       reply_cmd
   \   000005EA   0xF001 0xBF16      B.W      ??ProcessMsg_HUACE_9
    633            }
    634           /* else if(strcmp((const char *)CmdId,"DISTFRQ") == 0)
    635            {
    636              DbgMsg("DISTFRQ \r\n");
    637              GetField(pMsg, CmdPara, 2);
    638              rs485_para.frq = atoi((const char *)CmdPara);
    639              g_Byte128[32+13] = rs485_para.frq>>8;
    640              g_Byte128[32+14] = rs485_para.frq>>0;
    641              
    642              reply_cmd(pMsg, Length);
    643            }
    644           */
    645            else if(strcmp((const char *)CmdId,"USRBAUD") == 0)
   \                     ??ProcessMsg_HUACE_41:
   \   000005EE   0xF8DF 0x1D74      LDR.W    R1,??ProcessMsg_HUACE_40+0xC
   \   000005F2   0xA822             ADD      R0,SP,#+136
   \   000005F4   0x.... 0x....      BL       strcmp
   \   000005F8   0x2800             CMP      R0,#+0
   \   000005FA   0xD145             BNE.N    ??ProcessMsg_HUACE_42
    646            {
    647              DbgMsg("USRBAUD \r\n");
   \   000005FC   0xF8DF 0x0E54      LDR.W    R0,??ProcessMsg_HUACE_43
   \   00000600   0x.... 0x....      BL       DbgMsg
    648              GetField(pMsg, CmdPara, 2);
   \   00000604   0x2202             MOVS     R2,#+2
   \   00000606   0xA914             ADD      R1,SP,#+80
   \   00000608   0x0020             MOVS     R0,R4
   \   0000060A   0x.... 0x....      BL       GetField
    649              int baud = atoi((const char *)CmdPara);
   \   0000060E   0xA814             ADD      R0,SP,#+80
   \   00000610   0x.... 0x....      BL       atoi
   \   00000614   0x0005             MOVS     R5,R0
    650              if(baud == 4800)
   \   00000616   0xF5B5 0x5F96      CMP      R5,#+4800
   \   0000061A   0xD104             BNE.N    ??ProcessMsg_HUACE_44
    651                g_RtuConfig.usr_baud = 1;
   \   0000061C   0xF8DF 0x0964      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   00000620   0x2101             MOVS     R1,#+1
   \   00000622   0x7481             STRB     R1,[R0, #+18]
   \   00000624   0xE01E             B.N      ??ProcessMsg_HUACE_45
    652              else if(baud == 9600)
   \                     ??ProcessMsg_HUACE_44:
   \   00000626   0xF5B5 0x5F16      CMP      R5,#+9600
   \   0000062A   0xD104             BNE.N    ??ProcessMsg_HUACE_46
    653                g_RtuConfig.usr_baud = 2;
   \   0000062C   0xF8DF 0x0954      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   00000630   0x2102             MOVS     R1,#+2
   \   00000632   0x7481             STRB     R1,[R0, #+18]
   \   00000634   0xE016             B.N      ??ProcessMsg_HUACE_45
    654              else if(baud == 19200)
   \                     ??ProcessMsg_HUACE_46:
   \   00000636   0xF5B5 0x4F96      CMP      R5,#+19200
   \   0000063A   0xD104             BNE.N    ??ProcessMsg_HUACE_47
    655                g_RtuConfig.usr_baud = 3;
   \   0000063C   0xF8DF 0x0944      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   00000640   0x2103             MOVS     R1,#+3
   \   00000642   0x7481             STRB     R1,[R0, #+18]
   \   00000644   0xE00E             B.N      ??ProcessMsg_HUACE_45
    656              else if(baud == 57600)
   \                     ??ProcessMsg_HUACE_47:
   \   00000646   0xF5B5 0x4F61      CMP      R5,#+57600
   \   0000064A   0xD104             BNE.N    ??ProcessMsg_HUACE_48
    657                g_RtuConfig.usr_baud = 4;
   \   0000064C   0xF8DF 0x0934      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   00000650   0x2104             MOVS     R1,#+4
   \   00000652   0x7481             STRB     R1,[R0, #+18]
   \   00000654   0xE006             B.N      ??ProcessMsg_HUACE_45
    658              else if(baud == 115200)
   \                     ??ProcessMsg_HUACE_48:
   \   00000656   0xF5B5 0x3FE1      CMP      R5,#+115200
   \   0000065A   0xD103             BNE.N    ??ProcessMsg_HUACE_45
    659                g_RtuConfig.usr_baud = 5;
   \   0000065C   0xF8DF 0x0924      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   00000660   0x2105             MOVS     R1,#+5
   \   00000662   0x7481             STRB     R1,[R0, #+18]
    660              g_Byte128[32+15] = g_RtuConfig.usr_baud;
   \                     ??ProcessMsg_HUACE_45:
   \   00000664   0xF8DF 0x06B0      LDR.W    R0,??ProcessMsg_HUACE_2+0x1C
   \   00000668   0xF8DF 0x1918      LDR.W    R1,??ProcessMsg_HUACE_11+0x1C
   \   0000066C   0x7C89             LDRB     R1,[R1, #+18]
   \   0000066E   0xF880 0x102F      STRB     R1,[R0, #+47]
    661              
    662              BSP_SerInit(PORT_ID_COM, baud);
   \   00000672   0x0029             MOVS     R1,R5
   \   00000674   0x2000             MOVS     R0,#+0
   \   00000676   0x.... 0x....      BL       BSP_SerInit
    663              reply_cmd(pMsg, Length);
   \   0000067A   0xF8BD 0x1830      LDRH     R1,[SP, #+2096]
   \   0000067E   0x0020             MOVS     R0,R4
   \   00000680   0x.... 0x....      BL       reply_cmd
   \   00000684   0xF001 0xBEC9      B.W      ??ProcessMsg_HUACE_9
    664            }
    665            else if(strcmp((const char *)CmdId,"PWMOD") == 0)
   \                     ??ProcessMsg_HUACE_42:
   \   00000688   0xF8DF 0x1DCC      LDR.W    R1,??ProcessMsg_HUACE_43+0x4
   \   0000068C   0xA822             ADD      R0,SP,#+136
   \   0000068E   0x.... 0x....      BL       strcmp
   \   00000692   0x2800             CMP      R0,#+0
   \   00000694   0xD131             BNE.N    ??ProcessMsg_HUACE_49
    666            {
    667              DbgMsg("PWMOD \r\n");
   \   00000696   0xF8DF 0x0DC4      LDR.W    R0,??ProcessMsg_HUACE_43+0x8
   \   0000069A   0x.... 0x....      BL       DbgMsg
    668              GetField(pMsg, CmdPara, 2);
   \   0000069E   0x2202             MOVS     R2,#+2
   \   000006A0   0xA914             ADD      R1,SP,#+80
   \   000006A2   0x0020             MOVS     R0,R4
   \   000006A4   0x.... 0x....      BL       GetField
    669              if(strcmp((const char *)CmdPara,"SLEEP") == 0)
   \   000006A8   0xF8DF 0x1BA8      LDR.W    R1,??ProcessMsg_HUACE_35
   \   000006AC   0xA814             ADD      R0,SP,#+80
   \   000006AE   0x.... 0x....      BL       strcmp
   \   000006B2   0x2800             CMP      R0,#+0
   \   000006B4   0xD106             BNE.N    ??ProcessMsg_HUACE_50
    670              {
    671                g_RtuConfig.power_mod = 1;
   \   000006B6   0xF8DF 0x08CC      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   000006BA   0x2101             MOVS     R1,#+1
   \   000006BC   0x7541             STRB     R1,[R0, #+21]
    672                ClearRadioLLed();
   \   000006BE   0x.... 0x....      BL       ClearRadioLLed
   \   000006C2   0xE00C             B.N      ??ProcessMsg_HUACE_51
    673              }
    674              else if(strcmp((const char *)CmdPara,"WAKE") == 0)
   \                     ??ProcessMsg_HUACE_50:
   \   000006C4   0xF8DF 0x1B90      LDR.W    R1,??ProcessMsg_HUACE_35+0x4
   \   000006C8   0xA814             ADD      R0,SP,#+80
   \   000006CA   0x.... 0x....      BL       strcmp
   \   000006CE   0x2800             CMP      R0,#+0
   \   000006D0   0xD105             BNE.N    ??ProcessMsg_HUACE_51
    675              {
    676                g_RtuConfig.power_mod = 2;
   \   000006D2   0xF8DF 0x08B0      LDR.W    R0,??ProcessMsg_HUACE_11+0x1C
   \   000006D6   0x2102             MOVS     R1,#+2
   \   000006D8   0x7541             STRB     R1,[R0, #+21]
    677                SetRadioLLed();
   \   000006DA   0x.... 0x....      BL       SetRadioLLed
    678              }
    679              g_Byte128[32+17] = g_RtuConfig.power_mod;
   \                     ??ProcessMsg_HUACE_51:
   \   000006DE   0xF8DF 0x0638      LDR.W    R0,??ProcessMsg_HUACE_2+0x1C
   \   000006E2   0xF8DF 0x18A0      LDR.W    R1,??ProcessMsg_HUACE_11+0x1C
   \   000006E6   0x7D49             LDRB     R1,[R1, #+21]
   \   000006E8   0xF880 0x1031      STRB     R1,[R0, #+49]
    680              reply_cmd(pMsg, Length);
   \   000006EC   0xF8BD 0x1830      LDRH     R1,[SP, #+2096]
   \   000006F0   0x0020             MOVS     R0,R4
   \   000006F2   0x.... 0x....      BL       reply_cmd
   \   000006F6   0xF001 0xBE90      B.W      ??ProcessMsg_HUACE_9
    681            }
    682            else if(strcmp((const char *)CmdId,"RAINRESOL") == 0)
   \                     ??ProcessMsg_HUACE_49:
   \   000006FA   0xF8DF 0x1E10      LDR.W    R1,??ProcessMsg_HUACE_52+0x4
   \   000006FE   0xA822             ADD      R0,SP,#+136
   \   00000700   0x.... 0x....      BL       strcmp
   \   00000704   0x2800             CMP      R0,#+0
   \   00000706   0xD121             BNE.N    ??ProcessMsg_HUACE_53
    683            {
    684              DbgMsg("RAINRESOL \r\n");
   \   00000708   0xF8DF 0x0E04      LDR.W    R0,??ProcessMsg_HUACE_52+0x8
   \   0000070C   0x.... 0x....      BL       DbgMsg
    685              GetField(pMsg, CmdPara, 2);
   \   00000710   0x2202             MOVS     R2,#+2
   \   00000712   0xA914             ADD      R1,SP,#+80
   \   00000714   0x0020             MOVS     R0,R4
   \   00000716   0x.... 0x....      BL       GetField
    686              UINT8 par =(uint8_t)(atof((char const *)CmdPara)*10);
   \   0000071A   0xA814             ADD      R0,SP,#+80
   \   0000071C   0x.... 0x....      BL       atof
   \   00000720   0x2200             MOVS     R2,#+0
   \   00000722   0xF8DF 0x3DF0      LDR.W    R3,??ProcessMsg_HUACE_52+0xC  ;; 0x40240000
   \   00000726   0x.... 0x....      BL       __aeabi_dmul
   \   0000072A   0x.... 0x....      BL       __aeabi_d2iz
   \   0000072E   0x0005             MOVS     R5,R0
    687              g_Byte128[32+18] = rain_para.resol = par;
   \   00000730   0xF8DF 0x0C2C      LDR.W    R0,??ProcessMsg_HUACE_40+0x8
   \   00000734   0x7205             STRB     R5,[R0, #+8]
   \   00000736   0xF8DF 0x05E0      LDR.W    R0,??ProcessMsg_HUACE_2+0x1C
   \   0000073A   0xF880 0x5032      STRB     R5,[R0, #+50]
    688              reply_cmd(pMsg, Length);
   \   0000073E   0xF8BD 0x1830      LDRH     R1,[SP, #+2096]
   \   00000742   0x0020             MOVS     R0,R4
   \   00000744   0x.... 0x....      BL       reply_cmd
   \   00000748   0xF001 0xBE67      B.W      ??ProcessMsg_HUACE_9
    689            }
    690            else if(strcmp((const char *)CmdId,"PORTCFG") == 0)
   \                     ??ProcessMsg_HUACE_53:
   \   0000074C   0xF8DF 0x1DC8      LDR.W    R1,??ProcessMsg_HUACE_52+0x10
   \   00000750   0xA822             ADD      R0,SP,#+136
   \   00000752   0x.... 0x....      BL       strcmp
   \   00000756   0x2800             CMP      R0,#+0
   \   00000758   0xF040 0x82B5      BNE.W    ??ProcessMsg_HUACE_54
    691            {
    692              int i;
    693              
    694              adc_para_t  *p_adc = 0;
   \   0000075C   0x2500             MOVS     R5,#+0
    695              rs485_para_t *p_485 = 0;
   \   0000075E   0xF05F 0x0800      MOVS     R8,#+0
    696              rs232_para_t *p_232 = 0;
   \   00000762   0xF05F 0x0900      MOVS     R9,#+0
    697              rain_para_t *p_rain = 0;
   \   00000766   0xF05F 0x0B00      MOVS     R11,#+0
    698              bd_para_t *p_bd = 0;
   \   0000076A   0x2600             MOVS     R6,#+0
    699          	pwm_para_t *p_pwm = 0;
   \   0000076C   0xF05F 0x0A00      MOVS     R10,#+0
    700              
    701              /** 端口 **/
    702              
    703              GetField(pMsg, CmdPara, 2);
   \   00000770   0x2202             MOVS     R2,#+2
   \   00000772   0xA914             ADD      R1,SP,#+80
   \   00000774   0x0020             MOVS     R0,R4
   \   00000776   0x.... 0x....      BL       GetField
    704              
    705              
    706              if( strcmp((char const *)CmdPara,"RS485") == 0)
   \   0000077A   0xF8DF 0x1E40      LDR.W    R1,??ProcessMsg_HUACE_55
   \   0000077E   0xA814             ADD      R0,SP,#+80
   \   00000780   0x.... 0x....      BL       strcmp
   \   00000784   0x2800             CMP      R0,#+0
   \   00000786   0xD103             BNE.N    ??ProcessMsg_HUACE_56
    707              {
    708                p_485 = &rs485_para;
   \   00000788   0xF8DF 0x0E34      LDR.W    R0,??ProcessMsg_HUACE_55+0x4
   \   0000078C   0x4680             MOV      R8,R0
   \   0000078E   0xE04A             B.N      ??ProcessMsg_HUACE_57
    709              }
    710              else if( strcmp((char const *)CmdPara,"ADC1") == 0)
   \                     ??ProcessMsg_HUACE_56:
   \   00000790   0xF8DF 0x1E30      LDR.W    R1,??ProcessMsg_HUACE_55+0x8
   \   00000794   0xA814             ADD      R0,SP,#+80
   \   00000796   0x.... 0x....      BL       strcmp
   \   0000079A   0x2800             CMP      R0,#+0
   \   0000079C   0xD103             BNE.N    ??ProcessMsg_HUACE_58
    711              {
    712                p_adc = &adc0_para;
   \   0000079E   0xF8DF 0x0E28      LDR.W    R0,??ProcessMsg_HUACE_55+0xC
   \   000007A2   0x0005             MOVS     R5,R0
   \   000007A4   0xE03F             B.N      ??ProcessMsg_HUACE_57
    713              }
    714              else if( strcmp((char const *)CmdPara,"ADC2") == 0)
   \                     ??ProcessMsg_HUACE_58:
   \   000007A6   0xF8DF 0x1E24      LDR.W    R1,??ProcessMsg_HUACE_55+0x10
   \   000007AA   0xA814             ADD      R0,SP,#+80
   \   000007AC   0x.... 0x....      BL       strcmp
   \   000007B0   0x2800             CMP      R0,#+0
   \   000007B2   0xD103             BNE.N    ??ProcessMsg_HUACE_59
    715              {
    716                p_adc = &adc1_para;
   \   000007B4   0xF8DF 0x0E18      LDR.W    R0,??ProcessMsg_HUACE_55+0x14
   \   000007B8   0x0005             MOVS     R5,R0
   \   000007BA   0xE034             B.N      ??ProcessMsg_HUACE_57
    717              }
    718              else if( strcmp((char const *)CmdPara,"ADC3") == 0)
   \                     ??ProcessMsg_HUACE_59:
   \   000007BC   0xF8DF 0x1E14      LDR.W    R1,??ProcessMsg_HUACE_55+0x18
   \   000007C0   0xA814             ADD      R0,SP,#+80
   \   000007C2   0x.... 0x....      BL       strcmp
   \   000007C6   0x2800             CMP      R0,#+0
   \   000007C8   0xD103             BNE.N    ??ProcessMsg_HUACE_60
    719              {
    720                p_adc = &adc2_para;
   \   000007CA   0xF8DF 0x0E0C      LDR.W    R0,??ProcessMsg_HUACE_55+0x1C
   \   000007CE   0x0005             MOVS     R5,R0
   \   000007D0   0xE029             B.N      ??ProcessMsg_HUACE_57
    721              }
    722              else if( strcmp((char const *)CmdPara,"RS232") == 0)
   \                     ??ProcessMsg_HUACE_60:
   \   000007D2   0xF8DF 0x1E08      LDR.W    R1,??ProcessMsg_HUACE_55+0x20
   \   000007D6   0xA814             ADD      R0,SP,#+80
   \   000007D8   0x.... 0x....      BL       strcmp
   \   000007DC   0x2800             CMP      R0,#+0
   \   000007DE   0xD103             BNE.N    ??ProcessMsg_HUACE_61
    723              {
    724                p_232 = &rs232_para;
   \   000007E0   0xF8DF 0x0DFC      LDR.W    R0,??ProcessMsg_HUACE_55+0x24
   \   000007E4   0x4681             MOV      R9,R0
   \   000007E6   0xE01E             B.N      ??ProcessMsg_HUACE_57
    725              }
    726              else if(strcmp((char const *)CmdPara,"IO-INPUT") == 0)
   \                     ??ProcessMsg_HUACE_61:
   \   000007E8   0xF8DF 0x1DF8      LDR.W    R1,??ProcessMsg_HUACE_55+0x28
   \   000007EC   0xA814             ADD      R0,SP,#+80
   \   000007EE   0x.... 0x....      BL       strcmp
   \   000007F2   0x2800             CMP      R0,#+0
   \   000007F4   0xD103             BNE.N    ??ProcessMsg_HUACE_62
    727              {
    728                p_rain = &rain_para;
   \   000007F6   0xF8DF 0x0B68      LDR.W    R0,??ProcessMsg_HUACE_40+0x8
   \   000007FA   0x4683             MOV      R11,R0
   \   000007FC   0xE013             B.N      ??ProcessMsg_HUACE_57
    729              }
    730              else if(strcmp((char const *)CmdPara,"RS232-BDS") == 0)
   \                     ??ProcessMsg_HUACE_62:
   \   000007FE   0xF8DF 0x1DE8      LDR.W    R1,??ProcessMsg_HUACE_55+0x2C
   \   00000802   0xA814             ADD      R0,SP,#+80
   \   00000804   0x.... 0x....      BL       strcmp
   \   00000808   0x2800             CMP      R0,#+0
   \   0000080A   0xD103             BNE.N    ??ProcessMsg_HUACE_63
    731              {
    732                p_bd = &bd_para;
   \   0000080C   0xF8DF 0x051C      LDR.W    R0,??ProcessMsg_HUACE_2+0x30
   \   00000810   0x0006             MOVS     R6,R0
   \   00000812   0xE008             B.N      ??ProcessMsg_HUACE_57
    733              }
    734          	else if((strcmp((char const *)CmdPara,"PWM") == 0))
   \                     ??ProcessMsg_HUACE_63:
   \   00000814   0xA1C4             ADR.N    R1,??ProcessMsg_HUACE_64  ;; "PWM"
   \   00000816   0xA814             ADD      R0,SP,#+80
   \   00000818   0x.... 0x....      BL       strcmp
   \   0000081C   0x2800             CMP      R0,#+0
   \   0000081E   0xD102             BNE.N    ??ProcessMsg_HUACE_57
    735          	{
    736          	  p_pwm = &pwm_para;
   \   00000820   0xF8DF 0x0DC8      LDR.W    R0,??ProcessMsg_HUACE_55+0x30
   \   00000824   0x4682             MOV      R10,R0
    737          	}
    738              
    739              
    740              /** 类型  **/
    741              GetField(pMsg, CmdPara, 3);
   \                     ??ProcessMsg_HUACE_57:
   \   00000826   0x2203             MOVS     R2,#+3
   \   00000828   0xA914             ADD      R1,SP,#+80
   \   0000082A   0x0020             MOVS     R0,R4
   \   0000082C   0x.... 0x....      BL       GetField
    742              
    743              if( p_adc != 0)
   \   00000830   0x2D00             CMP      R5,#+0
   \   00000832   0xD001             BEQ.N    ??ProcessMsg_HUACE_65
    744              {
    745                p_adc -> type = 0;
   \   00000834   0x2000             MOVS     R0,#+0
   \   00000836   0x6028             STR      R0,[R5, #+0]
    746              }
    747              if( p_485 != 0)
   \                     ??ProcessMsg_HUACE_65:
   \   00000838   0xF1B8 0x0F00      CMP      R8,#+0
   \   0000083C   0xD002             BEQ.N    ??ProcessMsg_HUACE_66
    748              {
    749                p_485 -> type = 0;
   \   0000083E   0x2000             MOVS     R0,#+0
   \   00000840   0xF8C8 0x0000      STR      R0,[R8, #+0]
    750              }
    751              
    752              if(p_232 != 0)
   \                     ??ProcessMsg_HUACE_66:
   \   00000844   0xF1B9 0x0F00      CMP      R9,#+0
   \   00000848   0xD002             BEQ.N    ??ProcessMsg_HUACE_67
    753              {
    754                p_232 -> type = 0;
   \   0000084A   0x2000             MOVS     R0,#+0
   \   0000084C   0xF8C9 0x0000      STR      R0,[R9, #+0]
    755              }
    756              
    757              if( p_rain != 0)
   \                     ??ProcessMsg_HUACE_67:
   \   00000850   0xF1BB 0x0F00      CMP      R11,#+0
   \   00000854   0xD002             BEQ.N    ??ProcessMsg_HUACE_68
    758              {
    759                p_rain -> type = 0; 
   \   00000856   0x2000             MOVS     R0,#+0
   \   00000858   0xF8CB 0x0000      STR      R0,[R11, #+0]
    760              }
    761          	
    762          	if(p_pwm != 0)
   \                     ??ProcessMsg_HUACE_68:
   \   0000085C   0xF1BA 0x0F00      CMP      R10,#+0
   \   00000860   0xD002             BEQ.N    ??ProcessMsg_HUACE_69
    763          	{
    764          		p_pwm -> type = 0;
   \   00000862   0x2000             MOVS     R0,#+0
   \   00000864   0xF8CA 0x0000      STR      R0,[R10, #+0]
    765          	}
    766              
    767              for( i = 0;i < sizeof(sensor_type_table)/sizeof(*sensor_type_table); i++)
   \                     ??ProcessMsg_HUACE_69:
   \   00000868   0x2000             MOVS     R0,#+0
   \   0000086A   0x0007             MOVS     R7,R0
   \                     ??ProcessMsg_HUACE_70:
   \   0000086C   0x2F09             CMP      R7,#+9
   \   0000086E   0xD21D             BCS.N    ??ProcessMsg_HUACE_71
    768              {
    769                if( strcmp((char const *)CmdPara,sensor_type_table[i]) == 0)
   \   00000870   0xF8DF 0x0E5C      LDR.W    R0,??ProcessMsg_HUACE_72
   \   00000874   0xF850 0x1027      LDR      R1,[R0, R7, LSL #+2]
   \   00000878   0xA814             ADD      R0,SP,#+80
   \   0000087A   0x.... 0x....      BL       strcmp
   \   0000087E   0x2800             CMP      R0,#+0
   \   00000880   0xD112             BNE.N    ??ProcessMsg_HUACE_73
    770                {
    771                  if( p_adc != 0)
   \   00000882   0x2D00             CMP      R5,#+0
   \   00000884   0xD000             BEQ.N    ??ProcessMsg_HUACE_74
    772                  {
    773                    p_adc -> type = i;
   \   00000886   0x602F             STR      R7,[R5, #+0]
    774                  }
    775                  
    776                  if( p_485 != 0)
   \                     ??ProcessMsg_HUACE_74:
   \   00000888   0xF1B8 0x0F00      CMP      R8,#+0
   \   0000088C   0xD001             BEQ.N    ??ProcessMsg_HUACE_75
    777                  {
    778                    p_485 -> type = i;
   \   0000088E   0xF8C8 0x7000      STR      R7,[R8, #+0]
    779                  }
    780                  
    781                  if( p_232 != 0)
   \                     ??ProcessMsg_HUACE_75:
   \   00000892   0xF1B9 0x0F00      CMP      R9,#+0
   \   00000896   0xD001             BEQ.N    ??ProcessMsg_HUACE_76
    782                  {
    783                    p_232 -> type = i;
   \   00000898   0xF8C9 0x7000      STR      R7,[R9, #+0]
    784                  }
    785          		
    786          		if( p_pwm != 0)
   \                     ??ProcessMsg_HUACE_76:
   \   0000089C   0xF1BA 0x0F00      CMP      R10,#+0
   \   000008A0   0xD001             BEQ.N    ??ProcessMsg_HUACE_77
    787                  {
    788                    p_pwm -> type = i;
   \   000008A2   0xF8CA 0x7000      STR      R7,[R10, #+0]
    789                  }
    790                  
    791                  break;
   \                     ??ProcessMsg_HUACE_77:
   \   000008A6   0xE001             B.N      ??ProcessMsg_HUACE_71
    792                }
    793              }
   \                     ??ProcessMsg_HUACE_73:
   \   000008A8   0x1C7F             ADDS     R7,R7,#+1
   \   000008AA   0xE7DF             B.N      ??ProcessMsg_HUACE_70
    794              
    795              /** 上报间隔  **/
    796              GetField(pMsg, CmdPara, 4);
   \                     ??ProcessMsg_HUACE_71:
   \   000008AC   0x2204             MOVS     R2,#+4
   \   000008AE   0xA914             ADD      R1,SP,#+80
   \   000008B0   0x0020             MOVS     R0,R4
   \   000008B2   0x.... 0x....      BL       GetField
    797              
    798              if( p_adc != 0)
   \   000008B6   0x2D00             CMP      R5,#+0
   \   000008B8   0xD006             BEQ.N    ??ProcessMsg_HUACE_78
    799              {
    800                p_adc -> frq = atoi((char const *)CmdPara);
   \   000008BA   0xA814             ADD      R0,SP,#+80
   \   000008BC   0x.... 0x....      BL       atoi
   \   000008C0   0x6068             STR      R0,[R5, #+4]
    801                p_adc -> frq_changed = 1;
   \   000008C2   0x2001             MOVS     R0,#+1
   \   000008C4   0xF885 0x0035      STRB     R0,[R5, #+53]
    802              }
    803              if( p_485 != 0)
   \                     ??ProcessMsg_HUACE_78:
   \   000008C8   0xF1B8 0x0F00      CMP      R8,#+0
   \   000008CC   0xD007             BEQ.N    ??ProcessMsg_HUACE_79
    804              {
    805                p_485 -> frq = atoi((char const *)CmdPara);
   \   000008CE   0xA814             ADD      R0,SP,#+80
   \   000008D0   0x.... 0x....      BL       atoi
   \   000008D4   0xF8C8 0x0004      STR      R0,[R8, #+4]
    806                p_485 -> frq_changed = 1;
   \   000008D8   0x2001             MOVS     R0,#+1
   \   000008DA   0xF888 0x009A      STRB     R0,[R8, #+154]
    807              }
    808              
    809              if( p_232 != 0)
   \                     ??ProcessMsg_HUACE_79:
   \   000008DE   0xF1B9 0x0F00      CMP      R9,#+0
   \   000008E2   0xD007             BEQ.N    ??ProcessMsg_HUACE_80
    810              {
    811                p_232 -> frq = atoi((char const *)CmdPara);
   \   000008E4   0xA814             ADD      R0,SP,#+80
   \   000008E6   0x.... 0x....      BL       atoi
   \   000008EA   0xF8C9 0x0004      STR      R0,[R9, #+4]
    812                p_232 -> frq_changed = 1;
   \   000008EE   0x2001             MOVS     R0,#+1
   \   000008F0   0xF889 0x0099      STRB     R0,[R9, #+153]
    813              }
    814              
    815              if( p_rain != 0)
   \                     ??ProcessMsg_HUACE_80:
   \   000008F4   0xF1BB 0x0F00      CMP      R11,#+0
   \   000008F8   0xD004             BEQ.N    ??ProcessMsg_HUACE_81
    816              {
    817                p_rain -> frq = atoi((char const *)CmdPara);
   \   000008FA   0xA814             ADD      R0,SP,#+80
   \   000008FC   0x.... 0x....      BL       atoi
   \   00000900   0xF8CB 0x0004      STR      R0,[R11, #+4]
    818                
    819                //p_rain -> frq_changed = 1;
    820              }
    821          	
    822          	if( p_pwm != 0)
   \                     ??ProcessMsg_HUACE_81:
   \   00000904   0xF1BA 0x0F00      CMP      R10,#+0
   \   00000908   0xD007             BEQ.N    ??ProcessMsg_HUACE_82
    823              {
    824                p_pwm -> frq = atoi((char const *)CmdPara);
   \   0000090A   0xA814             ADD      R0,SP,#+80
   \   0000090C   0x.... 0x....      BL       atoi
   \   00000910   0xF8CA 0x0004      STR      R0,[R10, #+4]
    825                p_pwm -> frq_changed = 1;
   \   00000914   0x2001             MOVS     R0,#+1
   \   00000916   0xF88A 0x0008      STRB     R0,[R10, #+8]
    826              }
    827              
    828              /** OTHERS -------------------------------------*/
    829              
    830              if( p_adc != 0)
   \                     ??ProcessMsg_HUACE_82:
   \   0000091A   0x2D00             CMP      R5,#+0
   \   0000091C   0xD049             BEQ.N    ??ProcessMsg_HUACE_83
    831              {
    832                /** 传感器类型 **/
    833                GetField(pMsg, CmdPara, 5);
   \   0000091E   0x2205             MOVS     R2,#+5
   \   00000920   0xA914             ADD      R1,SP,#+80
   \   00000922   0x0020             MOVS     R0,R4
   \   00000924   0x.... 0x....      BL       GetField
    834                
    835                if( strcmp((char const *)CmdPara,"1") == 0)
   \   00000928   0xA180             ADR.N    R1,??ProcessMsg_HUACE_64+0x4  ;; "1"
   \   0000092A   0xA814             ADD      R0,SP,#+80
   \   0000092C   0x.... 0x....      BL       strcmp
   \   00000930   0x2800             CMP      R0,#+0
   \   00000932   0xD102             BNE.N    ??ProcessMsg_HUACE_84
    836                {//电压型
    837                  p_adc->stype = 1;
   \   00000934   0x2001             MOVS     R0,#+1
   \   00000936   0x60A8             STR      R0,[R5, #+8]
   \   00000938   0xE00A             B.N      ??ProcessMsg_HUACE_85
    838                }
    839                else if( strcmp((char const *)CmdPara,"2") == 0)
   \                     ??ProcessMsg_HUACE_84:
   \   0000093A   0xA17D             ADR.N    R1,??ProcessMsg_HUACE_64+0x8  ;; "2"
   \   0000093C   0xA814             ADD      R0,SP,#+80
   \   0000093E   0x.... 0x....      BL       strcmp
   \   00000942   0x2800             CMP      R0,#+0
   \   00000944   0xD102             BNE.N    ??ProcessMsg_HUACE_86
    840                {
    841                  p_adc->stype = 2;//电流型
   \   00000946   0x2002             MOVS     R0,#+2
   \   00000948   0x60A8             STR      R0,[R5, #+8]
   \   0000094A   0xE001             B.N      ??ProcessMsg_HUACE_85
    842                }
    843                else
    844                {
    845                  p_adc->stype = 0;
   \                     ??ProcessMsg_HUACE_86:
   \   0000094C   0x2000             MOVS     R0,#+0
   \   0000094E   0x60A8             STR      R0,[R5, #+8]
    846                }
    847                
    848                /** 传感器型号 **/
    849                GetField(pMsg, CmdPara, 6);
   \                     ??ProcessMsg_HUACE_85:
   \   00000950   0x2206             MOVS     R2,#+6
   \   00000952   0xA914             ADD      R1,SP,#+80
   \   00000954   0x0020             MOVS     R0,R4
   \   00000956   0x.... 0x....      BL       GetField
    850                strcpy(p_adc->sname,(char const *)CmdPara);
   \   0000095A   0xA914             ADD      R1,SP,#+80
   \   0000095C   0xF115 0x0020      ADDS     R0,R5,#+32
   \   00000960   0x.... 0x....      BL       strcpy
    851                
    852                if( p_adc->type == 5)
   \   00000964   0x6828             LDR      R0,[R5, #+0]
   \   00000966   0x2805             CMP      R0,#+5
   \   00000968   0xD10D             BNE.N    ??ProcessMsg_HUACE_87
    853                {//土壤水分计
    854                  GetField(pMsg, CmdPara, 7);
   \   0000096A   0x2207             MOVS     R2,#+7
   \   0000096C   0xA914             ADD      R1,SP,#+80
   \   0000096E   0x0020             MOVS     R0,R4
   \   00000970   0x.... 0x....      BL       GetField
    855                  
    856                  /** 土壤类型 **/
    857                  p_adc->para0.c[0] = CmdPara[0];
   \   00000974   0xF89D 0x0050      LDRB     R0,[SP, #+80]
   \   00000978   0x7328             STRB     R0,[R5, #+12]
    858                  
    859                  if( p_adc->para0.c[0] == 0)
   \   0000097A   0x7B28             LDRB     R0,[R5, #+12]
   \   0000097C   0x2800             CMP      R0,#+0
   \   0000097E   0xD118             BNE.N    ??ProcessMsg_HUACE_83
    860                  {
    861                    p_adc->para0.c[0] = ' ';
   \   00000980   0x2020             MOVS     R0,#+32
   \   00000982   0x7328             STRB     R0,[R5, #+12]
   \   00000984   0xE015             B.N      ??ProcessMsg_HUACE_83
    862                  }
    863                }
    864                else
    865                {
    866                  /** x^0 x^1 **/
    867                  GetField(pMsg, CmdPara, 7);
   \                     ??ProcessMsg_HUACE_87:
   \   00000986   0x2207             MOVS     R2,#+7
   \   00000988   0xA914             ADD      R1,SP,#+80
   \   0000098A   0x0020             MOVS     R0,R4
   \   0000098C   0x.... 0x....      BL       GetField
    868                  
    869                  p_adc->para0.f = atof((char const *)CmdPara);
   \   00000990   0xA814             ADD      R0,SP,#+80
   \   00000992   0x.... 0x....      BL       atof
   \   00000996   0x.... 0x....      BL       __aeabi_d2f
   \   0000099A   0x60E8             STR      R0,[R5, #+12]
    870                  
    871                  GetField(pMsg, CmdPara, 8);
   \   0000099C   0x2208             MOVS     R2,#+8
   \   0000099E   0xA914             ADD      R1,SP,#+80
   \   000009A0   0x0020             MOVS     R0,R4
   \   000009A2   0x.... 0x....      BL       GetField
    872                  
    873                  p_adc->para1 = atof((char const *)CmdPara);
   \   000009A6   0xA814             ADD      R0,SP,#+80
   \   000009A8   0x.... 0x....      BL       atof
   \   000009AC   0x.... 0x....      BL       __aeabi_d2f
   \   000009B0   0x6128             STR      R0,[R5, #+16]
    874                }
    875                
    876              }
    877              
    878              if( p_485 != 0)
   \                     ??ProcessMsg_HUACE_83:
   \   000009B2   0xF1B8 0x0F00      CMP      R8,#+0
   \   000009B6   0xD038             BEQ.N    ??ProcessMsg_HUACE_88
    879              {
    880                /** 数量 **/
    881                
    882                GetField(pMsg, CmdPara, 5);
   \   000009B8   0x2205             MOVS     R2,#+5
   \   000009BA   0xA914             ADD      R1,SP,#+80
   \   000009BC   0x0020             MOVS     R0,R4
   \   000009BE   0x.... 0x....      BL       GetField
    883                p_485 -> cnt = atoi((char const *)CmdPara);
   \   000009C2   0xA814             ADD      R0,SP,#+80
   \   000009C4   0x.... 0x....      BL       atoi
   \   000009C8   0xF8C8 0x0008      STR      R0,[R8, #+8]
    884                
    885                /** 波特率 **/
    886                
    887                GetField(pMsg, CmdPara, 6);
   \   000009CC   0x2206             MOVS     R2,#+6
   \   000009CE   0xA914             ADD      R1,SP,#+80
   \   000009D0   0x0020             MOVS     R0,R4
   \   000009D2   0x.... 0x....      BL       GetField
    888                p_485 -> baud = atoi((char const *)CmdPara);
   \   000009D6   0xA814             ADD      R0,SP,#+80
   \   000009D8   0x.... 0x....      BL       atoi
   \   000009DC   0xF8C8 0x000C      STR      R0,[R8, #+12]
    889                
    890                
    891                /** 传感器型号 **/
    892                GetField(pMsg, CmdPara, 7);
   \   000009E0   0x2207             MOVS     R2,#+7
   \   000009E2   0xA914             ADD      R1,SP,#+80
   \   000009E4   0x0020             MOVS     R0,R4
   \   000009E6   0x.... 0x....      BL       GetField
    893                
    894                strcpy(p_485->sname,(char const *)CmdPara);
   \   000009EA   0xA914             ADD      R1,SP,#+80
   \   000009EC   0xF118 0x0020      ADDS     R0,R8,#+32
   \   000009F0   0x.... 0x....      BL       strcpy
    895                
    896                /** x^0 x^1 **/
    897                GetField(pMsg, CmdPara, 8);
   \   000009F4   0x2208             MOVS     R2,#+8
   \   000009F6   0xA914             ADD      R1,SP,#+80
   \   000009F8   0x0020             MOVS     R0,R4
   \   000009FA   0x.... 0x....      BL       GetField
    898                
    899                p_485->para0 = atof((char const *)CmdPara);
   \   000009FE   0xA814             ADD      R0,SP,#+80
   \   00000A00   0x.... 0x....      BL       atof
   \   00000A04   0x.... 0x....      BL       __aeabi_d2f
   \   00000A08   0xF8C8 0x0010      STR      R0,[R8, #+16]
    900                
    901                GetField(pMsg, CmdPara, 9);
   \   00000A0C   0x2209             MOVS     R2,#+9
   \   00000A0E   0xA914             ADD      R1,SP,#+80
   \   00000A10   0x0020             MOVS     R0,R4
   \   00000A12   0x.... 0x....      BL       GetField
    902                
    903                p_485->para1 = atof((char const *)CmdPara); 
   \   00000A16   0xA814             ADD      R0,SP,#+80
   \   00000A18   0x.... 0x....      BL       atof
   \   00000A1C   0x.... 0x....      BL       __aeabi_d2f
   \   00000A20   0xF8C8 0x0014      STR      R0,[R8, #+20]
    904                
    905                //强制初始化
    906                p_485->force_init = 1;
   \   00000A24   0x2001             MOVS     R0,#+1
   \   00000A26   0xF888 0x0099      STRB     R0,[R8, #+153]
    907              }
    908              
    909              if( p_232 != 0)
   \                     ??ProcessMsg_HUACE_88:
   \   00000A2A   0xF1B9 0x0F00      CMP      R9,#+0
   \   00000A2E   0xD013             BEQ.N    ??ProcessMsg_HUACE_89
    910              {
    911                
    912                /** 波特率 **/
    913                GetField(pMsg, CmdPara, 5);
   \   00000A30   0x2205             MOVS     R2,#+5
   \   00000A32   0xA914             ADD      R1,SP,#+80
   \   00000A34   0x0020             MOVS     R0,R4
   \   00000A36   0x.... 0x....      BL       GetField
    914                p_232 -> baud = atoi((char const *)CmdPara);
   \   00000A3A   0xA814             ADD      R0,SP,#+80
   \   00000A3C   0x.... 0x....      BL       atoi
   \   00000A40   0xF8C9 0x0008      STR      R0,[R9, #+8]
    915                
    916                /** 传感器型号 **/
    917                GetField(pMsg, CmdPara, 6);
   \   00000A44   0x2206             MOVS     R2,#+6
   \   00000A46   0xA914             ADD      R1,SP,#+80
   \   00000A48   0x0020             MOVS     R0,R4
   \   00000A4A   0x.... 0x....      BL       GetField
    918                
    919                strcpy(p_232->sname,(char const *)CmdPara);
   \   00000A4E   0xA914             ADD      R1,SP,#+80
   \   00000A50   0xF119 0x0020      ADDS     R0,R9,#+32
   \   00000A54   0x.... 0x....      BL       strcpy
    920                
    921              }
    922              
    923              if( p_bd != 0)
   \                     ??ProcessMsg_HUACE_89:
   \   00000A58   0x2E00             CMP      R6,#+0
   \   00000A5A   0xD06D             BEQ.N    ??ProcessMsg_HUACE_90
    924              {
    925                /** 波特率 **/
    926                
    927                GetField(pMsg, CmdPara, 5);
   \   00000A5C   0x2205             MOVS     R2,#+5
   \   00000A5E   0xA914             ADD      R1,SP,#+80
   \   00000A60   0x0020             MOVS     R0,R4
   \   00000A62   0x.... 0x....      BL       GetField
    928                i = atoi((char const *)CmdPara);
   \   00000A66   0xA814             ADD      R0,SP,#+80
   \   00000A68   0x.... 0x....      BL       atoi
   \   00000A6C   0x0007             MOVS     R7,R0
    929                
    930                //1:4800 2:9600 3:19200 4:57600 5:115200
    931                
    932                if( i == 4800)
   \   00000A6E   0xF5B7 0x5F96      CMP      R7,#+4800
   \   00000A72   0xD102             BNE.N    ??ProcessMsg_HUACE_91
    933                {
    934                  p_bd -> baud = 1;
   \   00000A74   0x2001             MOVS     R0,#+1
   \   00000A76   0x7230             STRB     R0,[R6, #+8]
   \   00000A78   0xE019             B.N      ??ProcessMsg_HUACE_92
    935                }
    936                else if( i == 9600)
   \                     ??ProcessMsg_HUACE_91:
   \   00000A7A   0xF5B7 0x5F16      CMP      R7,#+9600
   \   00000A7E   0xD102             BNE.N    ??ProcessMsg_HUACE_93
    937                {
    938                  p_bd -> baud = 2;
   \   00000A80   0x2002             MOVS     R0,#+2
   \   00000A82   0x7230             STRB     R0,[R6, #+8]
   \   00000A84   0xE013             B.N      ??ProcessMsg_HUACE_92
    939                }
    940                else if( i == 19200)
   \                     ??ProcessMsg_HUACE_93:
   \   00000A86   0xF5B7 0x4F96      CMP      R7,#+19200
   \   00000A8A   0xD102             BNE.N    ??ProcessMsg_HUACE_94
    941                {
    942                  p_bd -> baud = 3;
   \   00000A8C   0x2003             MOVS     R0,#+3
   \   00000A8E   0x7230             STRB     R0,[R6, #+8]
   \   00000A90   0xE00D             B.N      ??ProcessMsg_HUACE_92
    943                }
    944                else if( i == 57600)
   \                     ??ProcessMsg_HUACE_94:
   \   00000A92   0xF5B7 0x4F61      CMP      R7,#+57600
   \   00000A96   0xD102             BNE.N    ??ProcessMsg_HUACE_95
    945                {
    946                  p_bd -> baud = 4;
   \   00000A98   0x2004             MOVS     R0,#+4
   \   00000A9A   0x7230             STRB     R0,[R6, #+8]
   \   00000A9C   0xE007             B.N      ??ProcessMsg_HUACE_92
    947                }
    948                else if( i == 115200)
   \                     ??ProcessMsg_HUACE_95:
   \   00000A9E   0xF5B7 0x3FE1      CMP      R7,#+115200
   \   00000AA2   0xD102             BNE.N    ??ProcessMsg_HUACE_96
    949                {
    950                  p_bd -> baud = 5;
   \   00000AA4   0x2005             MOVS     R0,#+5
   \   00000AA6   0x7230             STRB     R0,[R6, #+8]
   \   00000AA8   0xE001             B.N      ??ProcessMsg_HUACE_92
    951                }
    952                else
    953                {
    954                  p_bd -> baud = 3;
   \                     ??ProcessMsg_HUACE_96:
   \   00000AAA   0x2003             MOVS     R0,#+3
   \   00000AAC   0x7230             STRB     R0,[R6, #+8]
    955                }
    956                
    957                bd_uart_init();
   \                     ??ProcessMsg_HUACE_92:
   \   00000AAE   0x.... 0x....      BL       bd_uart_init
    958                
    959                /** 协议类型 **/
    960                
    961                GetField(pMsg, CmdPara, 6);
   \   00000AB2   0x2206             MOVS     R2,#+6
   \   00000AB4   0xA914             ADD      R1,SP,#+80
   \   00000AB6   0x0020             MOVS     R0,R4
   \   00000AB8   0x.... 0x....      BL       GetField
    962                
    963                if(strcmp(CmdPara,"2.5") == 0)
   \   00000ABC   0xA18F             ADR.N    R1,??ProcessMsg_HUACE_2  ;; "2.5"
   \   00000ABE   0xA814             ADD      R0,SP,#+80
   \   00000AC0   0x.... 0x....      BL       strcmp
   \   00000AC4   0x2800             CMP      R0,#+0
   \   00000AC6   0xD102             BNE.N    ??ProcessMsg_HUACE_97
    964                {
    965                  p_bd -> proto_type = 1;
   \   00000AC8   0x2001             MOVS     R0,#+1
   \   00000ACA   0x7270             STRB     R0,[R6, #+9]
   \   00000ACC   0xE00A             B.N      ??ProcessMsg_HUACE_98
    966                }
    967                else if(strcmp(CmdPara,"4.0") == 0)
   \                     ??ProcessMsg_HUACE_97:
   \   00000ACE   0xA18C             ADR.N    R1,??ProcessMsg_HUACE_2+0x4  ;; "4.0"
   \   00000AD0   0xA814             ADD      R0,SP,#+80
   \   00000AD2   0x.... 0x....      BL       strcmp
   \   00000AD6   0x2800             CMP      R0,#+0
   \   00000AD8   0xD102             BNE.N    ??ProcessMsg_HUACE_99
    968                {
    969                  p_bd -> proto_type = 2;
   \   00000ADA   0x2002             MOVS     R0,#+2
   \   00000ADC   0x7270             STRB     R0,[R6, #+9]
   \   00000ADE   0xE001             B.N      ??ProcessMsg_HUACE_98
    970                }
    971                else
    972                {
    973                  p_bd -> proto_type = 2;
   \                     ??ProcessMsg_HUACE_99:
   \   00000AE0   0x2002             MOVS     R0,#+2
   \   00000AE2   0x7270             STRB     R0,[R6, #+9]
    974                }
    975                
    976                /** 目标地址 **/
    977                
    978                GetField(pMsg, CmdPara, 7);
   \                     ??ProcessMsg_HUACE_98:
   \   00000AE4   0x2207             MOVS     R2,#+7
   \   00000AE6   0xA914             ADD      R1,SP,#+80
   \   00000AE8   0x0020             MOVS     R0,R4
   \   00000AEA   0x.... 0x....      BL       GetField
    979                
    980                p_bd -> dist_ic = atoi(CmdPara);
   \   00000AEE   0xA814             ADD      R0,SP,#+80
   \   00000AF0   0x.... 0x....      BL       atoi
   \   00000AF4   0x60F0             STR      R0,[R6, #+12]
    981                
    982                /** 编码类型 **/
    983                
    984                GetField(pMsg, CmdPara, 8);
   \   00000AF6   0x2208             MOVS     R2,#+8
   \   00000AF8   0xA914             ADD      R1,SP,#+80
   \   00000AFA   0x0020             MOVS     R0,R4
   \   00000AFC   0x.... 0x....      BL       GetField
    985                
    986                if( strcmp(CmdPara,"HANZI") == 0)
   \   00000B00   0xF8DF 0x1D30      LDR.W    R1,??ProcessMsg_HUACE_100
   \   00000B04   0xA814             ADD      R0,SP,#+80
   \   00000B06   0x.... 0x....      BL       strcmp
   \   00000B0A   0x2800             CMP      R0,#+0
   \   00000B0C   0xD102             BNE.N    ??ProcessMsg_HUACE_101
    987                {
    988                  p_bd -> code_type = 1;
   \   00000B0E   0x2001             MOVS     R0,#+1
   \   00000B10   0x72B0             STRB     R0,[R6, #+10]
   \   00000B12   0xE011             B.N      ??ProcessMsg_HUACE_90
    989                }
    990                else if(strcmp(CmdPara,"BCD") == 0)
   \                     ??ProcessMsg_HUACE_101:
   \   00000B14   0xA17D             ADR.N    R1,??ProcessMsg_HUACE_2+0x10  ;; "BCD"
   \   00000B16   0xA814             ADD      R0,SP,#+80
   \   00000B18   0x.... 0x....      BL       strcmp
   \   00000B1C   0x2800             CMP      R0,#+0
   \   00000B1E   0xD109             BNE.N    ??ProcessMsg_HUACE_102
    991                {
    992                  p_bd -> code_type = 2;
   \   00000B20   0x2002             MOVS     R0,#+2
   \   00000B22   0x72B0             STRB     R0,[R6, #+10]
   \   00000B24   0xE008             B.N      ??ProcessMsg_HUACE_90
   \   00000B26   0xBF00             Nop      
   \                     ??ProcessMsg_HUACE_64:
   \   00000B28   0x50 0x57          DC8      "PWM"
   \              0x4D 0x00    
   \   00000B2C   0x31 0x00          DC8      "1",0x0,0x0
   \              0x00 0x00    
   \   00000B30   0x32 0x00          DC8      "2",0x0,0x0
   \              0x00 0x00    
    993                }
    994                else
    995                {
    996                  p_bd -> code_type = 2;
   \                     ??ProcessMsg_HUACE_102:
   \   00000B34   0x2002             MOVS     R0,#+2
   \   00000B36   0x72B0             STRB     R0,[R6, #+10]
    997                }
    998                
    999              }
   1000              
   1001              if( p_rain != 0)
   \                     ??ProcessMsg_HUACE_90:
   \   00000B38   0xF1BB 0x0F00      CMP      R11,#+0
   \   00000B3C   0xD01A             BEQ.N    ??ProcessMsg_HUACE_103
   1002              {
   1003                /** 分辨率 **/
   1004                GetField(pMsg, CmdPara, 5);
   \   00000B3E   0x2205             MOVS     R2,#+5
   \   00000B40   0xA914             ADD      R1,SP,#+80
   \   00000B42   0x0020             MOVS     R0,R4
   \   00000B44   0x.... 0x....      BL       GetField
   1005                p_rain -> resol =(uint8_t )( atof((char const *)CmdPara) * 10);
   \   00000B48   0xA814             ADD      R0,SP,#+80
   \   00000B4A   0x.... 0x....      BL       atof
   \   00000B4E   0x2200             MOVS     R2,#+0
   \   00000B50   0xF8DF 0x39C0      LDR.W    R3,??ProcessMsg_HUACE_52+0xC  ;; 0x40240000
   \   00000B54   0x.... 0x....      BL       __aeabi_dmul
   \   00000B58   0x.... 0x....      BL       __aeabi_d2iz
   \   00000B5C   0xF88B 0x0008      STRB     R0,[R11, #+8]
   1006                
   1007                /** 传感器型号 **/
   1008                GetField(pMsg, CmdPara, 6);
   \   00000B60   0x2206             MOVS     R2,#+6
   \   00000B62   0xA914             ADD      R1,SP,#+80
   \   00000B64   0x0020             MOVS     R0,R4
   \   00000B66   0x.... 0x....      BL       GetField
   1009                
   1010                strcpy(p_rain->sname,(char const *)CmdPara);
   \   00000B6A   0xA914             ADD      R1,SP,#+80
   \   00000B6C   0xF11B 0x0009      ADDS     R0,R11,#+9
   \   00000B70   0x.... 0x....      BL       strcpy
   1011                
   1012              }
   1013          	
   1014          	if(p_pwm != 0)
   \                     ??ProcessMsg_HUACE_103:
   \   00000B74   0xF1BA 0x0F00      CMP      R10,#+0
   \   00000B78   0xD009             BEQ.N    ??ProcessMsg_HUACE_104
   1015          	{
   1016          		GetField(pMsg, CmdPara, 5);
   \   00000B7A   0x2205             MOVS     R2,#+5
   \   00000B7C   0xA914             ADD      R1,SP,#+80
   \   00000B7E   0x0020             MOVS     R0,R4
   \   00000B80   0x.... 0x....      BL       GetField
   1017                	strcpy(p_pwm->sname,(char const *)CmdPara);
   \   00000B84   0xA914             ADD      R1,SP,#+80
   \   00000B86   0xF11A 0x0010      ADDS     R0,R10,#+16
   \   00000B8A   0x.... 0x....      BL       strcpy
   1018          	}
   1019              
   1020              
   1021              /** copy 到统一缓冲区 **/
   1022              memcpy(&g_Byte128[32+105],&rs485_para,32);
   \                     ??ProcessMsg_HUACE_104:
   \   00000B8E   0x2220             MOVS     R2,#+32
   \   00000B90   0xF8DF 0x1A2C      LDR.W    R1,??ProcessMsg_HUACE_55+0x4
   \   00000B94   0xF8DF 0x0E6C      LDR.W    R0,??ProcessMsg_HUACE_105
   \   00000B98   0x.... 0x....      BL       memcpy
   1023              memcpy(&g_Byte128[32+137],&adc0_para,32);
   \   00000B9C   0x2220             MOVS     R2,#+32
   \   00000B9E   0xF8DF 0x1A28      LDR.W    R1,??ProcessMsg_HUACE_55+0xC
   \   00000BA2   0xF8DF 0x0E64      LDR.W    R0,??ProcessMsg_HUACE_105+0x4
   \   00000BA6   0x.... 0x....      BL       memcpy
   1024              memcpy(&g_Byte128[32+169],&adc1_para,32);
   \   00000BAA   0x2220             MOVS     R2,#+32
   \   00000BAC   0xF8DF 0x1A20      LDR.W    R1,??ProcessMsg_HUACE_55+0x14
   \   00000BB0   0xF8DF 0x0E58      LDR.W    R0,??ProcessMsg_HUACE_105+0x8
   \   00000BB4   0x.... 0x....      BL       memcpy
   1025              memcpy(&g_Byte128[32+201],&adc2_para,32);
   \   00000BB8   0x2220             MOVS     R2,#+32
   \   00000BBA   0xF8DF 0x1A1C      LDR.W    R1,??ProcessMsg_HUACE_55+0x1C
   \   00000BBE   0xF8DF 0x0E50      LDR.W    R0,??ProcessMsg_HUACE_105+0xC
   \   00000BC2   0x.... 0x....      BL       memcpy
   1026              memcpy(&g_Byte128[32+233],&rs232_para,32);
   \   00000BC6   0x2220             MOVS     R2,#+32
   \   00000BC8   0xF8DF 0x1A14      LDR.W    R1,??ProcessMsg_HUACE_55+0x24
   \   00000BCC   0xF8DF 0x0E98      LDR.W    R0,??ProcessMsg_HUACE_106
   \   00000BD0   0x.... 0x....      BL       memcpy
   1027          	memcpy(&g_Byte128[32+420],&pwm_para,32);
   \   00000BD4   0x2220             MOVS     R2,#+32
   \   00000BD6   0xF8DF 0x1A14      LDR.W    R1,??ProcessMsg_HUACE_55+0x30
   \   00000BDA   0xF8DF 0x0E90      LDR.W    R0,??ProcessMsg_HUACE_106+0x4
   \   00000BDE   0x.... 0x....      BL       memcpy
   1028              
   1029              g_Byte128[32+13] = rain_para.frq >> 8;
   \   00000BE2   0xF8DF 0x077C      LDR.W    R0,??ProcessMsg_HUACE_40+0x8
   \   00000BE6   0x6840             LDR      R0,[R0, #+4]
   \   00000BE8   0x0A00             LSRS     R0,R0,#+8
   \   00000BEA   0x494B             LDR.N    R1,??ProcessMsg_HUACE_2+0x1C
   \   00000BEC   0xF881 0x002D      STRB     R0,[R1, #+45]
   1030              g_Byte128[32+14] = rain_para.frq & 0xff;
   \   00000BF0   0x4849             LDR.N    R0,??ProcessMsg_HUACE_2+0x1C
   \   00000BF2   0xF8DF 0x176C      LDR.W    R1,??ProcessMsg_HUACE_40+0x8
   \   00000BF6   0x6849             LDR      R1,[R1, #+4]
   \   00000BF8   0xF880 0x102E      STRB     R1,[R0, #+46]
   1031              g_Byte128[32+18] = rain_para.resol;
   \   00000BFC   0x4846             LDR.N    R0,??ProcessMsg_HUACE_2+0x1C
   \   00000BFE   0xF8DF 0x1760      LDR.W    R1,??ProcessMsg_HUACE_40+0x8
   \   00000C02   0x7A09             LDRB     R1,[R1, #+8]
   \   00000C04   0xF880 0x1032      STRB     R1,[R0, #+50]
   1032              
   1033              rs485_para.sname[10] = 0;
   \   00000C08   0xF8DF 0x09B4      LDR.W    R0,??ProcessMsg_HUACE_55+0x4
   \   00000C0C   0x2100             MOVS     R1,#+0
   \   00000C0E   0xF880 0x102A      STRB     R1,[R0, #+42]
   1034              adc0_para.sname[10] = 0;
   \   00000C12   0xF8DF 0x09B4      LDR.W    R0,??ProcessMsg_HUACE_55+0xC
   \   00000C16   0x2100             MOVS     R1,#+0
   \   00000C18   0xF880 0x102A      STRB     R1,[R0, #+42]
   1035              adc1_para.sname[10] = 0;
   \   00000C1C   0xF8DF 0x09B0      LDR.W    R0,??ProcessMsg_HUACE_55+0x14
   \   00000C20   0x2100             MOVS     R1,#+0
   \   00000C22   0xF880 0x102A      STRB     R1,[R0, #+42]
   1036              adc2_para.sname[10] = 0;
   \   00000C26   0xF8DF 0x09B0      LDR.W    R0,??ProcessMsg_HUACE_55+0x1C
   \   00000C2A   0x2100             MOVS     R1,#+0
   \   00000C2C   0xF880 0x102A      STRB     R1,[R0, #+42]
   1037              rs232_para.sname[10] = 0;
   \   00000C30   0xF8DF 0x09AC      LDR.W    R0,??ProcessMsg_HUACE_55+0x24
   \   00000C34   0x2100             MOVS     R1,#+0
   \   00000C36   0xF880 0x102A      STRB     R1,[R0, #+42]
   1038              rain_para.sname[10] = 0;
   \   00000C3A   0xF8DF 0x0724      LDR.W    R0,??ProcessMsg_HUACE_40+0x8
   \   00000C3E   0x2100             MOVS     R1,#+0
   \   00000C40   0x74C1             STRB     R1,[R0, #+19]
   1039          	pwm_para.sname[10] = 0;
   \   00000C42   0xF8DF 0x09A8      LDR.W    R0,??ProcessMsg_HUACE_55+0x30
   \   00000C46   0x2100             MOVS     R1,#+0
   \   00000C48   0x7681             STRB     R1,[R0, #+26]
   1040              
   1041              memcpy(&g_Byte128[32+266],rs485_para.sname,21);
   \   00000C4A   0x2215             MOVS     R2,#+21
   \   00000C4C   0xF8DF 0x1E78      LDR.W    R1,??ProcessMsg_HUACE_107
   \   00000C50   0xF8DF 0x0E78      LDR.W    R0,??ProcessMsg_HUACE_107+0x4
   \   00000C54   0x.... 0x....      BL       memcpy
   1042              memcpy(&g_Byte128[32+287],adc0_para.sname,21);
   \   00000C58   0x2215             MOVS     R2,#+21
   \   00000C5A   0xF8DF 0x1E74      LDR.W    R1,??ProcessMsg_HUACE_107+0x8
   \   00000C5E   0xF8DF 0x0E74      LDR.W    R0,??ProcessMsg_HUACE_107+0xC
   \   00000C62   0x.... 0x....      BL       memcpy
   1043              memcpy(&g_Byte128[32+308],adc1_para.sname,21);
   \   00000C66   0x2215             MOVS     R2,#+21
   \   00000C68   0xF8DF 0x1E6C      LDR.W    R1,??ProcessMsg_HUACE_107+0x10
   \   00000C6C   0xF8DF 0x0E6C      LDR.W    R0,??ProcessMsg_HUACE_107+0x14
   \   00000C70   0x.... 0x....      BL       memcpy
   1044              memcpy(&g_Byte128[32+329],adc2_para.sname,21);
   \   00000C74   0x2215             MOVS     R2,#+21
   \   00000C76   0xF8DF 0x1E68      LDR.W    R1,??ProcessMsg_HUACE_107+0x18
   \   00000C7A   0xF8DF 0x0E68      LDR.W    R0,??ProcessMsg_HUACE_107+0x1C
   \   00000C7E   0x.... 0x....      BL       memcpy
   1045              memcpy(&g_Byte128[32+350],rs232_para.sname,21);
   \   00000C82   0x2215             MOVS     R2,#+21
   \   00000C84   0xF8DF 0x1E60      LDR.W    R1,??ProcessMsg_HUACE_107+0x20
   \   00000C88   0xF8DF 0x0E60      LDR.W    R0,??ProcessMsg_HUACE_107+0x24
   \   00000C8C   0x.... 0x....      BL       memcpy
   1046              memcpy(&g_Byte128[32+371],rain_para.sname,21);
   \   00000C90   0x2215             MOVS     R2,#+21
   \   00000C92   0xF8DF 0x1E5C      LDR.W    R1,??ProcessMsg_HUACE_107+0x28
   \   00000C96   0xF8DF 0x0E5C      LDR.W    R0,??ProcessMsg_HUACE_107+0x2C
   \   00000C9A   0x.... 0x....      BL       memcpy
   1047          	memcpy(&g_Byte128[32+452],pwm_para.sname,21);
   \   00000C9E   0x2215             MOVS     R2,#+21
   \   00000CA0   0xF8DF 0x1E8C      LDR.W    R1,??ProcessMsg_HUACE_108
   \   00000CA4   0xF8DF 0x0E8C      LDR.W    R0,??ProcessMsg_HUACE_108+0x4
   \   00000CA8   0x.... 0x....      BL       memcpy
   1048              
   1049              memcpy(&g_Byte128[32+403],&bd_para,16);
   \   00000CAC   0x2210             MOVS     R2,#+16
   \   00000CAE   0x491F             LDR.N    R1,??ProcessMsg_HUACE_2+0x30
   \   00000CB0   0xF8DF 0x0E84      LDR.W    R0,??ProcessMsg_HUACE_108+0x8
   \   00000CB4   0x.... 0x....      BL       memcpy
   1050              
   1051              reply_cmd(pMsg, Length);
   \   00000CB8   0xF8BD 0x1830      LDRH     R1,[SP, #+2096]
   \   00000CBC   0x0020             MOVS     R0,R4
   \   00000CBE   0x.... 0x....      BL       reply_cmd
   \   00000CC2   0xF001 0xBBAA      B.W      ??ProcessMsg_HUACE_9
   1052            }
   1053            else if(strcmp((const char *)CmdId,"REQCONF") == 0)
   \                     ??ProcessMsg_HUACE_54:
   \   00000CC6   0xF8DF 0x1E74      LDR.W    R1,??ProcessMsg_HUACE_108+0xC
   \   00000CCA   0xA822             ADD      R0,SP,#+136
   \   00000CCC   0x.... 0x....      BL       strcmp
   \   00000CD0   0x2800             CMP      R0,#+0
   \   00000CD2   0xD12D             BNE.N    ??ProcessMsg_HUACE_109
   1054            {
   1055              unsigned char buf[500];
   1056              DbgMsg("REQCONF \r\n");
   \   00000CD4   0xF8DF 0x0E68      LDR.W    R0,??ProcessMsg_HUACE_108+0x10
   \   00000CD8   0x.... 0x....      BL       DbgMsg
   1057              log_config_info((char *)buf);
   \   00000CDC   0xF50D 0x60C7      ADD      R0,SP,#+1592
   \   00000CE0   0x.... 0x....      BL       log_config_info
   1058              reply_cmd(buf, strlen((char const *)buf));
   \   00000CE4   0xF50D 0x60C7      ADD      R0,SP,#+1592
   \   00000CE8   0x.... 0x....      BL       strlen
   \   00000CEC   0x0001             MOVS     R1,R0
   \   00000CEE   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000CF0   0xF50D 0x60C7      ADD      R0,SP,#+1592
   \   00000CF4   0x.... 0x....      BL       reply_cmd
   1059              return;
   \   00000CF8   0xF001 0xBB91      B.W      ??ProcessMsg_HUACE_4
   \                     ??ProcessMsg_HUACE_2:
   \   00000CFC   0x32 0x2E          DC8      "2.5"
   \              0x35 0x00    
   \   00000D00   0x34 0x2E          DC8      "4.0"
   \              0x30 0x00    
   \   00000D04   0x........         DC32     g_Debug
   \   00000D08   0x........         DC32     `?<Constant "hc msg err !!! \\r\\n">`
   \   00000D0C   0x42 0x43          DC8      "BCD"
   \              0x44 0x00    
   \   00000D10   0x........         DC32     `?<Constant "COMMOD">`
   \   00000D14   0x........         DC32     `?<Constant "COMMOD need reboot\\r\\n">`
   \   00000D18   0x........         DC32     g_Byte128
   \   00000D1C   0x........         DC32     `?<Constant "GPRS">`
   \   00000D20   0x........         DC32     `?<Constant "AUTO">`
   \   00000D24   0x........         DC32     `?<Constant "DSTIC">`
   \   00000D28   0x........         DC32     `?<Constant "DSTIC \\r\\n">`
   \   00000D2C   0x........         DC32     bd_para
   1060            }
   1061            else if(strcmp((const char *)CmdId,"REQRAINDAT") == 0)
   \                     ??ProcessMsg_HUACE_109:
   \   00000D30   0xF8DF 0x1E10      LDR.W    R1,??ProcessMsg_HUACE_108+0x14
   \   00000D34   0xA822             ADD      R0,SP,#+136
   \   00000D36   0x.... 0x....      BL       strcmp
   \   00000D3A   0x2800             CMP      R0,#+0
   \   00000D3C   0xD14D             BNE.N    ??ProcessMsg_HUACE_110
   1062            {
   1063              DbgMsg("REQRAINDAT\r\n");
   \   00000D3E   0xF8DF 0x0E08      LDR.W    R0,??ProcessMsg_HUACE_108+0x18
   \   00000D42   0x.... 0x....      BL       DbgMsg
   1064              
   1065              struct DATA_STRUCT dat;
   1066              
   1067              g_RtuStatus.led_upload = 1;
   \   00000D46   0x4891             LDR.N    R0,??ProcessMsg_HUACE_11+0x24
   \   00000D48   0x2101             MOVS     R1,#+1
   \   00000D4A   0xF880 0x1036      STRB     R1,[R0, #+54]
   1068              
   1069              rain_get_curr(&dat);
   \   00000D4E   0xA8AE             ADD      R0,SP,#+696
   \   00000D50   0x.... 0x....      BL       rain_get_curr
   1070              
   1071              unsigned char msg_buf[256];
   1072              char crc;
   1073              int i;
   1074              
   1075              sprintf((char*)msg_buf,"$0,%s,%04d%02d%02d,%02d%02d%02d,%d,,%s,*",\
   1076                g_RtuConfig.rtuid,dat.y,dat.m,dat.d, dat.H,dat.M,dat.S,\
   1077                  dat.type,\
   1078                    dat.data);
   \   00000D54   0xA8B0             ADD      R0,SP,#+704
   \   00000D56   0x9006             STR      R0,[SP, #+24]
   \   00000D58   0xF89D 0x02BF      LDRB     R0,[SP, #+703]
   \   00000D5C   0x9005             STR      R0,[SP, #+20]
   \   00000D5E   0xF89D 0x02BE      LDRB     R0,[SP, #+702]
   \   00000D62   0x9004             STR      R0,[SP, #+16]
   \   00000D64   0xF89D 0x02BD      LDRB     R0,[SP, #+701]
   \   00000D68   0x9003             STR      R0,[SP, #+12]
   \   00000D6A   0xF89D 0x02BC      LDRB     R0,[SP, #+700]
   \   00000D6E   0x9002             STR      R0,[SP, #+8]
   \   00000D70   0xF89D 0x02BB      LDRB     R0,[SP, #+699]
   \   00000D74   0x9001             STR      R0,[SP, #+4]
   \   00000D76   0xF89D 0x02BA      LDRB     R0,[SP, #+698]
   \   00000D7A   0x9000             STR      R0,[SP, #+0]
   \   00000D7C   0xF8BD 0x32B8      LDRH     R3,[SP, #+696]
   \   00000D80   0x4A7E             LDR.N    R2,??ProcessMsg_HUACE_11+0x14
   \   00000D82   0xF8DF 0x1E9C      LDR.W    R1,??ProcessMsg_HUACE_111
   \   00000D86   0xF50D 0x60A7      ADD      R0,SP,#+1336
   \   00000D8A   0x.... 0x....      BL       sprintf
   1079              crc = 0;
   \   00000D8E   0x2000             MOVS     R0,#+0
   \   00000D90   0x0005             MOVS     R5,R0
   1080              for(i=0; i<strlen((char const *)msg_buf); i++)
   \   00000D92   0x2000             MOVS     R0,#+0
   \   00000D94   0x0006             MOVS     R6,R0
   \                     ??ProcessMsg_HUACE_112:
   \   00000D96   0xF50D 0x60A7      ADD      R0,SP,#+1336
   \   00000D9A   0x.... 0x....      BL       strlen
   \   00000D9E   0x4286             CMP      R6,R0
   \   00000DA0   0xD205             BCS.N    ??ProcessMsg_HUACE_113
   1081                crc^=msg_buf[i];
   \   00000DA2   0xF50D 0x60A7      ADD      R0,SP,#+1336
   \   00000DA6   0x5C30             LDRB     R0,[R6, R0]
   \   00000DA8   0x4045             EORS     R5,R0,R5
   \   00000DAA   0x1C76             ADDS     R6,R6,#+1
   \   00000DAC   0xE7F3             B.N      ??ProcessMsg_HUACE_112
   1082              sprintf((char *)msg_buf, "%s%02X\r\n", msg_buf, crc);
   \                     ??ProcessMsg_HUACE_113:
   \   00000DAE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000DB0   0x002B             MOVS     R3,R5
   \   00000DB2   0xF50D 0x62A7      ADD      R2,SP,#+1336
   \   00000DB6   0xF8DF 0x1EA4      LDR.W    R1,??ProcessMsg_HUACE_114
   \   00000DBA   0xF50D 0x60A7      ADD      R0,SP,#+1336
   \   00000DBE   0x.... 0x....      BL       sprintf
   1083              reply_cmd(msg_buf, strlen((char const *)msg_buf));
   \   00000DC2   0xF50D 0x60A7      ADD      R0,SP,#+1336
   \   00000DC6   0x.... 0x....      BL       strlen
   \   00000DCA   0x0001             MOVS     R1,R0
   \   00000DCC   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000DCE   0xF50D 0x60A7      ADD      R0,SP,#+1336
   \   00000DD2   0x.... 0x....      BL       reply_cmd
   1084              return;
   \   00000DD6   0xF001 0xBB22      B.W      ??ProcessMsg_HUACE_4
   1085            }
   1086            else if(strcmp((const char *)CmdId,"REQDISTDAT") == 0)
   \                     ??ProcessMsg_HUACE_110:
   \   00000DDA   0xF8DF 0x1E84      LDR.W    R1,??ProcessMsg_HUACE_114+0x4
   \   00000DDE   0xA822             ADD      R0,SP,#+136
   \   00000DE0   0x.... 0x....      BL       strcmp
   \   00000DE4   0x2800             CMP      R0,#+0
   \   00000DE6   0xD151             BNE.N    ??ProcessMsg_HUACE_115
   1087            {
   1088              unsigned char msg_buf[100];
   1089              uint32_t i;
   1090              char crc;
   1091              
   1092              struct TIME_STRUCT time;
   1093              
   1094              rtc_get_time(&time);
   \   00000DE8   0xA829             ADD      R0,SP,#+164
   \   00000DEA   0x.... 0x....      BL       rtc_get_time
   1095              
   1096              DbgMsg("REQDISTDAT\r\n");
   \   00000DEE   0xF8DF 0x0E74      LDR.W    R0,??ProcessMsg_HUACE_114+0x8
   \   00000DF2   0x.... 0x....      BL       DbgMsg
   1097              
   1098              g_RtuStatus.led_upload = 1;
   \   00000DF6   0x4865             LDR.N    R0,??ProcessMsg_HUACE_11+0x24
   \   00000DF8   0x2101             MOVS     R1,#+1
   \   00000DFA   0xF880 0x1036      STRB     R1,[R0, #+54]
   1099              g_RtuStatus.led_dwload = 1;
   \   00000DFE   0x4863             LDR.N    R0,??ProcessMsg_HUACE_11+0x24
   \   00000E00   0x2101             MOVS     R1,#+1
   \   00000E02   0xF880 0x1037      STRB     R1,[R0, #+55]
   1100              
   1101              sprintf((char *)msg_buf,"$0,%s,%04d%02d%02d,%02d%02d%02d,%d,,%s,*",\
   1102                g_RtuConfig.rtuid,time.y,time.m,time.d, time.H,time.M,time.S,\
   1103                  1, rs485_para.data);
   \   00000E06   0xF8DF 0x0E60      LDR.W    R0,??ProcessMsg_HUACE_114+0xC
   \   00000E0A   0x9006             STR      R0,[SP, #+24]
   \   00000E0C   0x2001             MOVS     R0,#+1
   \   00000E0E   0x9005             STR      R0,[SP, #+20]
   \   00000E10   0xF89D 0x00AA      LDRB     R0,[SP, #+170]
   \   00000E14   0x9004             STR      R0,[SP, #+16]
   \   00000E16   0xF89D 0x00A9      LDRB     R0,[SP, #+169]
   \   00000E1A   0x9003             STR      R0,[SP, #+12]
   \   00000E1C   0xF89D 0x00A8      LDRB     R0,[SP, #+168]
   \   00000E20   0x9002             STR      R0,[SP, #+8]
   \   00000E22   0xF89D 0x00A7      LDRB     R0,[SP, #+167]
   \   00000E26   0x9001             STR      R0,[SP, #+4]
   \   00000E28   0xF89D 0x00A6      LDRB     R0,[SP, #+166]
   \   00000E2C   0x9000             STR      R0,[SP, #+0]
   \   00000E2E   0xF8BD 0x30A4      LDRH     R3,[SP, #+164]
   \   00000E32   0x4A52             LDR.N    R2,??ProcessMsg_HUACE_11+0x14
   \   00000E34   0xF8DF 0x1DE8      LDR.W    R1,??ProcessMsg_HUACE_111
   \   00000E38   0xA8FF             ADD      R0,SP,#+1020
   \   00000E3A   0x30D8             ADDS     R0,R0,#+216
   \   00000E3C   0x.... 0x....      BL       sprintf
   1104              crc = 0;
   \   00000E40   0x2000             MOVS     R0,#+0
   \   00000E42   0x0006             MOVS     R6,R0
   1105              for(i=0; i<strlen((char const *)msg_buf); i++)
   \   00000E44   0x2000             MOVS     R0,#+0
   \   00000E46   0x0005             MOVS     R5,R0
   \                     ??ProcessMsg_HUACE_116:
   \   00000E48   0xA8FF             ADD      R0,SP,#+1020
   \   00000E4A   0x30D8             ADDS     R0,R0,#+216
   \   00000E4C   0x.... 0x....      BL       strlen
   \   00000E50   0x4285             CMP      R5,R0
   \   00000E52   0xD205             BCS.N    ??ProcessMsg_HUACE_117
   1106                crc^=msg_buf[i];
   \   00000E54   0xA8FF             ADD      R0,SP,#+1020
   \   00000E56   0x30D8             ADDS     R0,R0,#+216
   \   00000E58   0x5C28             LDRB     R0,[R5, R0]
   \   00000E5A   0x4046             EORS     R6,R0,R6
   \   00000E5C   0x1C6D             ADDS     R5,R5,#+1
   \   00000E5E   0xE7F3             B.N      ??ProcessMsg_HUACE_116
   1107              sprintf((char *)msg_buf, "%s%02X\r\n", msg_buf, crc);
   \                     ??ProcessMsg_HUACE_117:
   \   00000E60   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000E62   0x0033             MOVS     R3,R6
   \   00000E64   0xAAFF             ADD      R2,SP,#+1020
   \   00000E66   0x32D8             ADDS     R2,R2,#+216
   \   00000E68   0xF8DF 0x1DF0      LDR.W    R1,??ProcessMsg_HUACE_114
   \   00000E6C   0xA8FF             ADD      R0,SP,#+1020
   \   00000E6E   0x30D8             ADDS     R0,R0,#+216
   \   00000E70   0x.... 0x....      BL       sprintf
   1108              
   1109              reply_cmd(msg_buf, strlen((char const *)msg_buf));
   \   00000E74   0xA8FF             ADD      R0,SP,#+1020
   \   00000E76   0x30D8             ADDS     R0,R0,#+216
   \   00000E78   0x.... 0x....      BL       strlen
   \   00000E7C   0x0001             MOVS     R1,R0
   \   00000E7E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000E80   0xA8FF             ADD      R0,SP,#+1020
   \   00000E82   0x30D8             ADDS     R0,R0,#+216
   \   00000E84   0x.... 0x....      BL       reply_cmd
   1110              return;
   \   00000E88   0xF001 0xBAC9      B.W      ??ProcessMsg_HUACE_4
   1111            }
   1112            else if(strcmp((const char *)CmdId,"TEMPDAT") == 0)
   \                     ??ProcessMsg_HUACE_115:
   \   00000E8C   0xF8DF 0x1E70      LDR.W    R1,??ProcessMsg_HUACE_118
   \   00000E90   0xA822             ADD      R0,SP,#+136
   \   00000E92   0x.... 0x....      BL       strcmp
   \   00000E96   0x2800             CMP      R0,#+0
   \   00000E98   0xF040 0x83BC      BNE.W    ??ProcessMsg_HUACE_119
   1113            {
   1114              unsigned char msg_buf[150];
   1115              uint32_t i;
   1116              char crc;
   1117              adc_para_t *p_adc = 0;
   \   00000E9C   0x2500             MOVS     R5,#+0
   1118              uint8_t adc_ch = 0;
   \   00000E9E   0x2000             MOVS     R0,#+0
   \   00000EA0   0xF88D 0x0044      STRB     R0,[SP, #+68]
   1119              uint16_t len = 0;
   \   00000EA4   0x2600             MOVS     R6,#+0
   1120              uint8_t type = 0;
   \   00000EA6   0x2000             MOVS     R0,#+0
   \   00000EA8   0xF88D 0x0045      STRB     R0,[SP, #+69]
   1121              float adc_val; 
   1122              
   1123              struct TIME_STRUCT time;
   1124              
   1125              rtc_get_time(&time);
   \   00000EAC   0xA812             ADD      R0,SP,#+72
   \   00000EAE   0x.... 0x....      BL       rtc_get_time
   1126              
   1127              //DbgMsg("REQDISTDAT\r\n");
   1128              /** type **/
   1129              GetField(pMsg,CmdPara,2);
   \   00000EB2   0x2202             MOVS     R2,#+2
   \   00000EB4   0xA914             ADD      R1,SP,#+80
   \   00000EB6   0x0020             MOVS     R0,R4
   \   00000EB8   0x.... 0x....      BL       GetField
   1130              
   1131              type = atoi(CmdPara);
   \   00000EBC   0xA814             ADD      R0,SP,#+80
   \   00000EBE   0x.... 0x....      BL       atoi
   \   00000EC2   0xF88D 0x0045      STRB     R0,[SP, #+69]
   1132              
   1133              /** port **/
   1134              GetField(pMsg,CmdPara,3);
   \   00000EC6   0x2203             MOVS     R2,#+3
   \   00000EC8   0xA914             ADD      R1,SP,#+80
   \   00000ECA   0x0020             MOVS     R0,R4
   \   00000ECC   0x.... 0x....      BL       GetField
   1135              
   1136              if( strcmp(CmdPara,"RS485") == 0)
   \   00000ED0   0xF8DF 0x16E8      LDR.W    R1,??ProcessMsg_HUACE_55
   \   00000ED4   0xA814             ADD      R0,SP,#+80
   \   00000ED6   0x.... 0x....      BL       strcmp
   \   00000EDA   0x2800             CMP      R0,#+0
   \   00000EDC   0xF040 0x80DB      BNE.W    ??ProcessMsg_HUACE_120
   1137              {
   1138                
   1139                if( type != rs485_para.type)
   \   00000EE0   0xF89D 0x0045      LDRB     R0,[SP, #+69]
   \   00000EE4   0xF8DF 0x16D8      LDR.W    R1,??ProcessMsg_HUACE_55+0x4
   \   00000EE8   0x6809             LDR      R1,[R1, #+0]
   \   00000EEA   0x4288             CMP      R0,R1
   \   00000EEC   0xF041 0x8297      BNE.W    ??ProcessMsg_HUACE_4
   1140                  return;
   1141                
   1142                for( i = 0 ; i < rs485_para.cnt;i++)
   \                     ??ProcessMsg_HUACE_121:
   \   00000EF0   0x2000             MOVS     R0,#+0
   \   00000EF2   0x4680             MOV      R8,R0
   \                     ??ProcessMsg_HUACE_122:
   \   00000EF4   0xF8DF 0x06C8      LDR.W    R0,??ProcessMsg_HUACE_55+0x4
   \   00000EF8   0x6880             LDR      R0,[R0, #+8]
   \   00000EFA   0x4580             CMP      R8,R0
   \   00000EFC   0xF080 0x80C9      BCS.W    ??ProcessMsg_HUACE_123
   1143                {
   1144                  
   1145                  len = 0;
   \   00000F00   0x2000             MOVS     R0,#+0
   \   00000F02   0x0006             MOVS     R6,R0
   1146                  uint16_t wr_last;
   1147                  
   1148                  
   1149                  memset(rs485_para.data,0,sizeof(rs485_para.data));
   \   00000F04   0x2264             MOVS     R2,#+100
   \   00000F06   0x2100             MOVS     R1,#+0
   \   00000F08   0xF8DF 0x0D5C      LDR.W    R0,??ProcessMsg_HUACE_114+0xC
   \   00000F0C   0x.... 0x....      BL       memset
   1150                  
   1151                  rs485_quiry(i+1);
   \   00000F10   0xF118 0x0001      ADDS     R0,R8,#+1
   \   00000F14   0x.... 0x....      BL       rs485_quiry
   1152                  
   1153                  while( g_DeviceGPS.RdSp == g_DeviceGPS.WrSp)
   \                     ??ProcessMsg_HUACE_124:
   \   00000F18   0xF8DF 0x0E74      LDR.W    R0,??ProcessMsg_HUACE_125
   \   00000F1C   0x8B40             LDRH     R0,[R0, #+26]
   \   00000F1E   0xF8DF 0x1E70      LDR.W    R1,??ProcessMsg_HUACE_125
   \   00000F22   0x8B09             LDRH     R1,[R1, #+24]
   \   00000F24   0x4288             CMP      R0,R1
   \   00000F26   0xD109             BNE.N    ??ProcessMsg_HUACE_126
   1154                  {
   1155                    OSTimeDlyHMSM(0,0,0,20);
   \   00000F28   0x2314             MOVS     R3,#+20
   \   00000F2A   0x2200             MOVS     R2,#+0
   \   00000F2C   0x2100             MOVS     R1,#+0
   \   00000F2E   0x2000             MOVS     R0,#+0
   \   00000F30   0x.... 0x....      BL       OSTimeDlyHMSM
   1156                    len++;
   \   00000F34   0x1C76             ADDS     R6,R6,#+1
   1157                    
   1158                    if( len > 60)
   \   00000F36   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000F38   0x2E3D             CMP      R6,#+61
   \   00000F3A   0xDBED             BLT.N    ??ProcessMsg_HUACE_124
   1159                      break;
   1160                  }
   1161                  
   1162                  wr_last = g_DeviceGPS.RdSp;
   \                     ??ProcessMsg_HUACE_126:
   \   00000F3C   0xF8DF 0x0E50      LDR.W    R0,??ProcessMsg_HUACE_125
   \   00000F40   0x8B40             LDRH     R0,[R0, #+26]
   \   00000F42   0x4681             MOV      R9,R0
   1163                  
   1164                  while( wr_last != g_DeviceGPS.WrSp)
   \                     ??ProcessMsg_HUACE_127:
   \   00000F44   0xF8DF 0x0E48      LDR.W    R0,??ProcessMsg_HUACE_125
   \   00000F48   0x8B00             LDRH     R0,[R0, #+24]
   \   00000F4A   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000F4E   0x4581             CMP      R9,R0
   \   00000F50   0xD01E             BEQ.N    ??ProcessMsg_HUACE_128
   1165                  {
   1166                    wr_last = g_DeviceGPS.WrSp;
   \   00000F52   0xF8DF 0x0E3C      LDR.W    R0,??ProcessMsg_HUACE_125
   \   00000F56   0x8B00             LDRH     R0,[R0, #+24]
   \   00000F58   0x4681             MOV      R9,R0
   1167                    OSTimeDlyHMSM(0,0,0,10);
   \   00000F5A   0x230A             MOVS     R3,#+10
   \   00000F5C   0x2200             MOVS     R2,#+0
   \   00000F5E   0x2100             MOVS     R1,#+0
   \   00000F60   0x2000             MOVS     R0,#+0
   \   00000F62   0x.... 0x....      BL       OSTimeDlyHMSM
   \   00000F66   0xE7ED             B.N      ??ProcessMsg_HUACE_127
   \                     ??ProcessMsg_HUACE_11:
   \   00000F68   0x........         DC32     `?<Constant "DSTIP">`
   \   00000F6C   0x........         DC32     `?<Constant "DSTIP need reboot\\r\\n">`
   \   00000F70   0x........         DC32     `?<Constant "%s\\r\\n">`
   \   00000F74   0x........         DC32     `?<Constant "TERMCONF">`
   \   00000F78   0x........         DC32     `?<Constant "admin TERMCONF\\r\\n">`
   \   00000F7C   0x........         DC32     g_RtuConfig+0x20
   \   00000F80   0x........         DC32     g_Byte128+0x69
   \   00000F84   0x........         DC32     g_RtuConfig
   \   00000F88   0x........         DC32     Telit_Connection_State
   \   00000F8C   0x........         DC32     g_RtuStatus
   1168                  }
   1169                  
   1170                  len = 0;
   \                     ??ProcessMsg_HUACE_128:
   \   00000F90   0x2000             MOVS     R0,#+0
   \   00000F92   0x0006             MOVS     R6,R0
   1171                  
   1172                  while( g_DeviceGPS.RdSp != g_DeviceGPS.WrSp)
   \                     ??ProcessMsg_HUACE_129:
   \   00000F94   0xF8DF 0x0DF8      LDR.W    R0,??ProcessMsg_HUACE_125
   \   00000F98   0x8B40             LDRH     R0,[R0, #+26]
   \   00000F9A   0xF8DF 0x1DF4      LDR.W    R1,??ProcessMsg_HUACE_125
   \   00000F9E   0x8B09             LDRH     R1,[R1, #+24]
   \   00000FA0   0x4288             CMP      R0,R1
   \   00000FA2   0xD022             BEQ.N    ??ProcessMsg_HUACE_130
   1173                  {
   1174                    rs485_buf[len++] = g_DeviceGPS.Buf[g_DeviceGPS.RdSp];
   \   00000FA4   0xF8DF 0x0DE8      LDR.W    R0,??ProcessMsg_HUACE_125
   \   00000FA8   0x8B40             LDRH     R0,[R0, #+26]
   \   00000FAA   0xF8DF 0x1DE4      LDR.W    R1,??ProcessMsg_HUACE_125
   \   00000FAE   0x6949             LDR      R1,[R1, #+20]
   \   00000FB0   0x5C40             LDRB     R0,[R0, R1]
   \   00000FB2   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000FB4   0xF8DF 0x1DDC      LDR.W    R1,??ProcessMsg_HUACE_125+0x4
   \   00000FB8   0x5470             STRB     R0,[R6, R1]
   \   00000FBA   0x1C76             ADDS     R6,R6,#+1
   1175                    
   1176                    INCREASE_POINTER(g_DeviceGPS.RdSp);
   \   00000FBC   0xF8DF 0x0DD0      LDR.W    R0,??ProcessMsg_HUACE_125
   \   00000FC0   0x8B40             LDRH     R0,[R0, #+26]
   \   00000FC2   0x1C40             ADDS     R0,R0,#+1
   \   00000FC4   0xF8DF 0x1DC8      LDR.W    R1,??ProcessMsg_HUACE_125
   \   00000FC8   0x8348             STRH     R0,[R1, #+26]
   \   00000FCA   0xF8DF 0x0DC4      LDR.W    R0,??ProcessMsg_HUACE_125
   \   00000FCE   0x8B40             LDRH     R0,[R0, #+26]
   \   00000FD0   0xF44F 0x6100      MOV      R1,#+2048
   \   00000FD4   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000FD8   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   00000FDC   0xF8DF 0x0DB0      LDR.W    R0,??ProcessMsg_HUACE_125
   \   00000FE0   0x8342             STRH     R2,[R0, #+26]
   1177                    
   1178                    if( len >= sizeof(rs485_buf))
   \   00000FE2   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000FE4   0xF5B6 0x7F82      CMP      R6,#+260
   \   00000FE8   0xD3D4             BCC.N    ??ProcessMsg_HUACE_129
   1179                    {
   1180                      break;
   1181                    }
   1182                  }
   1183                  
   1184                  g_DeviceGPS.RdSp = g_DeviceGPS.WrSp;
   \                     ??ProcessMsg_HUACE_130:
   \   00000FEA   0xF8DF 0x0DA4      LDR.W    R0,??ProcessMsg_HUACE_125
   \   00000FEE   0xF8DF 0x1DA0      LDR.W    R1,??ProcessMsg_HUACE_125
   \   00000FF2   0x8B09             LDRH     R1,[R1, #+24]
   \   00000FF4   0x8341             STRH     R1,[R0, #+26]
   1185                  
   1186                  rs485_data_process(rs485_buf,len,0);
   \   00000FF6   0x2200             MOVS     R2,#+0
   \   00000FF8   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000FFA   0x0031             MOVS     R1,R6
   \   00000FFC   0xF8DF 0x0D94      LDR.W    R0,??ProcessMsg_HUACE_125+0x4
   \   00001000   0x.... 0x....      BL       rs485_data_process
   1187                  
   1188                  sprintf((char *)msg_buf,"$0,%s,%04d%02d%02d,%02d%02d%02d,%d,,%s,*",\
   1189                    g_RtuConfig.rtuid,time.y,time.m,time.d, time.H,time.M,time.S,\
   1190                      rs485_para.type, rs485_para.data);
   \   00001004   0xF8DF 0x0C60      LDR.W    R0,??ProcessMsg_HUACE_114+0xC
   \   00001008   0x9006             STR      R0,[SP, #+24]
   \   0000100A   0xF8DF 0x05B4      LDR.W    R0,??ProcessMsg_HUACE_55+0x4
   \   0000100E   0x6800             LDR      R0,[R0, #+0]
   \   00001010   0x9005             STR      R0,[SP, #+20]
   \   00001012   0xF89D 0x004E      LDRB     R0,[SP, #+78]
   \   00001016   0x9004             STR      R0,[SP, #+16]
   \   00001018   0xF89D 0x004D      LDRB     R0,[SP, #+77]
   \   0000101C   0x9003             STR      R0,[SP, #+12]
   \   0000101E   0xF89D 0x004C      LDRB     R0,[SP, #+76]
   \   00001022   0x9002             STR      R0,[SP, #+8]
   \   00001024   0xF89D 0x004B      LDRB     R0,[SP, #+75]
   \   00001028   0x9001             STR      R0,[SP, #+4]
   \   0000102A   0xF89D 0x004A      LDRB     R0,[SP, #+74]
   \   0000102E   0x9000             STR      R0,[SP, #+0]
   \   00001030   0xF8BD 0x3048      LDRH     R3,[SP, #+72]
   \   00001034   0xF8DF 0x2D60      LDR.W    R2,??ProcessMsg_HUACE_125+0x8
   \   00001038   0xF8DF 0x1BE4      LDR.W    R1,??ProcessMsg_HUACE_111
   \   0000103C   0xA888             ADD      R0,SP,#+544
   \   0000103E   0x.... 0x....      BL       sprintf
   1191                  
   1192                  crc = 0;
   \   00001042   0x2000             MOVS     R0,#+0
   \   00001044   0x0007             MOVS     R7,R0
   1193                  for(i=0; i<strlen((char const *)msg_buf); i++)
   \   00001046   0x2000             MOVS     R0,#+0
   \   00001048   0x4680             MOV      R8,R0
   \                     ??ProcessMsg_HUACE_131:
   \   0000104A   0xA888             ADD      R0,SP,#+544
   \   0000104C   0x.... 0x....      BL       strlen
   \   00001050   0x4580             CMP      R8,R0
   \   00001052   0xD206             BCS.N    ??ProcessMsg_HUACE_132
   1194                    crc^=msg_buf[i];
   \   00001054   0xA888             ADD      R0,SP,#+544
   \   00001056   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   0000105A   0x4047             EORS     R7,R0,R7
   \   0000105C   0xF118 0x0801      ADDS     R8,R8,#+1
   \   00001060   0xE7F3             B.N      ??ProcessMsg_HUACE_131
   1195                  sprintf((char *)msg_buf, "%s%02X\r\n", msg_buf, crc);
   \                     ??ProcessMsg_HUACE_132:
   \   00001062   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00001064   0x003B             MOVS     R3,R7
   \   00001066   0xAA88             ADD      R2,SP,#+544
   \   00001068   0xF8DF 0x1BF0      LDR.W    R1,??ProcessMsg_HUACE_114
   \   0000106C   0xA888             ADD      R0,SP,#+544
   \   0000106E   0x.... 0x....      BL       sprintf
   1196                  
   1197                  g_RtuStatus.led_upload = 1;
   \   00001072   0xF8DF 0x0E88      LDR.W    R0,??ProcessMsg_HUACE_133
   \   00001076   0x2101             MOVS     R1,#+1
   \   00001078   0xF880 0x1036      STRB     R1,[R0, #+54]
   1198                  
   1199                  reply_cmd(msg_buf, strlen((char const *)msg_buf));
   \   0000107C   0xA888             ADD      R0,SP,#+544
   \   0000107E   0x.... 0x....      BL       strlen
   \   00001082   0x0001             MOVS     R1,R0
   \   00001084   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00001086   0xA888             ADD      R0,SP,#+544
   \   00001088   0x.... 0x....      BL       reply_cmd
   1200                }
   \   0000108C   0xF118 0x0801      ADDS     R8,R8,#+1
   \   00001090   0xE730             B.N      ??ProcessMsg_HUACE_122
   1201                return;
   \                     ??ProcessMsg_HUACE_123:
   \   00001092   0xF001 0xB9C4      B.W      ??ProcessMsg_HUACE_4
   1202              }
   1203              else if(strcmp(CmdPara,"RS232") == 0)
   \                     ??ProcessMsg_HUACE_120:
   \   00001096   0xF8DF 0x1544      LDR.W    R1,??ProcessMsg_HUACE_55+0x20
   \   0000109A   0xA814             ADD      R0,SP,#+80
   \   0000109C   0x.... 0x....      BL       strcmp
   \   000010A0   0x2800             CMP      R0,#+0
   \   000010A2   0xD127             BNE.N    ??ProcessMsg_HUACE_134
   1204              {
   1205                
   1206                if( type != rs232_para.type)
   \   000010A4   0xF89D 0x0045      LDRB     R0,[SP, #+69]
   \   000010A8   0xF8DF 0x1534      LDR.W    R1,??ProcessMsg_HUACE_55+0x24
   \   000010AC   0x6809             LDR      R1,[R1, #+0]
   \   000010AE   0x4288             CMP      R0,R1
   \   000010B0   0xF041 0x81B5      BNE.W    ??ProcessMsg_HUACE_4
   1207                  return;
   1208          
   1209                sprintf((char *)msg_buf,"$0,%s,%04d%02d%02d,%02d%02d%02d,%d,,%s,*",\
   1210                  g_RtuConfig.rtuid,time.y,time.m,time.d, time.H,time.M,time.S,\
   1211                    rs232_para.type, rs232_para.data);
   \                     ??ProcessMsg_HUACE_135:
   \   000010B4   0xF8DF 0x0E48      LDR.W    R0,??ProcessMsg_HUACE_133+0x4
   \   000010B8   0x9006             STR      R0,[SP, #+24]
   \   000010BA   0xF8DF 0x0524      LDR.W    R0,??ProcessMsg_HUACE_55+0x24
   \   000010BE   0x6800             LDR      R0,[R0, #+0]
   \   000010C0   0x9005             STR      R0,[SP, #+20]
   \   000010C2   0xF89D 0x004E      LDRB     R0,[SP, #+78]
   \   000010C6   0x9004             STR      R0,[SP, #+16]
   \   000010C8   0xF89D 0x004D      LDRB     R0,[SP, #+77]
   \   000010CC   0x9003             STR      R0,[SP, #+12]
   \   000010CE   0xF89D 0x004C      LDRB     R0,[SP, #+76]
   \   000010D2   0x9002             STR      R0,[SP, #+8]
   \   000010D4   0xF89D 0x004B      LDRB     R0,[SP, #+75]
   \   000010D8   0x9001             STR      R0,[SP, #+4]
   \   000010DA   0xF89D 0x004A      LDRB     R0,[SP, #+74]
   \   000010DE   0x9000             STR      R0,[SP, #+0]
   \   000010E0   0xF8BD 0x3048      LDRH     R3,[SP, #+72]
   \   000010E4   0xF8DF 0x2CB0      LDR.W    R2,??ProcessMsg_HUACE_125+0x8
   \   000010E8   0xF8DF 0x1B34      LDR.W    R1,??ProcessMsg_HUACE_111
   \   000010EC   0xA888             ADD      R0,SP,#+544
   \   000010EE   0x.... 0x....      BL       sprintf
   \   000010F2   0xE090             B.N      ??ProcessMsg_HUACE_136
   1212              }
   1213              else if(strcmp(CmdPara,"ADC1") == 0)
   \                     ??ProcessMsg_HUACE_134:
   \   000010F4   0xF8DF 0x14CC      LDR.W    R1,??ProcessMsg_HUACE_55+0x8
   \   000010F8   0xA814             ADD      R0,SP,#+80
   \   000010FA   0x.... 0x....      BL       strcmp
   \   000010FE   0x2800             CMP      R0,#+0
   \   00001100   0xD106             BNE.N    ??ProcessMsg_HUACE_137
   1214              {
   1215                
   1216                p_adc = &adc0_para;
   \   00001102   0xF8DF 0x04C4      LDR.W    R0,??ProcessMsg_HUACE_55+0xC
   \   00001106   0x0005             MOVS     R5,R0
   1217                
   1218                adc_ch = 0;
   \   00001108   0x2000             MOVS     R0,#+0
   \   0000110A   0xF88D 0x0044      STRB     R0,[SP, #+68]
   \   0000110E   0xE082             B.N      ??ProcessMsg_HUACE_136
   1219              }
   1220              else if( strcmp(CmdPara,"ADC2") == 0)
   \                     ??ProcessMsg_HUACE_137:
   \   00001110   0xF8DF 0x14B8      LDR.W    R1,??ProcessMsg_HUACE_55+0x10
   \   00001114   0xA814             ADD      R0,SP,#+80
   \   00001116   0x.... 0x....      BL       strcmp
   \   0000111A   0x2800             CMP      R0,#+0
   \   0000111C   0xD106             BNE.N    ??ProcessMsg_HUACE_138
   1221              {
   1222                p_adc = &adc1_para;
   \   0000111E   0xF8DF 0x04B0      LDR.W    R0,??ProcessMsg_HUACE_55+0x14
   \   00001122   0x0005             MOVS     R5,R0
   1223                adc_ch = 1;
   \   00001124   0x2001             MOVS     R0,#+1
   \   00001126   0xF88D 0x0044      STRB     R0,[SP, #+68]
   \   0000112A   0xE074             B.N      ??ProcessMsg_HUACE_136
   1224              }
   1225              else if(strcmp(CmdPara,"ADC3") == 0)
   \                     ??ProcessMsg_HUACE_138:
   \   0000112C   0xF8DF 0x14A4      LDR.W    R1,??ProcessMsg_HUACE_55+0x18
   \   00001130   0xA814             ADD      R0,SP,#+80
   \   00001132   0x.... 0x....      BL       strcmp
   \   00001136   0x2800             CMP      R0,#+0
   \   00001138   0xD106             BNE.N    ??ProcessMsg_HUACE_139
   1226              {
   1227                p_adc = &adc2_para;
   \   0000113A   0xF8DF 0x049C      LDR.W    R0,??ProcessMsg_HUACE_55+0x1C
   \   0000113E   0x0005             MOVS     R5,R0
   1228                adc_ch = 2;
   \   00001140   0x2002             MOVS     R0,#+2
   \   00001142   0xF88D 0x0044      STRB     R0,[SP, #+68]
   \   00001146   0xE066             B.N      ??ProcessMsg_HUACE_136
   1229              }
   1230              else if(strcmp(CmdPara,"IO-INPUT") == 0)
   \                     ??ProcessMsg_HUACE_139:
   \   00001148   0xF8DF 0x1498      LDR.W    R1,??ProcessMsg_HUACE_55+0x28
   \   0000114C   0xA814             ADD      R0,SP,#+80
   \   0000114E   0x.... 0x....      BL       strcmp
   \   00001152   0x2800             CMP      R0,#+0
   \   00001154   0xD125             BNE.N    ??ProcessMsg_HUACE_140
   1231              {
   1232                struct DATA_STRUCT dat;
   1233                
   1234                g_RtuStatus.led_dwload = 1;
   \   00001156   0xF8DF 0x0DA4      LDR.W    R0,??ProcessMsg_HUACE_133
   \   0000115A   0x2101             MOVS     R1,#+1
   \   0000115C   0xF880 0x1037      STRB     R1,[R0, #+55]
   1235                
   1236                rain_get_curr(&dat);
   \   00001160   0xA87B             ADD      R0,SP,#+492
   \   00001162   0x.... 0x....      BL       rain_get_curr
   1237                
   1238                sprintf((char*)msg_buf,"$0,%s,%04d%02d%02d,%02d%02d%02d,%d,,%s,*",\
   1239                  g_RtuConfig.rtuid,dat.y,dat.m,dat.d, dat.H,dat.M,dat.S,\
   1240                    dat.type,dat.data);
   \   00001166   0xA87D             ADD      R0,SP,#+500
   \   00001168   0x9006             STR      R0,[SP, #+24]
   \   0000116A   0xF89D 0x01F3      LDRB     R0,[SP, #+499]
   \   0000116E   0x9005             STR      R0,[SP, #+20]
   \   00001170   0xF89D 0x01F2      LDRB     R0,[SP, #+498]
   \   00001174   0x9004             STR      R0,[SP, #+16]
   \   00001176   0xF89D 0x01F1      LDRB     R0,[SP, #+497]
   \   0000117A   0x9003             STR      R0,[SP, #+12]
   \   0000117C   0xF89D 0x01F0      LDRB     R0,[SP, #+496]
   \   00001180   0x9002             STR      R0,[SP, #+8]
   \   00001182   0xF89D 0x01EF      LDRB     R0,[SP, #+495]
   \   00001186   0x9001             STR      R0,[SP, #+4]
   \   00001188   0xF89D 0x01EE      LDRB     R0,[SP, #+494]
   \   0000118C   0x9000             STR      R0,[SP, #+0]
   \   0000118E   0xF8BD 0x31EC      LDRH     R3,[SP, #+492]
   \   00001192   0xF8DF 0x2C04      LDR.W    R2,??ProcessMsg_HUACE_125+0x8
   \   00001196   0xF8DF 0x1A88      LDR.W    R1,??ProcessMsg_HUACE_111
   \   0000119A   0xA888             ADD      R0,SP,#+544
   \   0000119C   0x.... 0x....      BL       sprintf
   \   000011A0   0xE039             B.N      ??ProcessMsg_HUACE_136
   1241              }
   1242          	else if(strcmp((char *)CmdPara,"PWM") == 0)
   \                     ??ProcessMsg_HUACE_140:
   \   000011A2   0xA1D9             ADR.N    R1,??ProcessMsg_HUACE_52  ;; "PWM"
   \   000011A4   0xA814             ADD      R0,SP,#+80
   \   000011A6   0x.... 0x....      BL       strcmp
   \   000011AA   0x2800             CMP      R0,#+0
   \   000011AC   0xD131             BNE.N    ??ProcessMsg_HUACE_141
   1243          	{
   1244          		struct DATA_STRUCT dat;
   1245          		
   1246          		g_RtuStatus.led_dwload = 1;
   \   000011AE   0xF8DF 0x0D4C      LDR.W    R0,??ProcessMsg_HUACE_133
   \   000011B2   0x2101             MOVS     R1,#+1
   \   000011B4   0xF880 0x1037      STRB     R1,[R0, #+55]
   1247          		Stri_measure();
   \   000011B8   0x.... 0x....      BL       Stri_measure
   1248          		
   1249          		sprintf((char *)dat.data,"%s,%d",pwm_para.sname,pwm_para.freq_Value);
   \   000011BC   0xF8DF 0x042C      LDR.W    R0,??ProcessMsg_HUACE_55+0x30
   \   000011C0   0x68C3             LDR      R3,[R0, #+12]
   \   000011C2   0xF8DF 0x296C      LDR.W    R2,??ProcessMsg_HUACE_108
   \   000011C6   0xF8DF 0x1E64      LDR.W    R1,??ProcessMsg_HUACE_142
   \   000011CA   0xF50D 0x6095      ADD      R0,SP,#+1192
   \   000011CE   0x.... 0x....      BL       sprintf
   1250          		
   1251                	sprintf((char*)msg_buf,"$0,%s,%04d%02d%02d,%02d%02d%02d,%d,,%s,*",\
   1252                  g_RtuConfig.rtuid,time.y,time.m,time.d, time.H,time.M,time.S,\
   1253                    pwm_para.type,dat.data);		
   \   000011D2   0xF50D 0x6095      ADD      R0,SP,#+1192
   \   000011D6   0x9006             STR      R0,[SP, #+24]
   \   000011D8   0xF8DF 0x0410      LDR.W    R0,??ProcessMsg_HUACE_55+0x30
   \   000011DC   0x6800             LDR      R0,[R0, #+0]
   \   000011DE   0x9005             STR      R0,[SP, #+20]
   \   000011E0   0xF89D 0x004E      LDRB     R0,[SP, #+78]
   \   000011E4   0x9004             STR      R0,[SP, #+16]
   \   000011E6   0xF89D 0x004D      LDRB     R0,[SP, #+77]
   \   000011EA   0x9003             STR      R0,[SP, #+12]
   \   000011EC   0xF89D 0x004C      LDRB     R0,[SP, #+76]
   \   000011F0   0x9002             STR      R0,[SP, #+8]
   \   000011F2   0xF89D 0x004B      LDRB     R0,[SP, #+75]
   \   000011F6   0x9001             STR      R0,[SP, #+4]
   \   000011F8   0xF89D 0x004A      LDRB     R0,[SP, #+74]
   \   000011FC   0x9000             STR      R0,[SP, #+0]
   \   000011FE   0xF8BD 0x3048      LDRH     R3,[SP, #+72]
   \   00001202   0xF8DF 0x2B94      LDR.W    R2,??ProcessMsg_HUACE_125+0x8
   \   00001206   0xF8DF 0x1A18      LDR.W    R1,??ProcessMsg_HUACE_111
   \   0000120A   0xA888             ADD      R0,SP,#+544
   \   0000120C   0x.... 0x....      BL       sprintf
   \   00001210   0xE001             B.N      ??ProcessMsg_HUACE_136
   1254          	}
   1255              else
   1256              {
   1257                return;
   \                     ??ProcessMsg_HUACE_141:
   \   00001212   0xF001 0xB904      B.W      ??ProcessMsg_HUACE_4
   1258              }
   1259              
   1260              g_RtuStatus.led_upload = 1;
   \                     ??ProcessMsg_HUACE_136:
   \   00001216   0xF8DF 0x0CE4      LDR.W    R0,??ProcessMsg_HUACE_133
   \   0000121A   0x2101             MOVS     R1,#+1
   \   0000121C   0xF880 0x1036      STRB     R1,[R0, #+54]
   1261              
   1262              if( p_adc != 0)
   \   00001220   0x2D00             CMP      R5,#+0
   \   00001222   0xF000 0x81BB      BEQ.W    ??ProcessMsg_HUACE_143
   1263              {
   1264                 g_RtuStatus.led_dwload = 1;
   \   00001226   0xF8DF 0x0CD4      LDR.W    R0,??ProcessMsg_HUACE_133
   \   0000122A   0x2101             MOVS     R1,#+1
   \   0000122C   0xF880 0x1037      STRB     R1,[R0, #+55]
   1265                 
   1266                if( p_adc->type != type)
   \   00001230   0x6828             LDR      R0,[R5, #+0]
   \   00001232   0xF89D 0x1045      LDRB     R1,[SP, #+69]
   \   00001236   0x4288             CMP      R0,R1
   \   00001238   0xF041 0x80F1      BNE.W    ??ProcessMsg_HUACE_4
   1267                  return;
   1268                
   1269                if( p_adc ->stype == 1)
   \                     ??ProcessMsg_HUACE_144:
   \   0000123C   0x68A8             LDR      R0,[R5, #+8]
   \   0000123E   0x2801             CMP      R0,#+1
   \   00001240   0xD10C             BNE.N    ??ProcessMsg_HUACE_145
   1270                {//电压型
   1271                  adc_val = adc_get_voltage(adc_ch+1);
   \   00001242   0xF89D 0x0044      LDRB     R0,[SP, #+68]
   \   00001246   0x1C40             ADDS     R0,R0,#+1
   \   00001248   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000124A   0x.... 0x....      BL       adc_get_voltage
   \   0000124E   0x9021             STR      R0,[SP, #+132]
   \   00001250   0xE00E             B.N      ??ProcessMsg_HUACE_146
   \   00001252   0xBF00             Nop      
   \                     ??ProcessMsg_HUACE_35:
   \   00001254   0x........         DC32     `?<Constant "SLEEP">`
   \   00001258   0x........         DC32     `?<Constant "WAKE">`
   1272                }
   1273                else if(p_adc ->stype == 2)
   \                     ??ProcessMsg_HUACE_145:
   \   0000125C   0x68A8             LDR      R0,[R5, #+8]
   \   0000125E   0x2802             CMP      R0,#+2
   \   00001260   0xD106             BNE.N    ??ProcessMsg_HUACE_146
   1274                {//电流型
   1275                  adc_val = adc_get_current(adc_ch+1);
   \   00001262   0xF89D 0x0044      LDRB     R0,[SP, #+68]
   \   00001266   0x1C40             ADDS     R0,R0,#+1
   \   00001268   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000126A   0x.... 0x....      BL       adc_get_current
   \   0000126E   0x9021             STR      R0,[SP, #+132]
   1276                }
   1277                
   1278                if(p_adc->type == 5)
   \                     ??ProcessMsg_HUACE_146:
   \   00001270   0x6828             LDR      R0,[R5, #+0]
   \   00001272   0x2805             CMP      R0,#+5
   \   00001274   0xD178             BNE.N    ??ProcessMsg_HUACE_147
   1279                {//土壤水分计
   1280                  
   1281                  if( ((uint32_t)(adc_val *1000)) < 1)
   \   00001276   0x9921             LDR      R1,[SP, #+132]
   \   00001278   0xF8DF 0x0E90      LDR.W    R0,??ProcessMsg_HUACE_148  ;; 0x447a0000
   \   0000127C   0x.... 0x....      BL       __aeabi_fmul
   \   00001280   0x.... 0x....      BL       __aeabi_f2uiz
   \   00001284   0x2800             CMP      R0,#+0
   \   00001286   0xD122             BNE.N    ??ProcessMsg_HUACE_149
   1282                  {//加入0.001V/0.001mA下限限制
   1283                    sprintf((char *)msg_buf,"$0,%s,%04d%02d%02d,%02d%02d%02d,%d,,%s,%d,,%c,*",\
   1284                      g_RtuConfig.rtuid,time.y,time.m,time.d, time.H,time.M,time.S,\
   1285                        p_adc->type,p_adc->sname,adc_ch,p_adc->para0.c[0]);
   \   00001288   0x7B28             LDRB     R0,[R5, #+12]
   \   0000128A   0x9008             STR      R0,[SP, #+32]
   \   0000128C   0xF89D 0x0044      LDRB     R0,[SP, #+68]
   \   00001290   0x9007             STR      R0,[SP, #+28]
   \   00001292   0xF115 0x0020      ADDS     R0,R5,#+32
   \   00001296   0x9006             STR      R0,[SP, #+24]
   \   00001298   0x6828             LDR      R0,[R5, #+0]
   \   0000129A   0x9005             STR      R0,[SP, #+20]
   \   0000129C   0xF89D 0x004E      LDRB     R0,[SP, #+78]
   \   000012A0   0x9004             STR      R0,[SP, #+16]
   \   000012A2   0xF89D 0x004D      LDRB     R0,[SP, #+77]
   \   000012A6   0x9003             STR      R0,[SP, #+12]
   \   000012A8   0xF89D 0x004C      LDRB     R0,[SP, #+76]
   \   000012AC   0x9002             STR      R0,[SP, #+8]
   \   000012AE   0xF89D 0x004B      LDRB     R0,[SP, #+75]
   \   000012B2   0x9001             STR      R0,[SP, #+4]
   \   000012B4   0xF89D 0x004A      LDRB     R0,[SP, #+74]
   \   000012B8   0x9000             STR      R0,[SP, #+0]
   \   000012BA   0xF8BD 0x3048      LDRH     R3,[SP, #+72]
   \   000012BE   0xF8DF 0x2AD8      LDR.W    R2,??ProcessMsg_HUACE_125+0x8
   \   000012C2   0xF8DF 0x1E4C      LDR.W    R1,??ProcessMsg_HUACE_148+0x4
   \   000012C6   0xA888             ADD      R0,SP,#+544
   \   000012C8   0x.... 0x....      BL       sprintf
   \   000012CC   0xE166             B.N      ??ProcessMsg_HUACE_143
   1286                  }
   1287                  else
   1288                  {
   1289                    sprintf((char *)msg_buf,"$0,%s,%04d%02d%02d,%02d%02d%02d,%d,,%s,%d,%c%d.%03d,%c,*",\
   1290                      g_RtuConfig.rtuid,time.y,time.m,time.d, time.H,time.M,time.S,\
   1291                        p_adc->type,p_adc->sname,adc_ch,
   1292                        adc_val < 0 ?'-':' ',
   1293                        abs(adc_val),
   1294                        abs(adc_val*1000)%1000,
   1295                        p_adc->para0.c[0]);
   \                     ??ProcessMsg_HUACE_149:
   \   000012CE   0x9921             LDR      R1,[SP, #+132]
   \   000012D0   0xF8DF 0x0E38      LDR.W    R0,??ProcessMsg_HUACE_148  ;; 0x447a0000
   \   000012D4   0x.... 0x....      BL       __aeabi_fmul
   \   000012D8   0x.... 0x....      BL       __aeabi_f2iz
   \   000012DC   0x.... 0x....      BL       abs
   \   000012E0   0x4681             MOV      R9,R0
   \   000012E2   0xF44F 0x7A7A      MOV      R10,#+1000
   \   000012E6   0x9821             LDR      R0,[SP, #+132]
   \   000012E8   0x.... 0x....      BL       __aeabi_f2iz
   \   000012EC   0x.... 0x....      BL       abs
   \   000012F0   0x0002             MOVS     R2,R0
   \   000012F2   0x9821             LDR      R0,[SP, #+132]
   \   000012F4   0x2100             MOVS     R1,#+0
   \   000012F6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000012FA   0xD201             BCS.N    ??ProcessMsg_HUACE_150
   \   000012FC   0x202D             MOVS     R0,#+45
   \   000012FE   0xE000             B.N      ??ProcessMsg_HUACE_151
   \                     ??ProcessMsg_HUACE_150:
   \   00001300   0x2020             MOVS     R0,#+32
   \                     ??ProcessMsg_HUACE_151:
   \   00001302   0x7B29             LDRB     R1,[R5, #+12]
   \   00001304   0x910B             STR      R1,[SP, #+44]
   \   00001306   0xFB99 0xF1FA      SDIV     R1,R9,R10
   \   0000130A   0xFB0A 0x9111      MLS      R1,R10,R1,R9
   \   0000130E   0x910A             STR      R1,[SP, #+40]
   \   00001310   0x9209             STR      R2,[SP, #+36]
   \   00001312   0x9008             STR      R0,[SP, #+32]
   \   00001314   0xF89D 0x0044      LDRB     R0,[SP, #+68]
   \   00001318   0x9007             STR      R0,[SP, #+28]
   \   0000131A   0xF115 0x0020      ADDS     R0,R5,#+32
   \   0000131E   0x9006             STR      R0,[SP, #+24]
   \   00001320   0x6828             LDR      R0,[R5, #+0]
   \   00001322   0x9005             STR      R0,[SP, #+20]
   \   00001324   0xF89D 0x004E      LDRB     R0,[SP, #+78]
   \   00001328   0x9004             STR      R0,[SP, #+16]
   \   0000132A   0xF89D 0x004D      LDRB     R0,[SP, #+77]
   \   0000132E   0x9003             STR      R0,[SP, #+12]
   \   00001330   0xF89D 0x004C      LDRB     R0,[SP, #+76]
   \   00001334   0x9002             STR      R0,[SP, #+8]
   \   00001336   0xF89D 0x004B      LDRB     R0,[SP, #+75]
   \   0000133A   0x9001             STR      R0,[SP, #+4]
   \   0000133C   0xF89D 0x004A      LDRB     R0,[SP, #+74]
   \   00001340   0x9000             STR      R0,[SP, #+0]
   \   00001342   0xF8BD 0x3048      LDRH     R3,[SP, #+72]
   \   00001346   0xF8DF 0x2A50      LDR.W    R2,??ProcessMsg_HUACE_125+0x8
   \   0000134A   0xF8DF 0x1E6C      LDR.W    R1,??ProcessMsg_HUACE_152
   \   0000134E   0xA888             ADD      R0,SP,#+544
   \   00001350   0x.... 0x....      BL       sprintf
   \   00001354   0xE122             B.N      ??ProcessMsg_HUACE_143
   \   00001356   0xBF00             Nop      
   \                     ??ProcessMsg_HUACE_40:
   \   00001358   0x........         DC32     `?<Constant "RAINFRQ">`
   \   0000135C   0x........         DC32     `?<Constant "RAINFRQ \\r\\n">`
   \   00001360   0x........         DC32     rain_para
   \   00001364   0x........         DC32     `?<Constant "USRBAUD">`
   1296                  }
   1297                }
   1298                else
   1299                {
   1300                  if( ((uint32_t)(adc_val *1000)) < 1)
   \                     ??ProcessMsg_HUACE_147:
   \   00001368   0x9921             LDR      R1,[SP, #+132]
   \   0000136A   0xF8DF 0x0DA0      LDR.W    R0,??ProcessMsg_HUACE_148  ;; 0x447a0000
   \   0000136E   0x.... 0x....      BL       __aeabi_fmul
   \   00001372   0x.... 0x....      BL       __aeabi_f2uiz
   \   00001376   0x2800             CMP      R0,#+0
   \   00001378   0xD172             BNE.N    ??ProcessMsg_HUACE_153
   1301                  {//加入0.001V/0.001mA下限限制
   1302                      sprintf((char *)msg_buf,"$0,%s,%04d%02d%02d,%02d%02d%02d,%d,,%s,%d,,%c%d.%03d,%c%d.%03d,*",\
   1303                      g_RtuConfig.rtuid,time.y,time.m,time.d, time.H,time.M,time.S,\
   1304                        p_adc->type,p_adc->sname,adc_ch,
   1305                        p_adc->para0.f < 0 ?'-':' ',
   1306                        abs(p_adc->para0.f),
   1307                        abs(p_adc->para0.f*1000)%1000,
   1308                        p_adc->para1 < 0 ?'-':' ',
   1309                          abs(p_adc->para1),
   1310                          abs(p_adc->para1 * 1000)%1000);
   \   0000137A   0x6929             LDR      R1,[R5, #+16]
   \   0000137C   0xF8DF 0x0D8C      LDR.W    R0,??ProcessMsg_HUACE_148  ;; 0x447a0000
   \   00001380   0x.... 0x....      BL       __aeabi_fmul
   \   00001384   0x.... 0x....      BL       __aeabi_f2iz
   \   00001388   0x.... 0x....      BL       abs
   \   0000138C   0x4681             MOV      R9,R0
   \   0000138E   0xF44F 0x707A      MOV      R0,#+1000
   \   00001392   0x9010             STR      R0,[SP, #+64]
   \   00001394   0x6928             LDR      R0,[R5, #+16]
   \   00001396   0x.... 0x....      BL       __aeabi_f2iz
   \   0000139A   0x.... 0x....      BL       abs
   \   0000139E   0x4682             MOV      R10,R0
   \   000013A0   0x6928             LDR      R0,[R5, #+16]
   \   000013A2   0x2100             MOVS     R1,#+0
   \   000013A4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000013A8   0xD202             BCS.N    ??ProcessMsg_HUACE_154
   \   000013AA   0x202D             MOVS     R0,#+45
   \   000013AC   0x900F             STR      R0,[SP, #+60]
   \   000013AE   0xE001             B.N      ??ProcessMsg_HUACE_155
   \                     ??ProcessMsg_HUACE_154:
   \   000013B0   0x2020             MOVS     R0,#+32
   \   000013B2   0x900F             STR      R0,[SP, #+60]
   \                     ??ProcessMsg_HUACE_155:
   \   000013B4   0x68E9             LDR      R1,[R5, #+12]
   \   000013B6   0xF8DF 0x0D54      LDR.W    R0,??ProcessMsg_HUACE_148  ;; 0x447a0000
   \   000013BA   0x.... 0x....      BL       __aeabi_fmul
   \   000013BE   0x.... 0x....      BL       __aeabi_f2iz
   \   000013C2   0x.... 0x....      BL       abs
   \   000013C6   0x4683             MOV      R11,R0
   \   000013C8   0xF44F 0x707A      MOV      R0,#+1000
   \   000013CC   0x900E             STR      R0,[SP, #+56]
   \   000013CE   0x68E8             LDR      R0,[R5, #+12]
   \   000013D0   0x.... 0x....      BL       __aeabi_f2iz
   \   000013D4   0x.... 0x....      BL       abs
   \   000013D8   0x0002             MOVS     R2,R0
   \   000013DA   0x68E8             LDR      R0,[R5, #+12]
   \   000013DC   0x2100             MOVS     R1,#+0
   \   000013DE   0x.... 0x....      BL       __aeabi_cfcmple
   \   000013E2   0xD201             BCS.N    ??ProcessMsg_HUACE_156
   \   000013E4   0x202D             MOVS     R0,#+45
   \   000013E6   0xE000             B.N      ??ProcessMsg_HUACE_157
   \                     ??ProcessMsg_HUACE_156:
   \   000013E8   0x2020             MOVS     R0,#+32
   \                     ??ProcessMsg_HUACE_157:
   \   000013EA   0x9910             LDR      R1,[SP, #+64]
   \   000013EC   0xFB99 0xF1F1      SDIV     R1,R9,R1
   \   000013F0   0x9B10             LDR      R3,[SP, #+64]
   \   000013F2   0xFB03 0x9111      MLS      R1,R3,R1,R9
   \   000013F6   0x910D             STR      R1,[SP, #+52]
   \   000013F8   0xF8CD 0xA030      STR      R10,[SP, #+48]
   \   000013FC   0x990F             LDR      R1,[SP, #+60]
   \   000013FE   0x910B             STR      R1,[SP, #+44]
   \   00001400   0x990E             LDR      R1,[SP, #+56]
   \   00001402   0xFB9B 0xF1F1      SDIV     R1,R11,R1
   \   00001406   0x9B0E             LDR      R3,[SP, #+56]
   \   00001408   0xFB03 0xB111      MLS      R1,R3,R1,R11
   \   0000140C   0x910A             STR      R1,[SP, #+40]
   \   0000140E   0x9209             STR      R2,[SP, #+36]
   \   00001410   0x9008             STR      R0,[SP, #+32]
   \   00001412   0xF89D 0x0044      LDRB     R0,[SP, #+68]
   \   00001416   0x9007             STR      R0,[SP, #+28]
   \   00001418   0xF115 0x0020      ADDS     R0,R5,#+32
   \   0000141C   0x9006             STR      R0,[SP, #+24]
   \   0000141E   0x6828             LDR      R0,[R5, #+0]
   \   00001420   0x9005             STR      R0,[SP, #+20]
   \   00001422   0xF89D 0x004E      LDRB     R0,[SP, #+78]
   \   00001426   0x9004             STR      R0,[SP, #+16]
   \   00001428   0xF89D 0x004D      LDRB     R0,[SP, #+77]
   \   0000142C   0x9003             STR      R0,[SP, #+12]
   \   0000142E   0xF89D 0x004C      LDRB     R0,[SP, #+76]
   \   00001432   0x9002             STR      R0,[SP, #+8]
   \   00001434   0xF89D 0x004B      LDRB     R0,[SP, #+75]
   \   00001438   0x9001             STR      R0,[SP, #+4]
   \   0000143A   0xF89D 0x004A      LDRB     R0,[SP, #+74]
   \   0000143E   0x9000             STR      R0,[SP, #+0]
   \   00001440   0xF8BD 0x3048      LDRH     R3,[SP, #+72]
   \   00001444   0xF8DF 0x2950      LDR.W    R2,??ProcessMsg_HUACE_125+0x8
   \   00001448   0xF8DF 0x1E10      LDR.W    R1,??ProcessMsg_HUACE_158
   \   0000144C   0xA888             ADD      R0,SP,#+544
   \   0000144E   0x.... 0x....      BL       sprintf
   \   00001452   0xE0A3             B.N      ??ProcessMsg_HUACE_143
   \                     ??ProcessMsg_HUACE_43:
   \   00001454   0x........         DC32     `?<Constant "USRBAUD \\r\\n">`
   \   00001458   0x........         DC32     `?<Constant "PWMOD">`
   \   0000145C   0x........         DC32     `?<Constant "PWMOD \\r\\n">`
   1311                  }
   1312                  else
   1313                  {
   1314                    sprintf((char *)msg_buf,"$0,%s,%04d%02d%02d,%02d%02d%02d,%d,,%s,%d,%c%d.%03d,%c%d.%03d,%c%d.%03d,*",\
   1315                      g_RtuConfig.rtuid,time.y,time.m,time.d, time.H,time.M,time.S,\
   1316                        p_adc->type,p_adc->sname,adc_ch,
   1317                        adc_val < 0 ?'-':' ',
   1318                        abs(adc_val),
   1319                        abs(adc_val*1000)%1000,
   1320                        p_adc->para0.f < 0 ?'-':' ',
   1321                        abs(p_adc->para0.f),
   1322                        abs(p_adc->para0.f*1000)%1000,
   1323                        p_adc->para1 < 0 ?'-':' ',
   1324                        abs(p_adc->para1),
   1325                        abs(p_adc->para1*1000)%1000);
   \                     ??ProcessMsg_HUACE_153:
   \   00001460   0x6929             LDR      R1,[R5, #+16]
   \   00001462   0xF8DF 0x0CA8      LDR.W    R0,??ProcessMsg_HUACE_148  ;; 0x447a0000
   \   00001466   0x.... 0x....      BL       __aeabi_fmul
   \   0000146A   0x.... 0x....      BL       __aeabi_f2iz
   \   0000146E   0x.... 0x....      BL       abs
   \   00001472   0x4681             MOV      R9,R0
   \   00001474   0xF44F 0x707A      MOV      R0,#+1000
   \   00001478   0x902D             STR      R0,[SP, #+180]
   \   0000147A   0x6928             LDR      R0,[R5, #+16]
   \   0000147C   0x.... 0x....      BL       __aeabi_f2iz
   \   00001480   0x.... 0x....      BL       abs
   \   00001484   0x902F             STR      R0,[SP, #+188]
   \   00001486   0x6928             LDR      R0,[R5, #+16]
   \   00001488   0x2100             MOVS     R1,#+0
   \   0000148A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000148E   0xD202             BCS.N    ??ProcessMsg_HUACE_159
   \   00001490   0x202D             MOVS     R0,#+45
   \   00001492   0x902C             STR      R0,[SP, #+176]
   \   00001494   0xE001             B.N      ??ProcessMsg_HUACE_160
   \                     ??ProcessMsg_HUACE_159:
   \   00001496   0x2020             MOVS     R0,#+32
   \   00001498   0x902C             STR      R0,[SP, #+176]
   \                     ??ProcessMsg_HUACE_160:
   \   0000149A   0x68E9             LDR      R1,[R5, #+12]
   \   0000149C   0xF8DF 0x0C6C      LDR.W    R0,??ProcessMsg_HUACE_148  ;; 0x447a0000
   \   000014A0   0x.... 0x....      BL       __aeabi_fmul
   \   000014A4   0x.... 0x....      BL       __aeabi_f2iz
   \   000014A8   0x.... 0x....      BL       abs
   \   000014AC   0x4682             MOV      R10,R0
   \   000014AE   0xF44F 0x707A      MOV      R0,#+1000
   \   000014B2   0x902B             STR      R0,[SP, #+172]
   \   000014B4   0x68E8             LDR      R0,[R5, #+12]
   \   000014B6   0x.... 0x....      BL       __aeabi_f2iz
   \   000014BA   0x.... 0x....      BL       abs
   \   000014BE   0x902E             STR      R0,[SP, #+184]
   \   000014C0   0x68E8             LDR      R0,[R5, #+12]
   \   000014C2   0x2100             MOVS     R1,#+0
   \   000014C4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000014C8   0xD202             BCS.N    ??ProcessMsg_HUACE_161
   \   000014CA   0x202D             MOVS     R0,#+45
   \   000014CC   0x9028             STR      R0,[SP, #+160]
   \   000014CE   0xE001             B.N      ??ProcessMsg_HUACE_162
   \                     ??ProcessMsg_HUACE_161:
   \   000014D0   0x2020             MOVS     R0,#+32
   \   000014D2   0x9028             STR      R0,[SP, #+160]
   \                     ??ProcessMsg_HUACE_162:
   \   000014D4   0x9921             LDR      R1,[SP, #+132]
   \   000014D6   0xF8DF 0x0C34      LDR.W    R0,??ProcessMsg_HUACE_148  ;; 0x447a0000
   \   000014DA   0x.... 0x....      BL       __aeabi_fmul
   \   000014DE   0x.... 0x....      BL       __aeabi_f2iz
   \   000014E2   0x.... 0x....      BL       abs
   \   000014E6   0x4683             MOV      R11,R0
   \   000014E8   0xF44F 0x707A      MOV      R0,#+1000
   \   000014EC   0x9027             STR      R0,[SP, #+156]
   \   000014EE   0x9821             LDR      R0,[SP, #+132]
   \   000014F0   0x.... 0x....      BL       __aeabi_f2iz
   \   000014F4   0x.... 0x....      BL       abs
   \   000014F8   0x0002             MOVS     R2,R0
   \   000014FA   0x9821             LDR      R0,[SP, #+132]
   \   000014FC   0x2100             MOVS     R1,#+0
   \   000014FE   0x.... 0x....      BL       __aeabi_cfcmple
   \   00001502   0xD20B             BCS.N    ??ProcessMsg_HUACE_163
   \   00001504   0x202D             MOVS     R0,#+45
   \   00001506   0xE00A             B.N      ??ProcessMsg_HUACE_164
   \                     ??ProcessMsg_HUACE_52:
   \   00001508   0x50 0x57          DC8      "PWM"
   \              0x4D 0x00    
   \   0000150C   0x........         DC32     `?<Constant "RAINRESOL">`
   \   00001510   0x........         DC32     `?<Constant "RAINRESOL \\r\\n">`
   \   00001514   0x40240000         DC32     0x40240000
   \   00001518   0x........         DC32     `?<Constant "PORTCFG">`
   \                     ??ProcessMsg_HUACE_163:
   \   0000151C   0x2020             MOVS     R0,#+32
   \                     ??ProcessMsg_HUACE_164:
   \   0000151E   0x992D             LDR      R1,[SP, #+180]
   \   00001520   0xFB99 0xF1F1      SDIV     R1,R9,R1
   \   00001524   0x9B2D             LDR      R3,[SP, #+180]
   \   00001526   0xFB03 0x9111      MLS      R1,R3,R1,R9
   \   0000152A   0x9110             STR      R1,[SP, #+64]
   \   0000152C   0x992F             LDR      R1,[SP, #+188]
   \   0000152E   0x910F             STR      R1,[SP, #+60]
   \   00001530   0x992C             LDR      R1,[SP, #+176]
   \   00001532   0x910E             STR      R1,[SP, #+56]
   \   00001534   0x992B             LDR      R1,[SP, #+172]
   \   00001536   0xFB9A 0xF1F1      SDIV     R1,R10,R1
   \   0000153A   0x9B2B             LDR      R3,[SP, #+172]
   \   0000153C   0xFB03 0xA111      MLS      R1,R3,R1,R10
   \   00001540   0x910D             STR      R1,[SP, #+52]
   \   00001542   0x992E             LDR      R1,[SP, #+184]
   \   00001544   0x910C             STR      R1,[SP, #+48]
   \   00001546   0x9928             LDR      R1,[SP, #+160]
   \   00001548   0x910B             STR      R1,[SP, #+44]
   \   0000154A   0x9927             LDR      R1,[SP, #+156]
   \   0000154C   0xFB9B 0xF1F1      SDIV     R1,R11,R1
   \   00001550   0x9B27             LDR      R3,[SP, #+156]
   \   00001552   0xFB03 0xB111      MLS      R1,R3,R1,R11
   \   00001556   0x910A             STR      R1,[SP, #+40]
   \   00001558   0x9209             STR      R2,[SP, #+36]
   \   0000155A   0x9008             STR      R0,[SP, #+32]
   \   0000155C   0xF89D 0x0044      LDRB     R0,[SP, #+68]
   \   00001560   0x9007             STR      R0,[SP, #+28]
   \   00001562   0xF115 0x0020      ADDS     R0,R5,#+32
   \   00001566   0x9006             STR      R0,[SP, #+24]
   \   00001568   0x6828             LDR      R0,[R5, #+0]
   \   0000156A   0x9005             STR      R0,[SP, #+20]
   \   0000156C   0xF89D 0x004E      LDRB     R0,[SP, #+78]
   \   00001570   0x9004             STR      R0,[SP, #+16]
   \   00001572   0xF89D 0x004D      LDRB     R0,[SP, #+77]
   \   00001576   0x9003             STR      R0,[SP, #+12]
   \   00001578   0xF89D 0x004C      LDRB     R0,[SP, #+76]
   \   0000157C   0x9002             STR      R0,[SP, #+8]
   \   0000157E   0xF89D 0x004B      LDRB     R0,[SP, #+75]
   \   00001582   0x9001             STR      R0,[SP, #+4]
   \   00001584   0xF89D 0x004A      LDRB     R0,[SP, #+74]
   \   00001588   0x9000             STR      R0,[SP, #+0]
   \   0000158A   0xF8BD 0x3048      LDRH     R3,[SP, #+72]
   \   0000158E   0xF8DF 0x2808      LDR.W    R2,??ProcessMsg_HUACE_125+0x8
   \   00001592   0xF8DF 0x1CCC      LDR.W    R1,??ProcessMsg_HUACE_158+0x4
   \   00001596   0xA888             ADD      R0,SP,#+544
   \   00001598   0x.... 0x....      BL       sprintf
   1326                  } 
   1327                }
   1328                
   1329              }
   1330              
   1331              crc = 0;
   \                     ??ProcessMsg_HUACE_143:
   \   0000159C   0x2000             MOVS     R0,#+0
   \   0000159E   0x0007             MOVS     R7,R0
   1332              for(i=0; i<strlen((char const *)msg_buf); i++)
   \   000015A0   0x2000             MOVS     R0,#+0
   \   000015A2   0x4680             MOV      R8,R0
   \                     ??ProcessMsg_HUACE_165:
   \   000015A4   0xA888             ADD      R0,SP,#+544
   \   000015A6   0x.... 0x....      BL       strlen
   \   000015AA   0x4580             CMP      R8,R0
   \   000015AC   0xD220             BCS.N    ??ProcessMsg_HUACE_166
   1333                crc^=msg_buf[i];
   \   000015AE   0xA888             ADD      R0,SP,#+544
   \   000015B0   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   000015B4   0x4047             EORS     R7,R0,R7
   \   000015B6   0xF118 0x0801      ADDS     R8,R8,#+1
   \   000015BA   0xE7F3             B.N      ??ProcessMsg_HUACE_165
   \                     ??ProcessMsg_HUACE_55:
   \   000015BC   0x........         DC32     `?<Constant "RS485">`
   \   000015C0   0x........         DC32     rs485_para
   \   000015C4   0x........         DC32     `?<Constant "ADC1">`
   \   000015C8   0x........         DC32     adc0_para
   \   000015CC   0x........         DC32     `?<Constant "ADC2">`
   \   000015D0   0x........         DC32     adc1_para
   \   000015D4   0x........         DC32     `?<Constant "ADC3">`
   \   000015D8   0x........         DC32     adc2_para
   \   000015DC   0x........         DC32     `?<Constant "RS232">`
   \   000015E0   0x........         DC32     rs232_para
   \   000015E4   0x........         DC32     `?<Constant "IO-INPUT">`
   \   000015E8   0x........         DC32     `?<Constant "RS232-BDS">`
   \   000015EC   0x........         DC32     pwm_para
   1334              sprintf((char *)msg_buf, "%s%02X\r\n", msg_buf, crc);
   \                     ??ProcessMsg_HUACE_166:
   \   000015F0   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000015F2   0x003B             MOVS     R3,R7
   \   000015F4   0xAA88             ADD      R2,SP,#+544
   \   000015F6   0xF8DF 0x1664      LDR.W    R1,??ProcessMsg_HUACE_114
   \   000015FA   0xA888             ADD      R0,SP,#+544
   \   000015FC   0x.... 0x....      BL       sprintf
   1335              
   1336              reply_cmd(msg_buf, strlen((char const *)msg_buf));
   \   00001600   0xA888             ADD      R0,SP,#+544
   \   00001602   0x.... 0x....      BL       strlen
   \   00001606   0x0001             MOVS     R1,R0
   \   00001608   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000160A   0xA888             ADD      R0,SP,#+544
   \   0000160C   0x.... 0x....      BL       reply_cmd
   1337              
   1338              return;
   \   00001610   0xF000 0xBF05      B.W      ??ProcessMsg_HUACE_4
   1339            }
   1340            else if(strcmp((const char *)CmdId,"REQSTAT") == 0)
   \                     ??ProcessMsg_HUACE_119:
   \   00001614   0xF8DF 0x1DD4      LDR.W    R1,??ProcessMsg_HUACE_167
   \   00001618   0xA822             ADD      R0,SP,#+136
   \   0000161A   0x.... 0x....      BL       strcmp
   \   0000161E   0x2800             CMP      R0,#+0
   \   00001620   0xF040 0x810E      BNE.W    ??ProcessMsg_HUACE_168
   1341            {
   1342              unsigned char buf[100];
   1343              unsigned char st_gprs[10];
   1344              unsigned char st_bd[10];
   1345              unsigned char st_rain[10];
   1346              unsigned char st_dist[10];
   1347          	unsigned char st_stri[10];
   1348          	
   1349              unsigned char rs485_str[6];
   1350              float temp_now;
   1351              float power_voltage;
   1352              
   1353              
   1354              DbgMsg("REQSTAT \r\n");
   \   00001624   0xF8DF 0x0DC8      LDR.W    R0,??ProcessMsg_HUACE_167+0x4
   \   00001628   0x.... 0x....      BL       DbgMsg
   1355              
   1356              if(g_RtuStatus.gprs == 1)
   \   0000162C   0xF8DF 0x08CC      LDR.W    R0,??ProcessMsg_HUACE_133
   \   00001630   0x7A00             LDRB     R0,[R0, #+8]
   \   00001632   0x2801             CMP      R0,#+1
   \   00001634   0xD104             BNE.N    ??ProcessMsg_HUACE_169
   1357                sprintf((char *)st_gprs,"OK");
   \   00001636   0xA180             ADR.N    R1,??ProcessMsg_HUACE_100+0x4  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00001638   0xA859             ADD      R0,SP,#+356
   \   0000163A   0x.... 0x....      BL       sprintf
   \   0000163E   0xE003             B.N      ??ProcessMsg_HUACE_170
   1358              else
   1359                sprintf((char *)st_gprs,"ERR");
   \                     ??ProcessMsg_HUACE_169:
   \   00001640   0xA17E             ADR.N    R1,??ProcessMsg_HUACE_100+0x8  ;; "ERR"
   \   00001642   0xA859             ADD      R0,SP,#+356
   \   00001644   0x.... 0x....      BL       sprintf
   1360              if(g_RtuStatus.bd == 1)
   \                     ??ProcessMsg_HUACE_170:
   \   00001648   0xF8DF 0x08B0      LDR.W    R0,??ProcessMsg_HUACE_133
   \   0000164C   0x7A40             LDRB     R0,[R0, #+9]
   \   0000164E   0x2801             CMP      R0,#+1
   \   00001650   0xD104             BNE.N    ??ProcessMsg_HUACE_171
   1361                sprintf((char *)st_bd,"OK");
   \   00001652   0xA179             ADR.N    R1,??ProcessMsg_HUACE_100+0x4  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00001654   0xA856             ADD      R0,SP,#+344
   \   00001656   0x.... 0x....      BL       sprintf
   \   0000165A   0xE003             B.N      ??ProcessMsg_HUACE_172
   1362              else
   1363                sprintf((char *)st_bd,"ERR");
   \                     ??ProcessMsg_HUACE_171:
   \   0000165C   0xA177             ADR.N    R1,??ProcessMsg_HUACE_100+0x8  ;; "ERR"
   \   0000165E   0xA856             ADD      R0,SP,#+344
   \   00001660   0x.... 0x....      BL       sprintf
   1364              if(g_RtuStatus.rain == 1)
   \                     ??ProcessMsg_HUACE_172:
   \   00001664   0xF8DF 0x0894      LDR.W    R0,??ProcessMsg_HUACE_133
   \   00001668   0x7A80             LDRB     R0,[R0, #+10]
   \   0000166A   0x2801             CMP      R0,#+1
   \   0000166C   0xD104             BNE.N    ??ProcessMsg_HUACE_173
   1365                sprintf((char *)st_rain,"OK");
   \   0000166E   0xA172             ADR.N    R1,??ProcessMsg_HUACE_100+0x4  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00001670   0xA853             ADD      R0,SP,#+332
   \   00001672   0x.... 0x....      BL       sprintf
   \   00001676   0xE003             B.N      ??ProcessMsg_HUACE_174
   1366              else
   1367                sprintf((char *)st_rain,"ERR");
   \                     ??ProcessMsg_HUACE_173:
   \   00001678   0xA170             ADR.N    R1,??ProcessMsg_HUACE_100+0x8  ;; "ERR"
   \   0000167A   0xA853             ADD      R0,SP,#+332
   \   0000167C   0x.... 0x....      BL       sprintf
   1368              if(g_RtuStatus.dist == 1)
   \                     ??ProcessMsg_HUACE_174:
   \   00001680   0xF8DF 0x0878      LDR.W    R0,??ProcessMsg_HUACE_133
   \   00001684   0x7AC0             LDRB     R0,[R0, #+11]
   \   00001686   0x2801             CMP      R0,#+1
   \   00001688   0xD104             BNE.N    ??ProcessMsg_HUACE_175
   1369                sprintf((char *)st_dist,"OK");
   \   0000168A   0xA16B             ADR.N    R1,??ProcessMsg_HUACE_100+0x4  ;; 0x4F, 0x4B, 0x00, 0x00
   \   0000168C   0xA850             ADD      R0,SP,#+320
   \   0000168E   0x.... 0x....      BL       sprintf
   \   00001692   0xE003             B.N      ??ProcessMsg_HUACE_176
   1370              else
   1371                sprintf((char *)st_dist,"ERR");
   \                     ??ProcessMsg_HUACE_175:
   \   00001694   0xA169             ADR.N    R1,??ProcessMsg_HUACE_100+0x8  ;; "ERR"
   \   00001696   0xA850             ADD      R0,SP,#+320
   \   00001698   0x.... 0x....      BL       sprintf
   1372              if(g_RtuStatus.stri == 1)
   \                     ??ProcessMsg_HUACE_176:
   \   0000169C   0xF8DF 0x085C      LDR.W    R0,??ProcessMsg_HUACE_133
   \   000016A0   0x7B00             LDRB     R0,[R0, #+12]
   \   000016A2   0x2801             CMP      R0,#+1
   \   000016A4   0xD104             BNE.N    ??ProcessMsg_HUACE_177
   1373                sprintf((char *)st_stri,"OK");
   \   000016A6   0xA164             ADR.N    R1,??ProcessMsg_HUACE_100+0x4  ;; 0x4F, 0x4B, 0x00, 0x00
   \   000016A8   0xA84D             ADD      R0,SP,#+308
   \   000016AA   0x.... 0x....      BL       sprintf
   \   000016AE   0xE003             B.N      ??ProcessMsg_HUACE_178
   1374              else
   1375                sprintf((char *)st_stri,"ERR");	
   \                     ??ProcessMsg_HUACE_177:
   \   000016B0   0xA162             ADR.N    R1,??ProcessMsg_HUACE_100+0x8  ;; "ERR"
   \   000016B2   0xA84D             ADD      R0,SP,#+308
   \   000016B4   0x.... 0x....      BL       sprintf
   1376              
   1377              if (rs485_para.type == 0)
   \                     ??ProcessMsg_HUACE_178:
   \   000016B8   0xF8DF 0x0D6C      LDR.W    R0,??ProcessMsg_HUACE_179
   \   000016BC   0x6800             LDR      R0,[R0, #+0]
   \   000016BE   0x2800             CMP      R0,#+0
   \   000016C0   0xD108             BNE.N    ??ProcessMsg_HUACE_180
   1378              {
   1379                sprintf((char *)rs485_str,"NULL");
   \   000016C2   0xF8DF 0x1D68      LDR.W    R1,??ProcessMsg_HUACE_179+0x4
   \   000016C6   0xA80B             ADD      R0,SP,#+44
   \   000016C8   0x.... 0x....      BL       sprintf
   \   000016CC   0xE049             B.N      ??ProcessMsg_HUACE_181
   \   000016CE   0xBF00             Nop      
   \                     ??ProcessMsg_HUACE_72:
   \   000016D0   0x........         DC32     sensor_type_table
   1380              }
   1381              else if (rs485_para.type == 1)
   \                     ??ProcessMsg_HUACE_180:
   \   000016D4   0xF8DF 0x0D50      LDR.W    R0,??ProcessMsg_HUACE_179
   \   000016D8   0x6800             LDR      R0,[R0, #+0]
   \   000016DA   0x2801             CMP      R0,#+1
   \   000016DC   0xD105             BNE.N    ??ProcessMsg_HUACE_182
   1382              {
   1383                sprintf((char *)rs485_str,"DIST");
   \   000016DE   0xF8DF 0x1D50      LDR.W    R1,??ProcessMsg_HUACE_179+0x8
   \   000016E2   0xA80B             ADD      R0,SP,#+44
   \   000016E4   0x.... 0x....      BL       sprintf
   \   000016E8   0xE03B             B.N      ??ProcessMsg_HUACE_181
   1384              }
   1385              else if (rs485_para.type == 2)
   \                     ??ProcessMsg_HUACE_182:
   \   000016EA   0xF8DF 0x0D3C      LDR.W    R0,??ProcessMsg_HUACE_179
   \   000016EE   0x6800             LDR      R0,[R0, #+0]
   \   000016F0   0x2802             CMP      R0,#+2
   \   000016F2   0xD105             BNE.N    ??ProcessMsg_HUACE_183
   1386              {
   1387                sprintf((char *)rs485_str,"TILT");
   \   000016F4   0xF8DF 0x1D40      LDR.W    R1,??ProcessMsg_HUACE_179+0x10
   \   000016F8   0xA80B             ADD      R0,SP,#+44
   \   000016FA   0x.... 0x....      BL       sprintf
   \   000016FE   0xE030             B.N      ??ProcessMsg_HUACE_181
   1388              }
   1389              else if (rs485_para.type == 3)
   \                     ??ProcessMsg_HUACE_183:
   \   00001700   0xF8DF 0x0D24      LDR.W    R0,??ProcessMsg_HUACE_179
   \   00001704   0x6800             LDR      R0,[R0, #+0]
   \   00001706   0x2803             CMP      R0,#+3
   \   00001708   0xD105             BNE.N    ??ProcessMsg_HUACE_184
   1390              {
   1391                sprintf((char *)rs485_str,"FLUX");
   \   0000170A   0xF8DF 0x1D30      LDR.W    R1,??ProcessMsg_HUACE_179+0x14
   \   0000170E   0xA80B             ADD      R0,SP,#+44
   \   00001710   0x.... 0x....      BL       sprintf
   \   00001714   0xE025             B.N      ??ProcessMsg_HUACE_181
   1392              }
   1393              else if (rs485_para.type == 4)
   \                     ??ProcessMsg_HUACE_184:
   \   00001716   0xF8DF 0x0D10      LDR.W    R0,??ProcessMsg_HUACE_179
   \   0000171A   0x6800             LDR      R0,[R0, #+0]
   \   0000171C   0x2804             CMP      R0,#+4
   \   0000171E   0xD105             BNE.N    ??ProcessMsg_HUACE_185
   1394              {
   1395                sprintf((char *)rs485_str,"MOVE");
   \   00001720   0xF8DF 0x1D1C      LDR.W    R1,??ProcessMsg_HUACE_179+0x18
   \   00001724   0xA80B             ADD      R0,SP,#+44
   \   00001726   0x.... 0x....      BL       sprintf
   \   0000172A   0xE01A             B.N      ??ProcessMsg_HUACE_181
   1396              }
   1397              else if(rs485_para.type == 5)
   \                     ??ProcessMsg_HUACE_185:
   \   0000172C   0xF8DF 0x0CF8      LDR.W    R0,??ProcessMsg_HUACE_179
   \   00001730   0x6800             LDR      R0,[R0, #+0]
   \   00001732   0x2805             CMP      R0,#+5
   \   00001734   0xD105             BNE.N    ??ProcessMsg_HUACE_186
   1398              {
   1399                sprintf((char *)rs485_str,"SOIL");
   \   00001736   0xF8DF 0x1D0C      LDR.W    R1,??ProcessMsg_HUACE_179+0x1C
   \   0000173A   0xA80B             ADD      R0,SP,#+44
   \   0000173C   0x.... 0x....      BL       sprintf
   \   00001740   0xE00F             B.N      ??ProcessMsg_HUACE_181
   1400              }
   1401              else if( rs485_para.type == 6)
   \                     ??ProcessMsg_HUACE_186:
   \   00001742   0xF8DF 0x0CE4      LDR.W    R0,??ProcessMsg_HUACE_179
   \   00001746   0x6800             LDR      R0,[R0, #+0]
   \   00001748   0x2806             CMP      R0,#+6
   \   0000174A   0xD105             BNE.N    ??ProcessMsg_HUACE_187
   1402              {
   1403                sprintf((char *)rs485_str,"ACCE");
   \   0000174C   0xF8DF 0x1CF8      LDR.W    R1,??ProcessMsg_HUACE_179+0x20
   \   00001750   0xA80B             ADD      R0,SP,#+44
   \   00001752   0x.... 0x....      BL       sprintf
   \   00001756   0xE004             B.N      ??ProcessMsg_HUACE_181
   1404              }
   1405              else 
   1406              {
   1407                sprintf((char *)rs485_str,"NULL");
   \                     ??ProcessMsg_HUACE_187:
   \   00001758   0xF8DF 0x1CD0      LDR.W    R1,??ProcessMsg_HUACE_179+0x4
   \   0000175C   0xA80B             ADD      R0,SP,#+44
   \   0000175E   0x.... 0x....      BL       sprintf
   1408              }
   1409              
   1410              temp_now = tsensor_get_t();
   \                     ??ProcessMsg_HUACE_181:
   \   00001762   0x.... 0x....      BL       tsensor_get_t
   \   00001766   0x900A             STR      R0,[SP, #+40]
   1411              
   1412              power_voltage = adc_get_voltage(4);
   \   00001768   0x2004             MOVS     R0,#+4
   \   0000176A   0x.... 0x....      BL       adc_get_voltage
   \   0000176E   0x0005             MOVS     R5,R0
   1413              
   1414              sprintf((char *)buf,"$0,REPSTAT,POWER:%c%d.%01d,TEMP:%c%d.%01d,GPRS:%s,BD:%s,RAIN:%s,%s:%s,STRI:%s\r\n", \
   1415                (power_voltage > 0)?' ':'-',
   1416                abs(power_voltage),
   1417                abs(power_voltage * 10)%10,         
   1418                (temp_now > 0)?' ':'-',
   1419                abs(temp_now),
   1420                abs(temp_now * 10)%10,
   1421                st_gprs, st_bd, st_rain, rs485_str,st_dist,st_stri);
   \   00001770   0x990A             LDR      R1,[SP, #+40]
   \   00001772   0xF8DF 0x0CD8      LDR.W    R0,??ProcessMsg_HUACE_179+0x24  ;; 0x41200000
   \   00001776   0x.... 0x....      BL       __aeabi_fmul
   \   0000177A   0x.... 0x....      BL       __aeabi_f2iz
   \   0000177E   0x.... 0x....      BL       abs
   \   00001782   0x0006             MOVS     R6,R0
   \   00001784   0x270A             MOVS     R7,#+10
   \   00001786   0x980A             LDR      R0,[SP, #+40]
   \   00001788   0x.... 0x....      BL       __aeabi_f2iz
   \   0000178C   0x.... 0x....      BL       abs
   \   00001790   0x4680             MOV      R8,R0
   \   00001792   0x980A             LDR      R0,[SP, #+40]
   \   00001794   0x2100             MOVS     R1,#+0
   \   00001796   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000179A   0xD202             BCS.N    ??ProcessMsg_HUACE_188
   \   0000179C   0xF05F 0x0920      MOVS     R9,#+32
   \   000017A0   0xE001             B.N      ??ProcessMsg_HUACE_189
   \                     ??ProcessMsg_HUACE_188:
   \   000017A2   0xF05F 0x092D      MOVS     R9,#+45
   \                     ??ProcessMsg_HUACE_189:
   \   000017A6   0xF8DF 0x0CA4      LDR.W    R0,??ProcessMsg_HUACE_179+0x24  ;; 0x41200000
   \   000017AA   0x0029             MOVS     R1,R5
   \   000017AC   0x.... 0x....      BL       __aeabi_fmul
   \   000017B0   0x.... 0x....      BL       __aeabi_f2iz
   \   000017B4   0x.... 0x....      BL       abs
   \   000017B8   0x4682             MOV      R10,R0
   \   000017BA   0xF05F 0x0B0A      MOVS     R11,#+10
   \   000017BE   0x0028             MOVS     R0,R5
   \   000017C0   0x.... 0x....      BL       __aeabi_f2iz
   \   000017C4   0x.... 0x....      BL       abs
   \   000017C8   0x0003             MOVS     R3,R0
   \   000017CA   0x0028             MOVS     R0,R5
   \   000017CC   0x2100             MOVS     R1,#+0
   \   000017CE   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000017D2   0xD201             BCS.N    ??ProcessMsg_HUACE_190
   \   000017D4   0x2220             MOVS     R2,#+32
   \   000017D6   0xE000             B.N      ??ProcessMsg_HUACE_191
   \                     ??ProcessMsg_HUACE_190:
   \   000017D8   0x222D             MOVS     R2,#+45
   \                     ??ProcessMsg_HUACE_191:
   \   000017DA   0xA84D             ADD      R0,SP,#+308
   \   000017DC   0x9009             STR      R0,[SP, #+36]
   \   000017DE   0xA850             ADD      R0,SP,#+320
   \   000017E0   0x9008             STR      R0,[SP, #+32]
   \   000017E2   0xA80B             ADD      R0,SP,#+44
   \   000017E4   0x9007             STR      R0,[SP, #+28]
   \   000017E6   0xA853             ADD      R0,SP,#+332
   \   000017E8   0x9006             STR      R0,[SP, #+24]
   \   000017EA   0xA856             ADD      R0,SP,#+344
   \   000017EC   0x9005             STR      R0,[SP, #+20]
   \   000017EE   0xA859             ADD      R0,SP,#+356
   \   000017F0   0x9004             STR      R0,[SP, #+16]
   \   000017F2   0xFB96 0xF0F7      SDIV     R0,R6,R7
   \   000017F6   0xFB07 0x6010      MLS      R0,R7,R0,R6
   \   000017FA   0x9003             STR      R0,[SP, #+12]
   \   000017FC   0xF8CD 0x8008      STR      R8,[SP, #+8]
   \   00001800   0xF8CD 0x9004      STR      R9,[SP, #+4]
   \   00001804   0xFB9A 0xF0FB      SDIV     R0,R10,R11
   \   00001808   0xFB0B 0xA010      MLS      R0,R11,R0,R10
   \   0000180C   0x9000             STR      R0,[SP, #+0]
   \   0000180E   0x.... 0x....      LDR.W    R1,??DataTable4
   \   00001812   0xA8FF             ADD      R0,SP,#+1020
   \   00001814   0x3040             ADDS     R0,R0,#+64
   \   00001816   0x.... 0x....      BL       sprintf
   1422              
   1423              reply_cmd(buf, strlen((char const *)buf));
   \   0000181A   0xA8FF             ADD      R0,SP,#+1020
   \   0000181C   0x3040             ADDS     R0,R0,#+64
   \   0000181E   0x.... 0x....      BL       strlen
   \   00001822   0x0001             MOVS     R1,R0
   \   00001824   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00001826   0xA8FF             ADD      R0,SP,#+1020
   \   00001828   0x3040             ADDS     R0,R0,#+64
   \   0000182A   0x.... 0x....      BL       reply_cmd
   1424              return;
   \   0000182E   0xF000 0xBDF6      B.W      ??ProcessMsg_HUACE_4
   \   00001832   0xBF00             Nop      
   \                     ??ProcessMsg_HUACE_100:
   \   00001834   0x........         DC32     `?<Constant "HANZI">`
   \   00001838   0x4F 0x4B          DC8      0x4F, 0x4B, 0x00, 0x00
   \              0x00 0x00    
   \   0000183C   0x45 0x52          DC8      "ERR"
   \              0x52 0x00    
   1425            }
   1426            else if(strcmp((const char *)CmdId,"HISDAT") == 0)
   \                     ??ProcessMsg_HUACE_168:
   \   00001840   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00001844   0xA822             ADD      R0,SP,#+136
   \   00001846   0x.... 0x....      BL       strcmp
   \   0000184A   0x2800             CMP      R0,#+0
   \   0000184C   0xF040 0x8180      BNE.W    ??ProcessMsg_HUACE_192
   1427            {
   1428              //ex: $0,HISDAT,20150506-154900,20150506-155000,*BCC\r\n
   1429              
   1430              //DbgMsg("HISDAT not support !!!\r\n");
   1431              
   1432              struct TIME_STRUCT tm;
   1433              struct DATA_STRUCT dat;
   1434              
   1435              uint32_t addr_s,addr_e,j;
   1436              
   1437              memset(&tm,0,sizeof tm);
   \   00001850   0x2208             MOVS     R2,#+8
   \   00001852   0x2100             MOVS     R1,#+0
   \   00001854   0xA807             ADD      R0,SP,#+28
   \   00001856   0x.... 0x....      BL       memset
   1438              memset(&dat,0,sizeof dat);
   \   0000185A   0x2232             MOVS     R2,#+50
   \   0000185C   0x2100             MOVS     R1,#+0
   \   0000185E   0xA840             ADD      R0,SP,#+256
   \   00001860   0x.... 0x....      BL       memset
   1439              
   1440              memcpy(CmdPara,pMsg+14-4,4);CmdPara[4] = 0;tm.y = atoi((const char *)CmdPara);
   \   00001864   0x2204             MOVS     R2,#+4
   \   00001866   0xF114 0x010A      ADDS     R1,R4,#+10
   \   0000186A   0xA814             ADD      R0,SP,#+80
   \   0000186C   0x.... 0x....      BL       memcpy
   \   00001870   0x2000             MOVS     R0,#+0
   \   00001872   0xF88D 0x0054      STRB     R0,[SP, #+84]
   \   00001876   0xA814             ADD      R0,SP,#+80
   \   00001878   0x.... 0x....      BL       atoi
   \   0000187C   0xF8AD 0x001C      STRH     R0,[SP, #+28]
   1441              memcpy(CmdPara,pMsg+18-4,2);CmdPara[2] = 0;tm.m = atoi((const char *)CmdPara);
   \   00001880   0x2202             MOVS     R2,#+2
   \   00001882   0xF114 0x010E      ADDS     R1,R4,#+14
   \   00001886   0xA814             ADD      R0,SP,#+80
   \   00001888   0x.... 0x....      BL       memcpy
   \   0000188C   0x2000             MOVS     R0,#+0
   \   0000188E   0xF88D 0x0052      STRB     R0,[SP, #+82]
   \   00001892   0xA814             ADD      R0,SP,#+80
   \   00001894   0x.... 0x....      BL       atoi
   \   00001898   0xF88D 0x001E      STRB     R0,[SP, #+30]
   1442              memcpy(CmdPara,pMsg+20-4,2);CmdPara[2] = 0;tm.d = atoi((const char *)CmdPara);
   \   0000189C   0x2202             MOVS     R2,#+2
   \   0000189E   0xF114 0x0110      ADDS     R1,R4,#+16
   \   000018A2   0xA814             ADD      R0,SP,#+80
   \   000018A4   0x.... 0x....      BL       memcpy
   \   000018A8   0x2000             MOVS     R0,#+0
   \   000018AA   0xF88D 0x0052      STRB     R0,[SP, #+82]
   \   000018AE   0xA814             ADD      R0,SP,#+80
   \   000018B0   0x.... 0x....      BL       atoi
   \   000018B4   0xF88D 0x001F      STRB     R0,[SP, #+31]
   1443              memcpy(CmdPara,pMsg+23-4,2);CmdPara[2] = 0;tm.H = atoi((const char *)CmdPara);
   \   000018B8   0x2202             MOVS     R2,#+2
   \   000018BA   0xF114 0x0113      ADDS     R1,R4,#+19
   \   000018BE   0xA814             ADD      R0,SP,#+80
   \   000018C0   0x.... 0x....      BL       memcpy
   \   000018C4   0x2000             MOVS     R0,#+0
   \   000018C6   0xF88D 0x0052      STRB     R0,[SP, #+82]
   \   000018CA   0xA814             ADD      R0,SP,#+80
   \   000018CC   0x.... 0x....      BL       atoi
   \   000018D0   0xF88D 0x0020      STRB     R0,[SP, #+32]
   1444              memcpy(CmdPara,pMsg+25-4,2);CmdPara[2] = 0;tm.M = atoi((const char *)CmdPara);
   \   000018D4   0x2202             MOVS     R2,#+2
   \   000018D6   0xF114 0x0115      ADDS     R1,R4,#+21
   \   000018DA   0xA814             ADD      R0,SP,#+80
   \   000018DC   0x.... 0x....      BL       memcpy
   \   000018E0   0x2000             MOVS     R0,#+0
   \   000018E2   0xF88D 0x0052      STRB     R0,[SP, #+82]
   \   000018E6   0xA814             ADD      R0,SP,#+80
   \   000018E8   0x.... 0x....      BL       atoi
   \   000018EC   0xF88D 0x0021      STRB     R0,[SP, #+33]
   1445              memcpy(CmdPara,pMsg+27-4,2);CmdPara[2] = 0;tm.S = atoi((const char *)CmdPara);
   \   000018F0   0x2202             MOVS     R2,#+2
   \   000018F2   0xF114 0x0117      ADDS     R1,R4,#+23
   \   000018F6   0xA814             ADD      R0,SP,#+80
   \   000018F8   0x.... 0x....      BL       memcpy
   \   000018FC   0x2000             MOVS     R0,#+0
   \   000018FE   0xF88D 0x0052      STRB     R0,[SP, #+82]
   \   00001902   0xA814             ADD      R0,SP,#+80
   \   00001904   0x.... 0x....      BL       atoi
   \   00001908   0xF88D 0x0022      STRB     R0,[SP, #+34]
   1446              
   1447              
   1448              file_get_addr_by_time(&addr_s,&tm);
   \   0000190C   0xA907             ADD      R1,SP,#+28
   \   0000190E   0xA80A             ADD      R0,SP,#+40
   \   00001910   0x.... 0x....      BL       file_get_addr_by_time
   1449              
   1450              if( addr_s > 300*1000*sizeof(struct DATA_STRUCT))
   \   00001914   0x980A             LDR      R0,[SP, #+40]
   \   00001916   0x.... 0x....      LDR.W    R1,??DataTable4_2  ;; 0xe4e1c1
   \   0000191A   0x4288             CMP      R0,R1
   \   0000191C   0xD305             BCC.N    ??ProcessMsg_HUACE_193
   1451              {
   1452                DbgMsg("No History Data \r\n");
   \   0000191E   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   00001922   0x.... 0x....      BL       DbgMsg
   1453                return;
   \   00001926   0xF000 0xBD7A      B.W      ??ProcessMsg_HUACE_4
   1454              }
   1455              
   1456              
   1457              memset(&tm,0,sizeof tm);
   \                     ??ProcessMsg_HUACE_193:
   \   0000192A   0x2208             MOVS     R2,#+8
   \   0000192C   0x2100             MOVS     R1,#+0
   \   0000192E   0xA807             ADD      R0,SP,#+28
   \   00001930   0x.... 0x....      BL       memset
   1458              memset(&dat,0,sizeof dat);
   \   00001934   0x2232             MOVS     R2,#+50
   \   00001936   0x2100             MOVS     R1,#+0
   \   00001938   0xA840             ADD      R0,SP,#+256
   \   0000193A   0x.... 0x....      BL       memset
   1459              
   1460              memcpy(CmdPara,pMsg+30-4,4);CmdPara[4] = 0;tm.y = atoi((const char *)CmdPara);
   \   0000193E   0x2204             MOVS     R2,#+4
   \   00001940   0xF114 0x011A      ADDS     R1,R4,#+26
   \   00001944   0xA814             ADD      R0,SP,#+80
   \   00001946   0x.... 0x....      BL       memcpy
   \   0000194A   0x2000             MOVS     R0,#+0
   \   0000194C   0xF88D 0x0054      STRB     R0,[SP, #+84]
   \   00001950   0xA814             ADD      R0,SP,#+80
   \   00001952   0x.... 0x....      BL       atoi
   \   00001956   0xF8AD 0x001C      STRH     R0,[SP, #+28]
   1461              memcpy(CmdPara,pMsg+34-4,2);CmdPara[2] = 0;tm.m = atoi((const char *)CmdPara);
   \   0000195A   0x2202             MOVS     R2,#+2
   \   0000195C   0xF114 0x011E      ADDS     R1,R4,#+30
   \   00001960   0xA814             ADD      R0,SP,#+80
   \   00001962   0x.... 0x....      BL       memcpy
   \   00001966   0x2000             MOVS     R0,#+0
   \   00001968   0xF88D 0x0052      STRB     R0,[SP, #+82]
   \   0000196C   0xA814             ADD      R0,SP,#+80
   \   0000196E   0x.... 0x....      BL       atoi
   \   00001972   0xF88D 0x001E      STRB     R0,[SP, #+30]
   1462              memcpy(CmdPara,pMsg+36-4,2);CmdPara[2] = 0;tm.d = atoi((const char *)CmdPara);
   \   00001976   0x2202             MOVS     R2,#+2
   \   00001978   0xF114 0x0120      ADDS     R1,R4,#+32
   \   0000197C   0xA814             ADD      R0,SP,#+80
   \   0000197E   0x.... 0x....      BL       memcpy
   \   00001982   0x2000             MOVS     R0,#+0
   \   00001984   0xF88D 0x0052      STRB     R0,[SP, #+82]
   \   00001988   0xA814             ADD      R0,SP,#+80
   \   0000198A   0x.... 0x....      BL       atoi
   \   0000198E   0xF88D 0x001F      STRB     R0,[SP, #+31]
   1463              memcpy(CmdPara,pMsg+39-4,2);CmdPara[2] = 0;tm.H = atoi((const char *)CmdPara);
   \   00001992   0x2202             MOVS     R2,#+2
   \   00001994   0xF114 0x0123      ADDS     R1,R4,#+35
   \   00001998   0xA814             ADD      R0,SP,#+80
   \   0000199A   0x.... 0x....      BL       memcpy
   \   0000199E   0x2000             MOVS     R0,#+0
   \   000019A0   0xF88D 0x0052      STRB     R0,[SP, #+82]
   \   000019A4   0xA814             ADD      R0,SP,#+80
   \   000019A6   0x.... 0x....      BL       atoi
   \   000019AA   0xF88D 0x0020      STRB     R0,[SP, #+32]
   1464              memcpy(CmdPara,pMsg+41-4,2);CmdPara[2] = 0;tm.M = atoi((const char *)CmdPara);
   \   000019AE   0x2202             MOVS     R2,#+2
   \   000019B0   0xF114 0x0125      ADDS     R1,R4,#+37
   \   000019B4   0xA814             ADD      R0,SP,#+80
   \   000019B6   0x.... 0x....      BL       memcpy
   \   000019BA   0x2000             MOVS     R0,#+0
   \   000019BC   0xF88D 0x0052      STRB     R0,[SP, #+82]
   \   000019C0   0xA814             ADD      R0,SP,#+80
   \   000019C2   0x.... 0x....      BL       atoi
   \   000019C6   0xF88D 0x0021      STRB     R0,[SP, #+33]
   1465              memcpy(CmdPara,pMsg+43-4,2);CmdPara[2] = 0;tm.S = atoi((const char *)CmdPara);
   \   000019CA   0x2202             MOVS     R2,#+2
   \   000019CC   0xF114 0x0127      ADDS     R1,R4,#+39
   \   000019D0   0xA814             ADD      R0,SP,#+80
   \   000019D2   0x.... 0x....      BL       memcpy
   \   000019D6   0x2000             MOVS     R0,#+0
   \   000019D8   0xF88D 0x0052      STRB     R0,[SP, #+82]
   \   000019DC   0xA814             ADD      R0,SP,#+80
   \   000019DE   0x.... 0x....      BL       atoi
   \   000019E2   0xF88D 0x0022      STRB     R0,[SP, #+34]
   1466              
   1467              
   1468              file_get_addr_by_time(&addr_e,&tm);
   \   000019E6   0xA907             ADD      R1,SP,#+28
   \   000019E8   0xA809             ADD      R0,SP,#+36
   \   000019EA   0x.... 0x....      BL       file_get_addr_by_time
   1469              
   1470              if( addr_e > 300*1000*sizeof(struct DATA_STRUCT))
   \   000019EE   0x9809             LDR      R0,[SP, #+36]
   \   000019F0   0x.... 0x....      LDR.W    R1,??DataTable4_2  ;; 0xe4e1c1
   \   000019F4   0x4288             CMP      R0,R1
   \   000019F6   0xD30D             BCC.N    ??ProcessMsg_HUACE_194
   1471              {
   1472                DbgMsg("No History Data \r\n");
   \   000019F8   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   000019FC   0x.... 0x....      BL       DbgMsg
   1473                return;
   \   00001A00   0xF000 0xBD0D      B.W      ??ProcessMsg_HUACE_4
   \                     ??ProcessMsg_HUACE_105:
   \   00001A04   0x........         DC32     g_Byte128+0x89
   \   00001A08   0x........         DC32     g_Byte128+0xA9
   \   00001A0C   0x........         DC32     g_Byte128+0xC9
   \   00001A10   0x........         DC32     g_Byte128+0xE9
   1474              }
   1475              
   1476              addr_s = ( addr_s + sizeof(struct DATA_STRUCT))% (300*1000*sizeof(struct DATA_STRUCT));
   \                     ??ProcessMsg_HUACE_194:
   \   00001A14   0x980A             LDR      R0,[SP, #+40]
   \   00001A16   0x3032             ADDS     R0,R0,#+50
   \   00001A18   0x.... 0x....      LDR.W    R1,??DataTable4_4  ;; 0xe4e1c0
   \   00001A1C   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001A20   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00001A24   0x900A             STR      R0,[SP, #+40]
   1477              addr_e = ( addr_e + sizeof(struct DATA_STRUCT))% (300*1000*sizeof(struct DATA_STRUCT));
   \   00001A26   0x9809             LDR      R0,[SP, #+36]
   \   00001A28   0x3032             ADDS     R0,R0,#+50
   \   00001A2A   0x.... 0x....      LDR.W    R1,??DataTable4_4  ;; 0xe4e1c0
   \   00001A2E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00001A32   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00001A36   0x9009             STR      R0,[SP, #+36]
   1478              
   1479              for( j = addr_s ; j != addr_e; )
   \   00001A38   0x980A             LDR      R0,[SP, #+40]
   \   00001A3A   0x0005             MOVS     R5,R0
   \                     ??ProcessMsg_HUACE_195:
   \   00001A3C   0x9809             LDR      R0,[SP, #+36]
   \   00001A3E   0x4285             CMP      R5,R0
   \   00001A40   0xF000 0x8084      BEQ.W    ??ProcessMsg_HUACE_196
   1480              {
   1481                
   1482                /** 将数据元输出到串口 **/
   1483                file_read_by_addr(&dat,j);
   \   00001A44   0x0029             MOVS     R1,R5
   \   00001A46   0xA840             ADD      R0,SP,#+256
   \   00001A48   0x.... 0x....      BL       file_read_by_addr
   1484                
   1485                if( (dat.y < 2015) || (dat.y > 2100))
   \   00001A4C   0xF8BD 0x0100      LDRH     R0,[SP, #+256]
   \   00001A50   0xF240 0x71DF      MOVW     R1,#+2015
   \   00001A54   0x4288             CMP      R0,R1
   \   00001A56   0xDB05             BLT.N    ??ProcessMsg_HUACE_197
   \   00001A58   0xF8BD 0x0100      LDRH     R0,[SP, #+256]
   \   00001A5C   0xF640 0x0135      MOVW     R1,#+2101
   \   00001A60   0x4288             CMP      R0,R1
   \   00001A62   0xDB05             BLT.N    ??ProcessMsg_HUACE_198
   1486                {
   1487                  break;
   \                     ??ProcessMsg_HUACE_197:
   \   00001A64   0xE072             B.N      ??ProcessMsg_HUACE_196
   \   00001A66   0xBF00             Nop      
   \                     ??ProcessMsg_HUACE_106:
   \   00001A68   0x........         DC32     g_Byte128+0x109
   \   00001A6C   0x........         DC32     g_Byte128+0x1C4
   1488                }
   1489                
   1490                WWDT_Feed();
   \                     ??ProcessMsg_HUACE_198:
   \   00001A70   0x.... 0x....      BL       WWDT_Feed
   1491                
   1492                //zxf -----------
   1493                //data_send_out(&dat);
   1494                char msg_buf[256];
   1495                char crc;
   1496                int i;
   1497                
   1498                sprintf(msg_buf,"$0,%s,%04d%02d%02d,%02d%02d%02d,%d,,%s,*",\
   1499                  g_RtuConfig.rtuid,dat.y,dat.m,dat.d, dat.H,dat.M,dat.S,\
   1500                    dat.type,\
   1501                      dat.data);
   \   00001A74   0xA842             ADD      R0,SP,#+264
   \   00001A76   0x9006             STR      R0,[SP, #+24]
   \   00001A78   0xF89D 0x0107      LDRB     R0,[SP, #+263]
   \   00001A7C   0x9005             STR      R0,[SP, #+20]
   \   00001A7E   0xF89D 0x0106      LDRB     R0,[SP, #+262]
   \   00001A82   0x9004             STR      R0,[SP, #+16]
   \   00001A84   0xF89D 0x0105      LDRB     R0,[SP, #+261]
   \   00001A88   0x9003             STR      R0,[SP, #+12]
   \   00001A8A   0xF89D 0x0104      LDRB     R0,[SP, #+260]
   \   00001A8E   0x9002             STR      R0,[SP, #+8]
   \   00001A90   0xF89D 0x0103      LDRB     R0,[SP, #+259]
   \   00001A94   0x9001             STR      R0,[SP, #+4]
   \   00001A96   0xF89D 0x0102      LDRB     R0,[SP, #+258]
   \   00001A9A   0x9000             STR      R0,[SP, #+0]
   \   00001A9C   0xF8BD 0x3100      LDRH     R3,[SP, #+256]
   \   00001AA0   0x4ABD             LDR.N    R2,??ProcessMsg_HUACE_125+0x8
   \   00001AA2   0x495F             LDR.N    R1,??ProcessMsg_HUACE_111
   \   00001AA4   0xA8CF             ADD      R0,SP,#+828
   \   00001AA6   0x.... 0x....      BL       sprintf
   1502                crc = 0;
   \   00001AAA   0x2000             MOVS     R0,#+0
   \   00001AAC   0x0006             MOVS     R6,R0
   1503                for(i=0; i<strlen(msg_buf); i++)
   \   00001AAE   0x2000             MOVS     R0,#+0
   \   00001AB0   0x0007             MOVS     R7,R0
   \                     ??ProcessMsg_HUACE_199:
   \   00001AB2   0xA8CF             ADD      R0,SP,#+828
   \   00001AB4   0x.... 0x....      BL       strlen
   \   00001AB8   0x4287             CMP      R7,R0
   \   00001ABA   0xD21D             BCS.N    ??ProcessMsg_HUACE_200
   1504                  crc^=msg_buf[i];
   \   00001ABC   0xA8CF             ADD      R0,SP,#+828
   \   00001ABE   0x5C38             LDRB     R0,[R7, R0]
   \   00001AC0   0x4046             EORS     R6,R0,R6
   \   00001AC2   0x1C7F             ADDS     R7,R7,#+1
   \   00001AC4   0xE7F5             B.N      ??ProcessMsg_HUACE_199
   \   00001AC6   0xBF00             Nop      
   \                     ??ProcessMsg_HUACE_107:
   \   00001AC8   0x........         DC32     rs485_para+0x20
   \   00001ACC   0x........         DC32     g_Byte128+0x12A
   \   00001AD0   0x........         DC32     adc0_para+0x20
   \   00001AD4   0x........         DC32     g_Byte128+0x13F
   \   00001AD8   0x........         DC32     adc1_para+0x20
   \   00001ADC   0x........         DC32     g_Byte128+0x154
   \   00001AE0   0x........         DC32     adc2_para+0x20
   \   00001AE4   0x........         DC32     g_Byte128+0x169
   \   00001AE8   0x........         DC32     rs232_para+0x20
   \   00001AEC   0x........         DC32     g_Byte128+0x17E
   \   00001AF0   0x........         DC32     rain_para+0x9
   \   00001AF4   0x........         DC32     g_Byte128+0x193
   1505                sprintf(msg_buf, "%s%02X\r\n", msg_buf, crc);
   \                     ??ProcessMsg_HUACE_200:
   \   00001AF8   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00001AFA   0x0033             MOVS     R3,R6
   \   00001AFC   0xAACF             ADD      R2,SP,#+828
   \   00001AFE   0x4957             LDR.N    R1,??ProcessMsg_HUACE_114
   \   00001B00   0xA8CF             ADD      R0,SP,#+828
   \   00001B02   0x.... 0x....      BL       sprintf
   1506                reply_cmd((unsigned char *)msg_buf, strlen(msg_buf));
   \   00001B06   0xA8CF             ADD      R0,SP,#+828
   \   00001B08   0x.... 0x....      BL       strlen
   \   00001B0C   0x0001             MOVS     R1,R0
   \   00001B0E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00001B10   0xA8CF             ADD      R0,SP,#+828
   \   00001B12   0x.... 0x....      BL       reply_cmd
   1507                
   1508                /** 更新指针 **/
   1509                
   1510                j += sizeof(struct DATA_STRUCT);
   \   00001B16   0x3532             ADDS     R5,R5,#+50
   1511                
   1512                if( j >= 300*1000*sizeof(struct DATA_STRUCT) )
   \   00001B18   0x.... 0x....      LDR.W    R0,??DataTable4_4  ;; 0xe4e1c0
   \   00001B1C   0x4285             CMP      R5,R0
   \   00001B1E   0xD301             BCC.N    ??ProcessMsg_HUACE_201
   1513                {
   1514                  j = 0;
   \   00001B20   0x2000             MOVS     R0,#+0
   \   00001B22   0x0005             MOVS     R5,R0
   1515                }
   1516                
   1517                g_RtuStatus.dog_heart = 0;
   \                     ??ProcessMsg_HUACE_201:
   \   00001B24   0xF8DF 0x03D4      LDR.W    R0,??ProcessMsg_HUACE_133
   \   00001B28   0x2100             MOVS     R1,#+0
   \   00001B2A   0x6241             STR      R1,[R0, #+36]
   \   00001B2C   0xE786             B.N      ??ProcessMsg_HUACE_195
   \   00001B2E   0xBF00             Nop      
   \                     ??ProcessMsg_HUACE_108:
   \   00001B30   0x........         DC32     pwm_para+0x10
   \   00001B34   0x........         DC32     g_Byte128+0x1E4
   \   00001B38   0x........         DC32     g_Byte128+0x1B3
   \   00001B3C   0x........         DC32     `?<Constant "REQCONF">`
   \   00001B40   0x........         DC32     `?<Constant "REQCONF \\r\\n">`
   \   00001B44   0x........         DC32     `?<Constant "REQRAINDAT">`
   \   00001B48   0x........         DC32     `?<Constant "REQRAINDAT\\r\\n">`
   1518              }
   1519              
   1520              //reply_cmd(pMsg, Length);
   1521              return;
   \                     ??ProcessMsg_HUACE_196:
   \   00001B4C   0xF000 0xBC67      B.W      ??ProcessMsg_HUACE_4
   1522            }
   1523            else if(strcmp((const char *)CmdId,"DIRCMD") == 0)
   \                     ??ProcessMsg_HUACE_192:
   \   00001B50   0x.... 0x....      LDR.W    R1,??DataTable4_5
   \   00001B54   0xA822             ADD      R0,SP,#+136
   \   00001B56   0x.... 0x....      BL       strcmp
   \   00001B5A   0x2800             CMP      R0,#+0
   \   00001B5C   0xD162             BNE.N    ??ProcessMsg_HUACE_202
   1524            {
   1525              DbgMsg("DIRCMD \r\n");
   \   00001B5E   0x.... 0x....      LDR.W    R0,??DataTable4_6
   \   00001B62   0x.... 0x....      BL       DbgMsg
   1526              GetField(pMsg, CmdPara, 2);
   \   00001B66   0x2202             MOVS     R2,#+2
   \   00001B68   0xA914             ADD      R1,SP,#+80
   \   00001B6A   0x0020             MOVS     R0,R4
   \   00001B6C   0x.... 0x....      BL       GetField
   1527              if(strcmp((const char *)CmdPara,"DIST") == 0)
   \   00001B70   0xF8DF 0x18BC      LDR.W    R1,??ProcessMsg_HUACE_179+0x8
   \   00001B74   0xA814             ADD      R0,SP,#+80
   \   00001B76   0x.... 0x....      BL       strcmp
   \   00001B7A   0x2800             CMP      R0,#+0
   \   00001B7C   0xD13D             BNE.N    ??ProcessMsg_HUACE_203
   1528              {
   1529                char para[50];
   1530                char len;
   1531                GetField(pMsg, para, 3);
   \   00001B7E   0x2203             MOVS     R2,#+3
   \   00001B80   0xA96E             ADD      R1,SP,#+440
   \   00001B82   0x0020             MOVS     R0,R4
   \   00001B84   0x.... 0x....      BL       GetField
   1532                len = strlen(para);
   \   00001B88   0xA86E             ADD      R0,SP,#+440
   \   00001B8A   0x.... 0x....      BL       strlen
   \   00001B8E   0x0005             MOVS     R5,R0
   1533                para[len]   = '\r';
   \   00001B90   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00001B92   0xA86E             ADD      R0,SP,#+440
   \   00001B94   0x210D             MOVS     R1,#+13
   \   00001B96   0x5429             STRB     R1,[R5, R0]
   1534                para[len+1] = '\n';
   \   00001B98   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00001B9A   0xA86E             ADD      R0,SP,#+440
   \   00001B9C   0x1828             ADDS     R0,R5,R0
   \   00001B9E   0x210A             MOVS     R1,#+10
   \   00001BA0   0x7041             STRB     R1,[R0, #+1]
   1535                para[len+2] = '\0';
   \   00001BA2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00001BA4   0xA86E             ADD      R0,SP,#+440
   \   00001BA6   0x1828             ADDS     R0,R5,R0
   \   00001BA8   0x2100             MOVS     R1,#+0
   \   00001BAA   0x7081             STRB     R1,[R0, #+2]
   1536                //DebugMsg(para);
   1537                GPIO_OutputValue(BRD_LED_485_OE_PORT, BRD_LED_485_OE_MASK, LED_ON);
   \   00001BAC   0x2201             MOVS     R2,#+1
   \   00001BAE   0xF45F 0x2100      MOVS     R1,#+524288
   \   00001BB2   0x2001             MOVS     R0,#+1
   \   00001BB4   0x.... 0x....      BL       GPIO_OutputValue
   1538                OSTimeDlyHMSM(0, 0, 0, 100);
   \   00001BB8   0x2364             MOVS     R3,#+100
   \   00001BBA   0x2200             MOVS     R2,#+0
   \   00001BBC   0x2100             MOVS     R1,#+0
   \   00001BBE   0x2000             MOVS     R0,#+0
   \   00001BC0   0x.... 0x....      BL       OSTimeDlyHMSM
   1539                SendOutHardware(PORT_ID_GPS, para, len+2);
   \   00001BC4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00001BC6   0x1CAA             ADDS     R2,R5,#+2
   \   00001BC8   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00001BCA   0xA96E             ADD      R1,SP,#+440
   \   00001BCC   0x2002             MOVS     R0,#+2
   \   00001BCE   0x.... 0x....      BL       SendOutHardware
   1540                OSTimeDlyHMSM(0, 0, 0, 500);
   \   00001BD2   0xF44F 0x73FA      MOV      R3,#+500
   \   00001BD6   0x2200             MOVS     R2,#+0
   \   00001BD8   0x2100             MOVS     R1,#+0
   \   00001BDA   0x2000             MOVS     R0,#+0
   \   00001BDC   0x.... 0x....      BL       OSTimeDlyHMSM
   1541                GPIO_OutputValue(BRD_LED_485_OE_PORT, BRD_LED_485_OE_MASK, LED_OFF);
   \   00001BE0   0x2200             MOVS     R2,#+0
   \   00001BE2   0xF45F 0x2100      MOVS     R1,#+524288
   \   00001BE6   0x2001             MOVS     R0,#+1
   \   00001BE8   0x.... 0x....      BL       GPIO_OutputValue
   1542                OSTimeDlyHMSM(0, 0, 0, 100);
   \   00001BEC   0x2364             MOVS     R3,#+100
   \   00001BEE   0x2200             MOVS     R2,#+0
   \   00001BF0   0x2100             MOVS     R1,#+0
   \   00001BF2   0x2000             MOVS     R0,#+0
   \   00001BF4   0x.... 0x....      BL       OSTimeDlyHMSM
   \   00001BF8   0xE003             B.N      ??ProcessMsg_HUACE_204
   1543              }
   1544              else 
   1545              {
   1546                DebugMsg("senser not support\r\n");
   \                     ??ProcessMsg_HUACE_203:
   \   00001BFA   0x.... 0x....      LDR.W    R0,??DataTable4_7
   \   00001BFE   0x.... 0x....      BL       DebugMsg
   1547              }
   1548              char buf[20];
   1549              sprintf(buf,"$0,DIRCMD\r\n");
   \                     ??ProcessMsg_HUACE_204:
   \   00001C02   0x.... 0x....      LDR.W    R1,??DataTable4_8
   \   00001C06   0xA869             ADD      R0,SP,#+420
   \   00001C08   0x.... 0x....      BL       sprintf
   1550              reply_cmd(buf, strlen(buf));
   \   00001C0C   0xA869             ADD      R0,SP,#+420
   \   00001C0E   0x.... 0x....      BL       strlen
   \   00001C12   0x0001             MOVS     R1,R0
   \   00001C14   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00001C16   0xA869             ADD      R0,SP,#+420
   \   00001C18   0x.... 0x....      BL       reply_cmd
   1551              return;
   \   00001C1C   0xF000 0xBBFF      B.W      ??ProcessMsg_HUACE_4
   \                     ??ProcessMsg_HUACE_111:
   \   00001C20   0x........         DC32     `?<Constant "$0,%s,%04d%02d%02d,%0...">`
   1552            }
   1553            else if(strcmp((const char *)CmdId,"REBOOT") == 0)
   \                     ??ProcessMsg_HUACE_202:
   \   00001C24   0x.... 0x....      LDR.W    R1,??DataTable4_9
   \   00001C28   0xA822             ADD      R0,SP,#+136
   \   00001C2A   0x.... 0x....      BL       strcmp
   \   00001C2E   0x2800             CMP      R0,#+0
   \   00001C30   0xD11C             BNE.N    ??ProcessMsg_HUACE_205
   1554            {
   1555              DbgMsg("REBOOT \r\n");
   \   00001C32   0x.... 0x....      LDR.W    R0,??DataTable4_10
   \   00001C36   0x.... 0x....      BL       DbgMsg
   1556              SaveConfig();
   \   00001C3A   0x.... 0x....      BL       SaveConfig
   1557              reply_cmd(pMsg, Length);
   \   00001C3E   0xF8BD 0x1830      LDRH     R1,[SP, #+2096]
   \   00001C42   0x0020             MOVS     R0,R4
   \   00001C44   0x.... 0x....      BL       reply_cmd
   1558              
   1559              OSTimeDlyHMSM(0, 0, 0, 200);
   \   00001C48   0x23C8             MOVS     R3,#+200
   \   00001C4A   0x2200             MOVS     R2,#+0
   \   00001C4C   0x2100             MOVS     R1,#+0
   \   00001C4E   0x2000             MOVS     R0,#+0
   \   00001C50   0x.... 0x....      BL       OSTimeDlyHMSM
   1560              NVIC_SystemReset();
   \   00001C54   0x.... 0x....      BL       NVIC_SystemReset
   1561              return;
   \   00001C58   0xE3E1             B.N      ??ProcessMsg_HUACE_4
   \   00001C5A   0xBF00             Nop      
   \                     ??ProcessMsg_HUACE_114:
   \   00001C5C   0x........         DC32     `?<Constant "%s%02X\\r\\n">`
   \   00001C60   0x........         DC32     `?<Constant "REQDISTDAT">`
   \   00001C64   0x........         DC32     `?<Constant "REQDISTDAT\\r\\n">`
   \   00001C68   0x........         DC32     rs485_para+0x35
   1562            }
   1563            else if(strcmp((const char *)CmdId,"RTUID") == 0)
   \                     ??ProcessMsg_HUACE_205:
   \   00001C6C   0x.... 0x....      LDR.W    R1,??DataTable4_11
   \   00001C70   0xA822             ADD      R0,SP,#+136
   \   00001C72   0x.... 0x....      BL       strcmp
   \   00001C76   0x2800             CMP      R0,#+0
   \   00001C78   0xD144             BNE.N    ??ProcessMsg_HUACE_206
   1564            {
   1565              DbgMsg("RTUID \r\n");
   \   00001C7A   0x.... 0x....      LDR.W    R0,??DataTable4_12
   \   00001C7E   0x.... 0x....      BL       DbgMsg
   1566              char par[32];
   1567              UINT8 len,i;
   1568              GetField(pMsg, par, 2);
   \   00001C82   0x2202             MOVS     R2,#+2
   \   00001C84   0xA961             ADD      R1,SP,#+388
   \   00001C86   0x0020             MOVS     R0,R4
   \   00001C88   0x.... 0x....      BL       GetField
   1569              len = strlen(par);
   \   00001C8C   0xA861             ADD      R0,SP,#+388
   \   00001C8E   0x.... 0x....      BL       strlen
   \   00001C92   0x0005             MOVS     R5,R0
   1570              if(len > 31)
   \   00001C94   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00001C96   0x2D20             CMP      R5,#+32
   \   00001C98   0xDB04             BLT.N    ??ProcessMsg_HUACE_207
   1571              {
   1572                DebugMsg("rtuid len err!!!\r\n");
   \   00001C9A   0x.... 0x....      LDR.W    R0,??DataTable4_13
   \   00001C9E   0x.... 0x....      BL       DebugMsg
   1573                return;
   \   00001CA2   0xE3BC             B.N      ??ProcessMsg_HUACE_4
   1574              }
   1575              for(i=0;i<len;i++)
   \                     ??ProcessMsg_HUACE_207:
   \   00001CA4   0x2000             MOVS     R0,#+0
   \   00001CA6   0x0006             MOVS     R6,R0
   \                     ??ProcessMsg_HUACE_208:
   \   00001CA8   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00001CAA   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00001CAC   0x42AE             CMP      R6,R5
   \   00001CAE   0xD213             BCS.N    ??ProcessMsg_HUACE_209
   1576              {
   1577                g_RtuConfig.rtuid[i] = par[i];
   \   00001CB0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00001CB2   0x.... 0x....      LDR.W    R0,??DataTable4_14
   \   00001CB6   0x1830             ADDS     R0,R6,R0
   \   00001CB8   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00001CBA   0xA961             ADD      R1,SP,#+388
   \   00001CBC   0x5C71             LDRB     R1,[R6, R1]
   \   00001CBE   0xF880 0x1020      STRB     R1,[R0, #+32]
   1578                g_Byte128[32+73+i] = par[i];
   \   00001CC2   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00001CC4   0x.... 0x....      LDR.W    R0,??DataTable4_15
   \   00001CC8   0x1830             ADDS     R0,R6,R0
   \   00001CCA   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00001CCC   0xA961             ADD      R1,SP,#+388
   \   00001CCE   0x5C71             LDRB     R1,[R6, R1]
   \   00001CD0   0xF880 0x1069      STRB     R1,[R0, #+105]
   1579              }
   \   00001CD4   0x1C76             ADDS     R6,R6,#+1
   \   00001CD6   0xE7E7             B.N      ??ProcessMsg_HUACE_208
   1580              g_RtuConfig.rtuid[len] = '\0';
   \                     ??ProcessMsg_HUACE_209:
   \   00001CD8   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00001CDA   0x.... 0x....      LDR.W    R0,??DataTable4_14
   \   00001CDE   0x1828             ADDS     R0,R5,R0
   \   00001CE0   0x2100             MOVS     R1,#+0
   \   00001CE2   0xF880 0x1020      STRB     R1,[R0, #+32]
   1581              g_Byte128[32+73+len] = '\0';
   \   00001CE6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00001CE8   0x.... 0x....      LDR.W    R0,??DataTable4_15
   \   00001CEC   0x1828             ADDS     R0,R5,R0
   \   00001CEE   0x2100             MOVS     R1,#+0
   \   00001CF0   0xF880 0x1069      STRB     R1,[R0, #+105]
   1582              reply_cmd(pMsg, Length);
   \   00001CF4   0xF8BD 0x1830      LDRH     R1,[SP, #+2096]
   \   00001CF8   0x0020             MOVS     R0,R4
   \   00001CFA   0x.... 0x....      BL       reply_cmd
   \   00001CFE   0xE38C             B.N      ??ProcessMsg_HUACE_9
   \                     ??ProcessMsg_HUACE_118:
   \   00001D00   0x........         DC32     `?<Constant "TEMPDAT">`
   1583            }
   1584            else if(strcmp((const char *)CmdId,"HEART") == 0)
   \                     ??ProcessMsg_HUACE_206:
   \   00001D04   0x.... 0x....      LDR.W    R1,??DataTable4_16
   \   00001D08   0xA822             ADD      R0,SP,#+136
   \   00001D0A   0x.... 0x....      BL       strcmp
   \   00001D0E   0x2800             CMP      R0,#+0
   \   00001D10   0xF040 0x809F      BNE.W    ??ProcessMsg_HUACE_210
   1585            {      
   1586              //dog prc---
   1587              g_RtuStatus.dog_heart = 0;
   \   00001D14   0x4879             LDR.N    R0,??ProcessMsg_HUACE_133
   \   00001D16   0x2100             MOVS     R1,#+0
   \   00001D18   0x6241             STR      R1,[R0, #+36]
   1588              
   1589              /** 使用心跳时间 **/
   1590          	if(g_SetRTCCount >= RTCSETTIME && g_RtuStatus.bd == 0)
   \   00001D1A   0x.... 0x....      LDR.W    R0,??DataTable4_17
   \   00001D1E   0x6800             LDR      R0,[R0, #+0]
   \   00001D20   0xF5B0 0x5FE1      CMP      R0,#+7200
   \   00001D24   0xF0C0 0x8094      BCC.W    ??ProcessMsg_HUACE_211
   \   00001D28   0x4874             LDR.N    R0,??ProcessMsg_HUACE_133
   \   00001D2A   0x7A40             LDRB     R0,[R0, #+9]
   \   00001D2C   0x2800             CMP      R0,#+0
   \   00001D2E   0xF040 0x808F      BNE.W    ??ProcessMsg_HUACE_211
   1591              {
   1592          		struct TIME_STRUCT tm;
   1593          		char par[20];
   1594          		char tt[10];
   1595          		
   1596          		g_SetRTCCount = 0;
   \   00001D32   0x.... 0x....      LDR.W    R0,??DataTable4_17
   \   00001D36   0x2100             MOVS     R1,#+0
   \   00001D38   0x6001             STR      R1,[R0, #+0]
   1597          		
   1598          		GetField(pMsg, par, 2);
   \   00001D3A   0x2202             MOVS     R2,#+2
   \   00001D3C   0xA933             ADD      R1,SP,#+204
   \   00001D3E   0x0020             MOVS     R0,R4
   \   00001D40   0x.... 0x....      BL       GetField
   1599          		tt[0] = par[0];
   \   00001D44   0xF89D 0x00CC      LDRB     R0,[SP, #+204]
   \   00001D48   0xF88D 0x0010      STRB     R0,[SP, #+16]
   1600          		tt[1] = par[1];
   \   00001D4C   0xF89D 0x00CD      LDRB     R0,[SP, #+205]
   \   00001D50   0xF88D 0x0011      STRB     R0,[SP, #+17]
   1601          		tt[2] = par[2];
   \   00001D54   0xF89D 0x00CE      LDRB     R0,[SP, #+206]
   \   00001D58   0xF88D 0x0012      STRB     R0,[SP, #+18]
   1602          		tt[3] = par[3];
   \   00001D5C   0xF89D 0x00CF      LDRB     R0,[SP, #+207]
   \   00001D60   0xF88D 0x0013      STRB     R0,[SP, #+19]
   1603          		tt[4] = '\0';
   \   00001D64   0x2000             MOVS     R0,#+0
   \   00001D66   0xF88D 0x0014      STRB     R0,[SP, #+20]
   1604          		UINT16 year;
   1605          		year = atoi(tt);
   \   00001D6A   0xA804             ADD      R0,SP,#+16
   \   00001D6C   0x.... 0x....      BL       atoi
   \   00001D70   0x0005             MOVS     R5,R0
   1606          		if((year < 2015) || (year > 2100))
   \   00001D72   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00001D74   0xF240 0x70DF      MOVW     R0,#+2015
   \   00001D78   0x4285             CMP      R5,R0
   \   00001D7A   0xDB04             BLT.N    ??ProcessMsg_HUACE_212
   \   00001D7C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00001D7E   0xF640 0x0035      MOVW     R0,#+2101
   \   00001D82   0x4285             CMP      R5,R0
   \   00001D84   0xDB0A             BLT.N    ??ProcessMsg_HUACE_213
   1607          		{
   1608          			DebugMsg("heart tm  err !!!\r\n");
   \                     ??ProcessMsg_HUACE_212:
   \   00001D86   0x.... 0x....      LDR.W    R0,??DataTable4_18
   \   00001D8A   0x.... 0x....      BL       DebugMsg
   1609          			return;
   \   00001D8E   0xE346             B.N      ??ProcessMsg_HUACE_4
   \                     ??ProcessMsg_HUACE_125:
   \   00001D90   0x........         DC32     g_DeviceGPS
   \   00001D94   0x........         DC32     rs485_buf
   \   00001D98   0x........         DC32     g_RtuConfig+0x20
   1610          		}
   1611          		tm.y = year;
   \                     ??ProcessMsg_HUACE_213:
   \   00001D9C   0xF8AD 0x509C      STRH     R5,[SP, #+156]
   1612          		tt[0] = par[4];
   \   00001DA0   0xF89D 0x00D0      LDRB     R0,[SP, #+208]
   \   00001DA4   0xF88D 0x0010      STRB     R0,[SP, #+16]
   1613          		tt[1] = par[5];
   \   00001DA8   0xF89D 0x00D1      LDRB     R0,[SP, #+209]
   \   00001DAC   0xF88D 0x0011      STRB     R0,[SP, #+17]
   1614          		tt[2] = '\0';
   \   00001DB0   0x2000             MOVS     R0,#+0
   \   00001DB2   0xF88D 0x0012      STRB     R0,[SP, #+18]
   1615          		tm.m = atoi(tt);
   \   00001DB6   0xA804             ADD      R0,SP,#+16
   \   00001DB8   0x.... 0x....      BL       atoi
   \   00001DBC   0xF88D 0x009E      STRB     R0,[SP, #+158]
   1616          		tt[0] = par[6];
   \   00001DC0   0xF89D 0x00D2      LDRB     R0,[SP, #+210]
   \   00001DC4   0xF88D 0x0010      STRB     R0,[SP, #+16]
   1617          		tt[1] = par[7];
   \   00001DC8   0xF89D 0x00D3      LDRB     R0,[SP, #+211]
   \   00001DCC   0xF88D 0x0011      STRB     R0,[SP, #+17]
   1618          		tt[2] = '\0';
   \   00001DD0   0x2000             MOVS     R0,#+0
   \   00001DD2   0xF88D 0x0012      STRB     R0,[SP, #+18]
   1619          		tm.d = atoi(tt);
   \   00001DD6   0xA804             ADD      R0,SP,#+16
   \   00001DD8   0x.... 0x....      BL       atoi
   \   00001DDC   0xF88D 0x009F      STRB     R0,[SP, #+159]
   1620          		
   1621          		GetField(pMsg, par, 3);
   \   00001DE0   0x2203             MOVS     R2,#+3
   \   00001DE2   0xA933             ADD      R1,SP,#+204
   \   00001DE4   0x0020             MOVS     R0,R4
   \   00001DE6   0x.... 0x....      BL       GetField
   1622          		tt[0] = par[0];
   \   00001DEA   0xF89D 0x00CC      LDRB     R0,[SP, #+204]
   \   00001DEE   0xF88D 0x0010      STRB     R0,[SP, #+16]
   1623          		tt[1] = par[1];
   \   00001DF2   0xF89D 0x00CD      LDRB     R0,[SP, #+205]
   \   00001DF6   0xF88D 0x0011      STRB     R0,[SP, #+17]
   1624          		tt[2] = '\0';
   \   00001DFA   0x2000             MOVS     R0,#+0
   \   00001DFC   0xF88D 0x0012      STRB     R0,[SP, #+18]
   1625          		tm.H = atoi(tt);
   \   00001E00   0xA804             ADD      R0,SP,#+16
   \   00001E02   0x.... 0x....      BL       atoi
   \   00001E06   0xF88D 0x00A0      STRB     R0,[SP, #+160]
   1626          		tt[0] = par[2];
   \   00001E0A   0xF89D 0x00CE      LDRB     R0,[SP, #+206]
   \   00001E0E   0xF88D 0x0010      STRB     R0,[SP, #+16]
   1627          		tt[1] = par[3];
   \   00001E12   0xF89D 0x00CF      LDRB     R0,[SP, #+207]
   \   00001E16   0xF88D 0x0011      STRB     R0,[SP, #+17]
   1628          		tt[2] = '\0';
   \   00001E1A   0x2000             MOVS     R0,#+0
   \   00001E1C   0xF88D 0x0012      STRB     R0,[SP, #+18]
   1629          		tm.M = atoi(tt);
   \   00001E20   0xA804             ADD      R0,SP,#+16
   \   00001E22   0x.... 0x....      BL       atoi
   \   00001E26   0xF88D 0x00A1      STRB     R0,[SP, #+161]
   1630          		tt[0] = par[4];
   \   00001E2A   0xF89D 0x00D0      LDRB     R0,[SP, #+208]
   \   00001E2E   0xF88D 0x0010      STRB     R0,[SP, #+16]
   1631          		tt[1] = par[5];
   \   00001E32   0xF89D 0x00D1      LDRB     R0,[SP, #+209]
   \   00001E36   0xF88D 0x0011      STRB     R0,[SP, #+17]
   1632          		tt[2] = '\0';
   \   00001E3A   0x2000             MOVS     R0,#+0
   \   00001E3C   0xF88D 0x0012      STRB     R0,[SP, #+18]
   1633          		tm.S = atoi(tt);
   \   00001E40   0xA804             ADD      R0,SP,#+16
   \   00001E42   0x.... 0x....      BL       atoi
   \   00001E46   0xF88D 0x00A2      STRB     R0,[SP, #+162]
   1634          		
   1635          		rtc_set_time(&tm);
   \   00001E4A   0xA827             ADD      R0,SP,#+156
   \   00001E4C   0x.... 0x....      BL       rtc_set_time
   1636          	}
   1637              
   1638              return;
   \                     ??ProcessMsg_HUACE_211:
   \   00001E50   0xE2E5             B.N      ??ProcessMsg_HUACE_4
   1639            }
   1640            else if(strcmp((const char *)CmdId,"BDBAUD") == 0)
   \                     ??ProcessMsg_HUACE_210:
   \   00001E52   0x.... 0x....      LDR.W    R1,??DataTable4_19
   \   00001E56   0xA822             ADD      R0,SP,#+136
   \   00001E58   0x.... 0x....      BL       strcmp
   \   00001E5C   0x2800             CMP      R0,#+0
   \   00001E5E   0xD151             BNE.N    ??ProcessMsg_HUACE_214
   1641            {
   1642              DbgMsg("BDBAUD \r\n");
   \   00001E60   0x.... 0x....      LDR.W    R0,??DataTable4_20
   \   00001E64   0x.... 0x....      BL       DbgMsg
   1643              GetField(pMsg, CmdPara, 2);
   \   00001E68   0x2202             MOVS     R2,#+2
   \   00001E6A   0xA914             ADD      R1,SP,#+80
   \   00001E6C   0x0020             MOVS     R0,R4
   \   00001E6E   0x.... 0x....      BL       GetField
   1644              int baud = atoi((const char *)CmdPara);
   \   00001E72   0xA814             ADD      R0,SP,#+80
   \   00001E74   0x.... 0x....      BL       atoi
   \   00001E78   0x0005             MOVS     R5,R0
   1645              if(baud == 4800)
   \   00001E7A   0xF5B5 0x5F96      CMP      R5,#+4800
   \   00001E7E   0xD104             BNE.N    ??ProcessMsg_HUACE_215
   1646                bd_para.baud = 1;
   \   00001E80   0x.... 0x....      LDR.W    R0,??DataTable4_21
   \   00001E84   0x2101             MOVS     R1,#+1
   \   00001E86   0x7201             STRB     R1,[R0, #+8]
   \   00001E88   0xE026             B.N      ??ProcessMsg_HUACE_216
   1647              else if(baud == 9600)
   \                     ??ProcessMsg_HUACE_215:
   \   00001E8A   0xF5B5 0x5F16      CMP      R5,#+9600
   \   00001E8E   0xD104             BNE.N    ??ProcessMsg_HUACE_217
   1648                bd_para.baud = 2;
   \   00001E90   0x.... 0x....      LDR.W    R0,??DataTable4_21
   \   00001E94   0x2102             MOVS     R1,#+2
   \   00001E96   0x7201             STRB     R1,[R0, #+8]
   \   00001E98   0xE01E             B.N      ??ProcessMsg_HUACE_216
   1649              else if(baud == 19200)
   \                     ??ProcessMsg_HUACE_217:
   \   00001E9A   0xF5B5 0x4F96      CMP      R5,#+19200
   \   00001E9E   0xD104             BNE.N    ??ProcessMsg_HUACE_218
   1650                bd_para.baud = 3;
   \   00001EA0   0x.... 0x....      LDR.W    R0,??DataTable4_21
   \   00001EA4   0x2103             MOVS     R1,#+3
   \   00001EA6   0x7201             STRB     R1,[R0, #+8]
   \   00001EA8   0xE016             B.N      ??ProcessMsg_HUACE_216
   1651              else if(baud == 57600)
   \                     ??ProcessMsg_HUACE_218:
   \   00001EAA   0xF5B5 0x4F61      CMP      R5,#+57600
   \   00001EAE   0xD104             BNE.N    ??ProcessMsg_HUACE_219
   1652                bd_para.baud = 4;
   \   00001EB0   0x.... 0x....      LDR.W    R0,??DataTable4_21
   \   00001EB4   0x2104             MOVS     R1,#+4
   \   00001EB6   0x7201             STRB     R1,[R0, #+8]
   \   00001EB8   0xE00E             B.N      ??ProcessMsg_HUACE_216
   1653              else if(baud == 115200)
   \                     ??ProcessMsg_HUACE_219:
   \   00001EBA   0xF5B5 0x3FE1      CMP      R5,#+115200
   \   00001EBE   0xD104             BNE.N    ??ProcessMsg_HUACE_220
   1654                bd_para.baud = 5;
   \   00001EC0   0x.... 0x....      LDR.W    R0,??DataTable4_21
   \   00001EC4   0x2105             MOVS     R1,#+5
   \   00001EC6   0x7201             STRB     R1,[R0, #+8]
   \   00001EC8   0xE006             B.N      ??ProcessMsg_HUACE_216
   1655                 else if(baud == 38400)
   \                     ??ProcessMsg_HUACE_220:
   \   00001ECA   0xF5B5 0x4F16      CMP      R5,#+38400
   \   00001ECE   0xD103             BNE.N    ??ProcessMsg_HUACE_216
   1656                bd_para.baud = 6;
   \   00001ED0   0x.... 0x....      LDR.W    R0,??DataTable4_21
   \   00001ED4   0x2106             MOVS     R1,#+6
   \   00001ED6   0x7201             STRB     R1,[R0, #+8]
   1657              
   1658              g_Byte128[32+19] = bd_para.baud;
   \                     ??ProcessMsg_HUACE_216:
   \   00001ED8   0x.... 0x....      LDR.W    R0,??DataTable4_15
   \   00001EDC   0x.... 0x....      LDR.W    R1,??DataTable4_21
   \   00001EE0   0x7A09             LDRB     R1,[R1, #+8]
   \   00001EE2   0xF880 0x1033      STRB     R1,[R0, #+51]
   1659              
   1660              BSP_SerInit(PORT_ID_BT, baud);
   \   00001EE6   0x0029             MOVS     R1,R5
   \   00001EE8   0x2003             MOVS     R0,#+3
   \   00001EEA   0x.... 0x....      BL       BSP_SerInit
   1661              reply_cmd(pMsg, Length);
   \   00001EEE   0xF8BD 0x1830      LDRH     R1,[SP, #+2096]
   \   00001EF2   0x0020             MOVS     R0,R4
   \   00001EF4   0x.... 0x....      BL       reply_cmd
   \   00001EF8   0xE28F             B.N      ??ProcessMsg_HUACE_9
   \   00001EFA   0xBF00             Nop      
   \                     ??ProcessMsg_HUACE_133:
   \   00001EFC   0x........         DC32     g_RtuStatus
   \   00001F00   0x........         DC32     rs232_para+0x35
   1662            }
   1663            else if(strcmp((const char *)CmdId,"RTCSET") == 0)
   \                     ??ProcessMsg_HUACE_214:
   \   00001F04   0x.... 0x....      LDR.W    R1,??DataTable4_22
   \   00001F08   0xA822             ADD      R0,SP,#+136
   \   00001F0A   0x.... 0x....      BL       strcmp
   \   00001F0E   0x2800             CMP      R0,#+0
   \   00001F10   0xD160             BNE.N    ??ProcessMsg_HUACE_221
   1664            {//$0,RTCSET,yyyymmdd-hhmmss\r\n
   1665              struct TIME_STRUCT tm;
   1666              
   1667              DbgMsg("RTCSET \r\n");
   \   00001F12   0x.... 0x....      LDR.W    R0,??DataTable4_23
   \   00001F16   0x.... 0x....      BL       DbgMsg
   1668              
   1669              memcpy(CmdPara,pMsg+14-4,4);CmdPara[4] = 0;tm.y = atoi((const char *)CmdPara);
   \   00001F1A   0x2204             MOVS     R2,#+4
   \   00001F1C   0xF114 0x010A      ADDS     R1,R4,#+10
   \   00001F20   0xA814             ADD      R0,SP,#+80
   \   00001F22   0x.... 0x....      BL       memcpy
   \   00001F26   0x2000             MOVS     R0,#+0
   \   00001F28   0xF88D 0x0054      STRB     R0,[SP, #+84]
   \   00001F2C   0xA814             ADD      R0,SP,#+80
   \   00001F2E   0x.... 0x....      BL       atoi
   \   00001F32   0xF8AD 0x003C      STRH     R0,[SP, #+60]
   1670              memcpy(CmdPara,pMsg+18-4,2);CmdPara[2] = 0;tm.m = atoi((const char *)CmdPara);
   \   00001F36   0x2202             MOVS     R2,#+2
   \   00001F38   0xF114 0x010E      ADDS     R1,R4,#+14
   \   00001F3C   0xA814             ADD      R0,SP,#+80
   \   00001F3E   0x.... 0x....      BL       memcpy
   \   00001F42   0x2000             MOVS     R0,#+0
   \   00001F44   0xF88D 0x0052      STRB     R0,[SP, #+82]
   \   00001F48   0xA814             ADD      R0,SP,#+80
   \   00001F4A   0x.... 0x....      BL       atoi
   \   00001F4E   0xF88D 0x003E      STRB     R0,[SP, #+62]
   1671              memcpy(CmdPara,pMsg+20-4,2);CmdPara[2] = 0;tm.d = atoi((const char *)CmdPara);
   \   00001F52   0x2202             MOVS     R2,#+2
   \   00001F54   0xF114 0x0110      ADDS     R1,R4,#+16
   \   00001F58   0xA814             ADD      R0,SP,#+80
   \   00001F5A   0x.... 0x....      BL       memcpy
   \   00001F5E   0x2000             MOVS     R0,#+0
   \   00001F60   0xF88D 0x0052      STRB     R0,[SP, #+82]
   \   00001F64   0xA814             ADD      R0,SP,#+80
   \   00001F66   0x.... 0x....      BL       atoi
   \   00001F6A   0xF88D 0x003F      STRB     R0,[SP, #+63]
   1672              memcpy(CmdPara,pMsg+23-4,2);CmdPara[2] = 0;tm.H = atoi((const char *)CmdPara);
   \   00001F6E   0x2202             MOVS     R2,#+2
   \   00001F70   0xF114 0x0113      ADDS     R1,R4,#+19
   \   00001F74   0xA814             ADD      R0,SP,#+80
   \   00001F76   0x.... 0x....      BL       memcpy
   \   00001F7A   0x2000             MOVS     R0,#+0
   \   00001F7C   0xF88D 0x0052      STRB     R0,[SP, #+82]
   \   00001F80   0xA814             ADD      R0,SP,#+80
   \   00001F82   0x.... 0x....      BL       atoi
   \   00001F86   0xF88D 0x0040      STRB     R0,[SP, #+64]
   1673              memcpy(CmdPara,pMsg+25-4,2);CmdPara[2] = 0;tm.M = atoi((const char *)CmdPara);
   \   00001F8A   0x2202             MOVS     R2,#+2
   \   00001F8C   0xF114 0x0115      ADDS     R1,R4,#+21
   \   00001F90   0xA814             ADD      R0,SP,#+80
   \   00001F92   0x.... 0x....      BL       memcpy
   \   00001F96   0x2000             MOVS     R0,#+0
   \   00001F98   0xF88D 0x0052      STRB     R0,[SP, #+82]
   \   00001F9C   0xA814             ADD      R0,SP,#+80
   \   00001F9E   0x.... 0x....      BL       atoi
   \   00001FA2   0xF88D 0x0041      STRB     R0,[SP, #+65]
   1674              memcpy(CmdPara,pMsg+27-4,2);CmdPara[2] = 0;tm.S = atoi((const char *)CmdPara);
   \   00001FA6   0x2202             MOVS     R2,#+2
   \   00001FA8   0xF114 0x0117      ADDS     R1,R4,#+23
   \   00001FAC   0xA814             ADD      R0,SP,#+80
   \   00001FAE   0x.... 0x....      BL       memcpy
   \   00001FB2   0x2000             MOVS     R0,#+0
   \   00001FB4   0xF88D 0x0052      STRB     R0,[SP, #+82]
   \   00001FB8   0xA814             ADD      R0,SP,#+80
   \   00001FBA   0x.... 0x....      BL       atoi
   \   00001FBE   0xF88D 0x0042      STRB     R0,[SP, #+66]
   1675              
   1676              rtc_set_time(&tm);
   \   00001FC2   0xA80F             ADD      R0,SP,#+60
   \   00001FC4   0x.... 0x....      BL       rtc_set_time
   1677              
   1678              reply_cmd(pMsg, Length);
   \   00001FC8   0xF8BD 0x1830      LDRH     R1,[SP, #+2096]
   \   00001FCC   0x0020             MOVS     R0,R4
   \   00001FCE   0x.... 0x....      BL       reply_cmd
   \   00001FD2   0xE222             B.N      ??ProcessMsg_HUACE_9
   1679            }
   1680            else if(strcmp((const char *)CmdId,"SNSET") == 0)
   \                     ??ProcessMsg_HUACE_221:
   \   00001FD4   0x.... 0x....      LDR.W    R1,??DataTable4_24
   \   00001FD8   0xA822             ADD      R0,SP,#+136
   \   00001FDA   0x.... 0x....      BL       strcmp
   \   00001FDE   0x2800             CMP      R0,#+0
   \   00001FE0   0xD126             BNE.N    ??ProcessMsg_HUACE_222
   1681            {
   1682              DbgMsg("SNSET \r\n");
   \   00001FE2   0x.... 0x....      LDR.W    R0,??DataTable4_25
   \   00001FE6   0x.... 0x....      BL       DbgMsg
   1683              
   1684              GetField(pMsg, CmdPara, 2);
   \   00001FEA   0x2202             MOVS     R2,#+2
   \   00001FEC   0xA914             ADD      R1,SP,#+80
   \   00001FEE   0x0020             MOVS     R0,R4
   \   00001FF0   0x.... 0x....      BL       GetField
   1685              
   1686              /** 写入SN **/
   1687              if( (strlen((const char *)CmdPara) == 6) || strlen((const char *)CmdPara) == 7 )
   \   00001FF4   0xA814             ADD      R0,SP,#+80
   \   00001FF6   0x.... 0x....      BL       strlen
   \   00001FFA   0x2806             CMP      R0,#+6
   \   00001FFC   0xD004             BEQ.N    ??ProcessMsg_HUACE_223
   \   00001FFE   0xA814             ADD      R0,SP,#+80
   \   00002000   0x.... 0x....      BL       strlen
   \   00002004   0x2807             CMP      R0,#+7
   \   00002006   0xD10B             BNE.N    ??ProcessMsg_HUACE_224
   1688              {
   1689                strcpy(g_RtuStatus.sn,CmdPara);
   \                     ??ProcessMsg_HUACE_223:
   \   00002008   0xA914             ADD      R1,SP,#+80
   \   0000200A   0x.... 0x....      LDR.W    R0,??DataTable4_26
   \   0000200E   0x.... 0x....      BL       strcpy
   1690                memcpy(&g_Byte128[32+392],g_RtuStatus.sn,10);
   \   00002012   0x220A             MOVS     R2,#+10
   \   00002014   0x.... 0x....      LDR.W    R1,??DataTable4_26
   \   00002018   0x.... 0x....      LDR.W    R0,??DataTable4_27
   \   0000201C   0x.... 0x....      BL       memcpy
   1691              }
   1692              
   1693              reply_cmd(pMsg, Length);
   \                     ??ProcessMsg_HUACE_224:
   \   00002020   0xF8BD 0x1830      LDRH     R1,[SP, #+2096]
   \   00002024   0x0020             MOVS     R0,R4
   \   00002026   0x.... 0x....      BL       reply_cmd
   \   0000202A   0xE1F6             B.N      ??ProcessMsg_HUACE_9
   \                     ??ProcessMsg_HUACE_142:
   \   0000202C   0x........         DC32     `?<Constant "%s,%d">`
   1694            }
   1695            
   1696            
   1697            //////////////////////////////////////////////////////////////////////////////////////
   1698            else if(strcmp((const char *)CmdId,"REFILE") == 0)
   \                     ??ProcessMsg_HUACE_222:
   \   00002030   0x.... 0x....      LDR.W    R1,??DataTable4_28
   \   00002034   0xA822             ADD      R0,SP,#+136
   \   00002036   0x.... 0x....      BL       strcmp
   \   0000203A   0x2800             CMP      R0,#+0
   \   0000203C   0xD11D             BNE.N    ??ProcessMsg_HUACE_225
   1699            {
   1700              DbgMsg("admin REFILE \r\n");
   \   0000203E   0x.... 0x....      LDR.W    R0,??DataTable4_29
   \   00002042   0x.... 0x....      BL       DbgMsg
   1701              g_RtuConfig.addr_rd = g_RtuConfig.addr_wr = 0;
   \   00002046   0x2000             MOVS     R0,#+0
   \   00002048   0x.... 0x....      LDR.W    R1,??DataTable4_14
   \   0000204C   0x6188             STR      R0,[R1, #+24]
   \   0000204E   0x.... 0x....      LDR.W    R1,??DataTable4_14
   \   00002052   0x61C8             STR      R0,[R1, #+28]
   1702              
   1703              LPC_RTC->GPREG1 = 0;//addr_wr
   \   00002054   0x.... 0x....      LDR.W    R0,??DataTable4_30  ;; 0x40024048
   \   00002058   0x2100             MOVS     R1,#+0
   \   0000205A   0x6001             STR      R1,[R0, #+0]
   1704              LPC_RTC->GPREG2 = 0;//addr_rd
   \   0000205C   0x.... 0x....      LDR.W    R0,??DataTable4_31  ;; 0x4002404c
   \   00002060   0x2100             MOVS     R1,#+0
   \   00002062   0x6001             STR      R1,[R0, #+0]
   1705              
   1706              SaveConfig();
   \   00002064   0x.... 0x....      BL       SaveConfig
   1707              
   1708              OSTimeDlyHMSM(0, 0, 0, 200);
   \   00002068   0x23C8             MOVS     R3,#+200
   \   0000206A   0x2200             MOVS     R2,#+0
   \   0000206C   0x2100             MOVS     R1,#+0
   \   0000206E   0x2000             MOVS     R0,#+0
   \   00002070   0x.... 0x....      BL       OSTimeDlyHMSM
   1709              NVIC_SystemReset();
   \   00002074   0x.... 0x....      BL       NVIC_SystemReset
   1710              return;
   \   00002078   0xE1D1             B.N      ??ProcessMsg_HUACE_4
   1711            }
   1712            else if(strcmp((const char *)CmdId,"REQIC") == 0)
   \                     ??ProcessMsg_HUACE_225:
   \   0000207A   0x.... 0x....      LDR.W    R1,??DataTable4_32
   \   0000207E   0xA822             ADD      R0,SP,#+136
   \   00002080   0x.... 0x....      BL       strcmp
   \   00002084   0x2800             CMP      R0,#+0
   \   00002086   0xD114             BNE.N    ??ProcessMsg_HUACE_226
   1713            {
   1714              char buf[20];
   1715              DbgMsg("admin REQIC \r\n");
   \   00002088   0x.... 0x....      LDR.W    R0,??DataTable4_33
   \   0000208C   0x.... 0x....      BL       DbgMsg
   1716              sprintf(buf,"own IC:%6d\r\n",g_RtuStatus.own_ic);
   \   00002090   0x.... 0x....      LDR.W    R0,??DataTable4_34
   \   00002094   0x6902             LDR      R2,[R0, #+16]
   \   00002096   0x.... 0x....      LDR.W    R1,??DataTable4_35
   \   0000209A   0xA85C             ADD      R0,SP,#+368
   \   0000209C   0x.... 0x....      BL       sprintf
   1717              reply_cmd(buf, strlen(buf));
   \   000020A0   0xA85C             ADD      R0,SP,#+368
   \   000020A2   0x.... 0x....      BL       strlen
   \   000020A6   0x0001             MOVS     R1,R0
   \   000020A8   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000020AA   0xA85C             ADD      R0,SP,#+368
   \   000020AC   0x.... 0x....      BL       reply_cmd
   1718              return;
   \   000020B0   0xE1B5             B.N      ??ProcessMsg_HUACE_4
   1719            }
   1720            else if(strcmp((const char *)CmdId,"REQRTC") == 0)
   \                     ??ProcessMsg_HUACE_226:
   \   000020B2   0x.... 0x....      LDR.W    R1,??DataTable4_36
   \   000020B6   0xA822             ADD      R0,SP,#+136
   \   000020B8   0x.... 0x....      BL       strcmp
   \   000020BC   0x2800             CMP      R0,#+0
   \   000020BE   0xD129             BNE.N    ??ProcessMsg_HUACE_227
   1721            {
   1722              char buf[40];
   1723              struct TIME_STRUCT time;
   1724              
   1725              rtc_get_time(&time);
   \   000020C0   0xA80D             ADD      R0,SP,#+52
   \   000020C2   0x.... 0x....      BL       rtc_get_time
   1726              
   1727              DbgMsg("admin REQRTC \r\n");
   \   000020C6   0x.... 0x....      LDR.W    R0,??DataTable4_37
   \   000020CA   0x.... 0x....      BL       DbgMsg
   1728              sprintf(buf,"$0,REQRTC,%04d-%02d-%02d %02d:%02d:%02d\r\n",time.y,time.m,time.d,\
   1729                time.H,time.M,time.S);
   \   000020CE   0xF89D 0x003A      LDRB     R0,[SP, #+58]
   \   000020D2   0x9003             STR      R0,[SP, #+12]
   \   000020D4   0xF89D 0x0039      LDRB     R0,[SP, #+57]
   \   000020D8   0x9002             STR      R0,[SP, #+8]
   \   000020DA   0xF89D 0x0038      LDRB     R0,[SP, #+56]
   \   000020DE   0x9001             STR      R0,[SP, #+4]
   \   000020E0   0xF89D 0x0037      LDRB     R0,[SP, #+55]
   \   000020E4   0x9000             STR      R0,[SP, #+0]
   \   000020E6   0xF89D 0x3036      LDRB     R3,[SP, #+54]
   \   000020EA   0xF8BD 0x2034      LDRH     R2,[SP, #+52]
   \   000020EE   0x.... 0x....      LDR.W    R1,??DataTable4_38
   \   000020F2   0xA8C5             ADD      R0,SP,#+788
   \   000020F4   0x.... 0x....      BL       sprintf
   1730              reply_cmd(buf, strlen(buf));
   \   000020F8   0xA8C5             ADD      R0,SP,#+788
   \   000020FA   0x.... 0x....      BL       strlen
   \   000020FE   0x0001             MOVS     R1,R0
   \   00002100   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00002102   0xA8C5             ADD      R0,SP,#+788
   \   00002104   0x.... 0x....      BL       reply_cmd
   1731              return;
   \   00002108   0xE189             B.N      ??ProcessMsg_HUACE_4
   \   0000210A   0xBF00             Nop      
   \                     ??ProcessMsg_HUACE_148:
   \   0000210C   0x447A0000         DC32     0x447a0000
   \   00002110   0x........         DC32     `?<Constant "$0,%s,%04d%02d%02d,%0...">_1`
   1732            }
   1733            else if(strcmp((const char *)CmdId,"REQSN") == 0)
   \                     ??ProcessMsg_HUACE_227:
   \   00002114   0x.... 0x....      LDR.W    R1,??DataTable4_39
   \   00002118   0xA822             ADD      R0,SP,#+136
   \   0000211A   0x.... 0x....      BL       strcmp
   \   0000211E   0x2800             CMP      R0,#+0
   \   00002120   0xD113             BNE.N    ??ProcessMsg_HUACE_228
   1734            {
   1735              char buf[10];
   1736              
   1737              DbgMsg("admin REQSN \r\n");
   \   00002122   0x.... 0x....      LDR.W    R0,??DataTable4_40
   \   00002126   0x.... 0x....      BL       DbgMsg
   1738              sprintf(buf,"$0,REQSN,%s\r\n",g_RtuStatus.sn);
   \   0000212A   0x.... 0x....      LDR.W    R2,??DataTable4_26
   \   0000212E   0x.... 0x....      LDR.W    R1,??DataTable4_41
   \   00002132   0xA801             ADD      R0,SP,#+4
   \   00002134   0x.... 0x....      BL       sprintf
   1739              reply_cmd(buf, strlen(buf));
   \   00002138   0xA801             ADD      R0,SP,#+4
   \   0000213A   0x.... 0x....      BL       strlen
   \   0000213E   0x0001             MOVS     R1,R0
   \   00002140   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00002142   0xA801             ADD      R0,SP,#+4
   \   00002144   0x.... 0x....      BL       reply_cmd
   1740              return;
   \   00002148   0xE169             B.N      ??ProcessMsg_HUACE_4
   1741            }
   1742            else if(strcmp((const char *)CmdId,"REQTEMP") == 0)
   \                     ??ProcessMsg_HUACE_228:
   \   0000214A   0x.... 0x....      LDR.W    R1,??DataTable4_42
   \   0000214E   0xA822             ADD      R0,SP,#+136
   \   00002150   0x.... 0x....      BL       strcmp
   \   00002154   0x2800             CMP      R0,#+0
   \   00002156   0xD131             BNE.N    ??ProcessMsg_HUACE_229
   1743            {
   1744              char buf[40];
   1745              struct TIME_STRUCT time;
   1746              
   1747              float temp_now =tsensor_get_t();
   \   00002158   0x.... 0x....      BL       tsensor_get_t
   \   0000215C   0x0005             MOVS     R5,R0
   1748              
   1749              DbgMsg("admin REQTEMP \r\n");
   \   0000215E   0x.... 0x....      LDR.W    R0,??DataTable4_43
   \   00002162   0x.... 0x....      BL       DbgMsg
   1750              sprintf(buf,"%c%d.%01d degree \r\n",temp_now > 0?' ':'-',abs(temp_now),\
   1751                (uint32_t)(temp_now * 10) %10);
   \   00002166   0x48B9             LDR.N    R0,??ProcessMsg_HUACE_179+0x24  ;; 0x41200000
   \   00002168   0x0029             MOVS     R1,R5
   \   0000216A   0x.... 0x....      BL       __aeabi_fmul
   \   0000216E   0x.... 0x....      BL       __aeabi_f2uiz
   \   00002172   0x0006             MOVS     R6,R0
   \   00002174   0x270A             MOVS     R7,#+10
   \   00002176   0x0028             MOVS     R0,R5
   \   00002178   0x.... 0x....      BL       __aeabi_f2iz
   \   0000217C   0x.... 0x....      BL       abs
   \   00002180   0x0003             MOVS     R3,R0
   \   00002182   0x0028             MOVS     R0,R5
   \   00002184   0x2100             MOVS     R1,#+0
   \   00002186   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000218A   0xD201             BCS.N    ??ProcessMsg_HUACE_230
   \   0000218C   0x2220             MOVS     R2,#+32
   \   0000218E   0xE000             B.N      ??ProcessMsg_HUACE_231
   \                     ??ProcessMsg_HUACE_230:
   \   00002190   0x222D             MOVS     R2,#+45
   \                     ??ProcessMsg_HUACE_231:
   \   00002192   0xFBB6 0xF0F7      UDIV     R0,R6,R7
   \   00002196   0xFB07 0x6010      MLS      R0,R7,R0,R6
   \   0000219A   0x9000             STR      R0,[SP, #+0]
   \   0000219C   0x.... 0x....      LDR.W    R1,??DataTable4_44
   \   000021A0   0xA8BB             ADD      R0,SP,#+748
   \   000021A2   0x.... 0x....      BL       sprintf
   1752              reply_cmd(buf, strlen(buf));
   \   000021A6   0xA8BB             ADD      R0,SP,#+748
   \   000021A8   0x.... 0x....      BL       strlen
   \   000021AC   0x0001             MOVS     R1,R0
   \   000021AE   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000021B0   0xA8BB             ADD      R0,SP,#+748
   \   000021B2   0x.... 0x....      BL       reply_cmd
   1753              return;
   \   000021B6   0xE132             B.N      ??ProcessMsg_HUACE_4
   \                     ??ProcessMsg_HUACE_152:
   \   000021B8   0x........         DC32     `?<Constant "$0,%s,%04d%02d%02d,%0...">_2`
   1754            }
   1755            else if(strcmp((const char *)CmdId,"DEBUG") == 0)
   \                     ??ProcessMsg_HUACE_229:
   \   000021BC   0x.... 0x....      LDR.W    R1,??DataTable4_45
   \   000021C0   0xA822             ADD      R0,SP,#+136
   \   000021C2   0x.... 0x....      BL       strcmp
   \   000021C6   0x2800             CMP      R0,#+0
   \   000021C8   0xF040 0x8114      BNE.W    ??ProcessMsg_HUACE_232
   1756            {
   1757          	  UINT8 buf[30];
   1758          	  DbgMsg("admin DEBUG \r\n");
   \   000021CC   0x.... 0x....      LDR.W    R0,??DataTable4_46
   \   000021D0   0x.... 0x....      BL       DbgMsg
   1759          	  GetField(pMsg, buf, 2);
   \   000021D4   0x2202             MOVS     R2,#+2
   \   000021D6   0xA92B             ADD      R1,SP,#+172
   \   000021D8   0x0020             MOVS     R0,R4
   \   000021DA   0x.... 0x....      BL       GetField
   1760          	  if(strcmp((const char *)buf,"1") == 0)
   \   000021DE   0xA195             ADR.N    R1,??ProcessMsg_HUACE_179+0xC  ;; "1"
   \   000021E0   0xA82B             ADD      R0,SP,#+172
   \   000021E2   0x.... 0x....      BL       strcmp
   \   000021E6   0x2800             CMP      R0,#+0
   \   000021E8   0xD102             BNE.N    ??ProcessMsg_HUACE_233
   1761          	  {
   1762          		// Reconnect_Flag = 1;
   1763          		//Telit_Connection_State = T_SOCKET_CLOSE;
   1764          		// UINT8 temp_len = GetStrLen(T_ATCmd[Telit_Connection_State]);
   1765          		// SendData_To_Communication_Module(PORT_ID_GPRS,T_ATCmd[Telit_Connection_State],temp_len,0);
   1766          		GprsSoftReset();
   \   000021EA   0x.... 0x....      BL       GprsSoftReset
   \   000021EE   0xE0FC             B.N      ??ProcessMsg_HUACE_234
   1767          	  }
   1768          	  else if(strcmp((const char *)buf,"GPRS") == 0)		//$HCRTU,DEBUG,GPRS
   \                     ??ProcessMsg_HUACE_233:
   \   000021F0   0x....             LDR.N    R1,??DataTable4_47
   \   000021F2   0xA82B             ADD      R0,SP,#+172
   \   000021F4   0x.... 0x....      BL       strcmp
   \   000021F8   0x2800             CMP      R0,#+0
   \   000021FA   0xD114             BNE.N    ??ProcessMsg_HUACE_235
   1769          	  {
   1770          		  g_Debug.GprsDataShow = !g_Debug.GprsDataShow; 
   \   000021FC   0x....             LDR.N    R0,??DataTable4_48
   \   000021FE   0x7800             LDRB     R0,[R0, #+0]
   \   00002200   0x2800             CMP      R0,#+0
   \   00002202   0xD101             BNE.N    ??ProcessMsg_HUACE_236
   \   00002204   0x2001             MOVS     R0,#+1
   \   00002206   0xE000             B.N      ??ProcessMsg_HUACE_237
   \                     ??ProcessMsg_HUACE_236:
   \   00002208   0x2000             MOVS     R0,#+0
   \                     ??ProcessMsg_HUACE_237:
   \   0000220A   0x....             LDR.N    R1,??DataTable4_48
   \   0000220C   0x7008             STRB     R0,[R1, #+0]
   1771          		  if(g_Debug.GprsDataShow)
   \   0000220E   0x....             LDR.N    R0,??DataTable4_48
   \   00002210   0x7800             LDRB     R0,[R0, #+0]
   \   00002212   0x2800             CMP      R0,#+0
   \   00002214   0xD003             BEQ.N    ??ProcessMsg_HUACE_238
   1772          		  {
   1773          			  DbgMsg("GprsDataShow open!\r\n");
   \   00002216   0x....             LDR.N    R0,??DataTable4_49
   \   00002218   0x.... 0x....      BL       DbgMsg
   \   0000221C   0xE0E5             B.N      ??ProcessMsg_HUACE_234
   1774          		  }
   1775          		  else
   1776          		  {
   1777          			  DbgMsg("GprsDataShow close!\r\n");
   \                     ??ProcessMsg_HUACE_238:
   \   0000221E   0x....             LDR.N    R0,??DataTable4_50
   \   00002220   0x.... 0x....      BL       DbgMsg
   \   00002224   0xE0E1             B.N      ??ProcessMsg_HUACE_234
   1778          		  }
   1779          	  }
   1780          	  else if(strcmp((const char *)buf,"TLIT") == 0)
   \                     ??ProcessMsg_HUACE_235:
   \   00002226   0x....             LDR.N    R1,??DataTable4_51
   \   00002228   0xA82B             ADD      R0,SP,#+172
   \   0000222A   0x.... 0x....      BL       strcmp
   \   0000222E   0x2800             CMP      R0,#+0
   \   00002230   0xD118             BNE.N    ??ProcessMsg_HUACE_239
   1781          	  {
   1782          		  g_bPrintDataFlag = !g_bPrintDataFlag;
   \   00002232   0x....             LDR.N    R0,??DataTable4_52
   \   00002234   0x7800             LDRB     R0,[R0, #+0]
   \   00002236   0x2800             CMP      R0,#+0
   \   00002238   0xD101             BNE.N    ??ProcessMsg_HUACE_240
   \   0000223A   0x2001             MOVS     R0,#+1
   \   0000223C   0xE000             B.N      ??ProcessMsg_HUACE_241
   \                     ??ProcessMsg_HUACE_240:
   \   0000223E   0x2000             MOVS     R0,#+0
   \                     ??ProcessMsg_HUACE_241:
   \   00002240   0x....             LDR.N    R1,??DataTable4_52
   \   00002242   0x7008             STRB     R0,[R1, #+0]
   1783          		  if(g_bPrintDataFlag != 0)
   \   00002244   0x....             LDR.N    R0,??DataTable4_52
   \   00002246   0x7800             LDRB     R0,[R0, #+0]
   \   00002248   0x2800             CMP      R0,#+0
   \   0000224A   0xD003             BEQ.N    ??ProcessMsg_HUACE_242
   1784          		  {
   1785          			  DebugMsg("Open Uart data show!\r\n");
   \   0000224C   0x....             LDR.N    R0,??DataTable4_53
   \   0000224E   0x.... 0x....      BL       DebugMsg
   \   00002252   0xE0CA             B.N      ??ProcessMsg_HUACE_234
   1786          		  }
   1787          		  else
   1788          		  {
   1789          			  DebugMsg("Close Uart data show!\r\n");
   \                     ??ProcessMsg_HUACE_242:
   \   00002254   0x....             LDR.N    R0,??DataTable4_54
   \   00002256   0x.... 0x....      BL       DebugMsg
   \   0000225A   0xE0C6             B.N      ??ProcessMsg_HUACE_234
   \                     ??ProcessMsg_HUACE_158:
   \   0000225C   0x........         DC32     `?<Constant "$0,%s,%04d%02d%02d,%0...">_3`
   \   00002260   0x........         DC32     `?<Constant "$0,%s,%04d%02d%02d,%0...">_4`
   1790          		  }			
   1791          	  }
   1792          	  else if(strcmp((const char *)buf,"STAT") == 0)
   \                     ??ProcessMsg_HUACE_239:
   \   00002264   0x....             LDR.N    R1,??DataTable4_55
   \   00002266   0xA82B             ADD      R0,SP,#+172
   \   00002268   0x.... 0x....      BL       strcmp
   \   0000226C   0x2800             CMP      R0,#+0
   \   0000226E   0xD151             BNE.N    ??ProcessMsg_HUACE_243
   1793          	  {
   1794          		  sprintf((char *)buf,"Telit_Connection_State:%d\r\n",Telit_Connection_State);	
   \   00002270   0x....             LDR.N    R0,??DataTable4_56
   \   00002272   0x7802             LDRB     R2,[R0, #+0]
   \   00002274   0x....             LDR.N    R1,??DataTable4_57
   \   00002276   0xA82B             ADD      R0,SP,#+172
   \   00002278   0x.... 0x....      BL       sprintf
   1795          		  DebugMsg((char *)buf);
   \   0000227C   0xA82B             ADD      R0,SP,#+172
   \   0000227E   0x.... 0x....      BL       DebugMsg
   1796          		  sprintf((char *)buf,"g_bMoudule_Initialized_Flag:%d\r\n",g_bMoudule_Initialized_Flag);	
   \   00002282   0x....             LDR.N    R0,??DataTable4_58
   \   00002284   0x7802             LDRB     R2,[R0, #+0]
   \   00002286   0x....             LDR.N    R1,??DataTable4_59
   \   00002288   0xA82B             ADD      R0,SP,#+172
   \   0000228A   0x.... 0x....      BL       sprintf
   1797          		  DebugMsg((char *)buf);	
   \   0000228E   0xA82B             ADD      R0,SP,#+172
   \   00002290   0x.... 0x....      BL       DebugMsg
   1798          		  sprintf((char *)buf,"Common_Connection_State:%d\r\n",Common_Connection_State);	
   \   00002294   0x....             LDR.N    R0,??DataTable4_60
   \   00002296   0x7802             LDRB     R2,[R0, #+0]
   \   00002298   0x....             LDR.N    R1,??DataTable4_61
   \   0000229A   0xA82B             ADD      R0,SP,#+172
   \   0000229C   0x.... 0x....      BL       sprintf
   1799          		  DebugMsg((char *)buf);
   \   000022A0   0xA82B             ADD      R0,SP,#+172
   \   000022A2   0x.... 0x....      BL       DebugMsg
   1800          		  sprintf((char *)buf,"Current_State:%d\r\n",Current_State);	
   \   000022A6   0x....             LDR.N    R0,??DataTable4_62
   \   000022A8   0x7802             LDRB     R2,[R0, #+0]
   \   000022AA   0x....             LDR.N    R1,??DataTable4_63
   \   000022AC   0xA82B             ADD      R0,SP,#+172
   \   000022AE   0x.... 0x....      BL       sprintf
   1801          		  DebugMsg((char *)buf);		  
   \   000022B2   0xA82B             ADD      R0,SP,#+172
   \   000022B4   0x.... 0x....      BL       DebugMsg
   1802          		  sprintf((char *)buf,"g_bModuleRestartFlag:%d\r\n",g_bModuleRestartFlag);	
   \   000022B8   0x....             LDR.N    R0,??DataTable4_64
   \   000022BA   0x7802             LDRB     R2,[R0, #+0]
   \   000022BC   0x....             LDR.N    R1,??DataTable4_65
   \   000022BE   0xA82B             ADD      R0,SP,#+172
   \   000022C0   0x.... 0x....      BL       sprintf
   1803          		  DebugMsg((char *)buf);	
   \   000022C4   0xA82B             ADD      R0,SP,#+172
   \   000022C6   0x.... 0x....      BL       DebugMsg
   1804          		  sprintf((char *)buf,"Module_Type:%d\r\n",Module_Type);	
   \   000022CA   0x....             LDR.N    R0,??DataTable4_66
   \   000022CC   0x7802             LDRB     R2,[R0, #+0]
   \   000022CE   0x....             LDR.N    R1,??DataTable4_67
   \   000022D0   0xA82B             ADD      R0,SP,#+172
   \   000022D2   0x.... 0x....      BL       sprintf
   1805          		  DebugMsg((char *)buf);	
   \   000022D6   0xA82B             ADD      R0,SP,#+172
   \   000022D8   0x.... 0x....      BL       DebugMsg
   1806          		  sprintf((char *)buf,"Timer_Flag.Wait_Time_Cnt:%d\r\n",Timer_Flag.Wait_Time_Cnt);	
   \   000022DC   0x....             LDR.N    R0,??DataTable4_68
   \   000022DE   0x8802             LDRH     R2,[R0, #+0]
   \   000022E0   0x....             LDR.N    R1,??DataTable4_69
   \   000022E2   0xA82B             ADD      R0,SP,#+172
   \   000022E4   0x.... 0x....      BL       sprintf
   1807          		  DebugMsg((char *)buf);	
   \   000022E8   0xA82B             ADD      R0,SP,#+172
   \   000022EA   0x.... 0x....      BL       DebugMsg
   1808          		  sprintf((char *)buf,"Timer_Flag.TimeOut_Cnt:%d\r\n",Timer_Flag.TimeOut_Cnt);	
   \   000022EE   0x....             LDR.N    R0,??DataTable4_68
   \   000022F0   0x8842             LDRH     R2,[R0, #+2]
   \   000022F2   0x....             LDR.N    R1,??DataTable4_70
   \   000022F4   0xA82B             ADD      R0,SP,#+172
   \   000022F6   0x.... 0x....      BL       sprintf
   1809          		  DebugMsg((char *)buf);			  	
   \   000022FA   0xA82B             ADD      R0,SP,#+172
   \   000022FC   0x.... 0x....      BL       DebugMsg
   1810          		  sprintf((char *)buf,"g_RtuStatus.gprs:%d\r\n",g_RtuStatus.gprs);	
   \   00002300   0x....             LDR.N    R0,??DataTable4_34
   \   00002302   0x7A02             LDRB     R2,[R0, #+8]
   \   00002304   0x....             LDR.N    R1,??DataTable4_71
   \   00002306   0xA82B             ADD      R0,SP,#+172
   \   00002308   0x.... 0x....      BL       sprintf
   1811          		  DebugMsg((char *)buf);			  
   \   0000230C   0xA82B             ADD      R0,SP,#+172
   \   0000230E   0x.... 0x....      BL       DebugMsg
   \   00002312   0xE06A             B.N      ??ProcessMsg_HUACE_234
   1812          	  }
   1813          	  else if(strcmp((const char *)buf,"STEP") == 0)
   \                     ??ProcessMsg_HUACE_243:
   \   00002314   0x....             LDR.N    R1,??DataTable4_72
   \   00002316   0xA82B             ADD      R0,SP,#+172
   \   00002318   0x.... 0x....      BL       strcmp
   \   0000231C   0x2800             CMP      R0,#+0
   \   0000231E   0xD114             BNE.N    ??ProcessMsg_HUACE_244
   1814          	  {
   1815          		  g_Debug.Footstep = !g_Debug.Footstep;
   \   00002320   0x....             LDR.N    R0,??DataTable4_48
   \   00002322   0x7840             LDRB     R0,[R0, #+1]
   \   00002324   0x2800             CMP      R0,#+0
   \   00002326   0xD101             BNE.N    ??ProcessMsg_HUACE_245
   \   00002328   0x2001             MOVS     R0,#+1
   \   0000232A   0xE000             B.N      ??ProcessMsg_HUACE_246
   \                     ??ProcessMsg_HUACE_245:
   \   0000232C   0x2000             MOVS     R0,#+0
   \                     ??ProcessMsg_HUACE_246:
   \   0000232E   0x....             LDR.N    R1,??DataTable4_48
   \   00002330   0x7048             STRB     R0,[R1, #+1]
   1816          		  if(g_Debug.Footstep != 0)
   \   00002332   0x....             LDR.N    R0,??DataTable4_48
   \   00002334   0x7840             LDRB     R0,[R0, #+1]
   \   00002336   0x2800             CMP      R0,#+0
   \   00002338   0xD003             BEQ.N    ??ProcessMsg_HUACE_247
   1817          		  {
   1818          			  DebugMsg("Open g_Debug.Footstep!\r\n");
   \   0000233A   0x....             LDR.N    R0,??DataTable4_73
   \   0000233C   0x.... 0x....      BL       DebugMsg
   \   00002340   0xE053             B.N      ??ProcessMsg_HUACE_234
   1819          		  }
   1820          		  else
   1821          		  {
   1822          			  DebugMsg("Close g_Debug.Footstep!\r\n");
   \                     ??ProcessMsg_HUACE_247:
   \   00002342   0x....             LDR.N    R0,??DataTable4_74
   \   00002344   0x.... 0x....      BL       DebugMsg
   \   00002348   0xE04F             B.N      ??ProcessMsg_HUACE_234
   1823          		  }	
   1824          	  }
   1825          	  else if(strcmp((const char *)buf,"IFSTUCK") == 0)
   \                     ??ProcessMsg_HUACE_244:
   \   0000234A   0x....             LDR.N    R1,??DataTable4_75
   \   0000234C   0xA82B             ADD      R0,SP,#+172
   \   0000234E   0x.... 0x....      BL       strcmp
   \   00002352   0x2800             CMP      R0,#+0
   \   00002354   0xD114             BNE.N    ??ProcessMsg_HUACE_248
   1826          	  {
   1827          		  g_Debug.Footstep2 = !g_Debug.Footstep2;
   \   00002356   0x....             LDR.N    R0,??DataTable4_48
   \   00002358   0x7880             LDRB     R0,[R0, #+2]
   \   0000235A   0x2800             CMP      R0,#+0
   \   0000235C   0xD101             BNE.N    ??ProcessMsg_HUACE_249
   \   0000235E   0x2001             MOVS     R0,#+1
   \   00002360   0xE000             B.N      ??ProcessMsg_HUACE_250
   \                     ??ProcessMsg_HUACE_249:
   \   00002362   0x2000             MOVS     R0,#+0
   \                     ??ProcessMsg_HUACE_250:
   \   00002364   0x....             LDR.N    R1,??DataTable4_48
   \   00002366   0x7088             STRB     R0,[R1, #+2]
   1828          		  if(g_Debug.Footstep2 != 0)
   \   00002368   0x....             LDR.N    R0,??DataTable4_48
   \   0000236A   0x7880             LDRB     R0,[R0, #+2]
   \   0000236C   0x2800             CMP      R0,#+0
   \   0000236E   0xD003             BEQ.N    ??ProcessMsg_HUACE_251
   1829          		  {
   1830          			  DebugMsg("Open g_Debug.Footstep2!\r\n");
   \   00002370   0x....             LDR.N    R0,??DataTable4_76
   \   00002372   0x.... 0x....      BL       DebugMsg
   \   00002376   0xE038             B.N      ??ProcessMsg_HUACE_234
   1831          		  }
   1832          		  else
   1833          		  {
   1834          			  DebugMsg("Close g_Debug.Footstep2!\r\n");
   \                     ??ProcessMsg_HUACE_251:
   \   00002378   0x....             LDR.N    R0,??DataTable4_77
   \   0000237A   0x.... 0x....      BL       DebugMsg
   \   0000237E   0xE034             B.N      ??ProcessMsg_HUACE_234
   1835          		  }	
   1836          	  }	  
   1837          	  else if(strcmp((const char *)buf,"SDSHOW") == 0)
   \                     ??ProcessMsg_HUACE_248:
   \   00002380   0x....             LDR.N    R1,??DataTable4_78
   \   00002382   0xA82B             ADD      R0,SP,#+172
   \   00002384   0x.... 0x....      BL       strcmp
   \   00002388   0x2800             CMP      R0,#+0
   \   0000238A   0xD114             BNE.N    ??ProcessMsg_HUACE_252
   1838          	  {
   1839          		  g_Debug.Sendshow = !g_Debug.Sendshow;
   \   0000238C   0x....             LDR.N    R0,??DataTable4_48
   \   0000238E   0x78C0             LDRB     R0,[R0, #+3]
   \   00002390   0x2800             CMP      R0,#+0
   \   00002392   0xD101             BNE.N    ??ProcessMsg_HUACE_253
   \   00002394   0x2001             MOVS     R0,#+1
   \   00002396   0xE000             B.N      ??ProcessMsg_HUACE_254
   \                     ??ProcessMsg_HUACE_253:
   \   00002398   0x2000             MOVS     R0,#+0
   \                     ??ProcessMsg_HUACE_254:
   \   0000239A   0x....             LDR.N    R1,??DataTable4_48
   \   0000239C   0x70C8             STRB     R0,[R1, #+3]
   1840          		  if(g_Debug.Sendshow != 0)
   \   0000239E   0x....             LDR.N    R0,??DataTable4_48
   \   000023A0   0x78C0             LDRB     R0,[R0, #+3]
   \   000023A2   0x2800             CMP      R0,#+0
   \   000023A4   0xD003             BEQ.N    ??ProcessMsg_HUACE_255
   1841          		  {
   1842          			  DebugMsg("Open g_Debug.Sendshow!\r\n");
   \   000023A6   0x....             LDR.N    R0,??DataTable4_79
   \   000023A8   0x.... 0x....      BL       DebugMsg
   \   000023AC   0xE01D             B.N      ??ProcessMsg_HUACE_234
   1843          		  }
   1844          		  else
   1845          		  {
   1846          			  DebugMsg("Close g_Debug.Sendshow!\r\n");
   \                     ??ProcessMsg_HUACE_255:
   \   000023AE   0x....             LDR.N    R0,??DataTable4_80
   \   000023B0   0x.... 0x....      BL       DebugMsg
   \   000023B4   0xE019             B.N      ??ProcessMsg_HUACE_234
   1847          		  }	
   1848          	  }	 
   1849          	  else if(strcmp((const char *)buf,"HCMSG") == 0)
   \                     ??ProcessMsg_HUACE_252:
   \   000023B6   0x....             LDR.N    R1,??DataTable4_81
   \   000023B8   0xA82B             ADD      R0,SP,#+172
   \   000023BA   0x.... 0x....      BL       strcmp
   \   000023BE   0x2800             CMP      R0,#+0
   \   000023C0   0xD113             BNE.N    ??ProcessMsg_HUACE_234
   1850          	  {
   1851          		  g_Debug.HcMsg = !g_Debug.HcMsg;
   \   000023C2   0x....             LDR.N    R0,??DataTable4_48
   \   000023C4   0x7900             LDRB     R0,[R0, #+4]
   \   000023C6   0x2800             CMP      R0,#+0
   \   000023C8   0xD101             BNE.N    ??ProcessMsg_HUACE_256
   \   000023CA   0x2001             MOVS     R0,#+1
   \   000023CC   0xE000             B.N      ??ProcessMsg_HUACE_257
   \                     ??ProcessMsg_HUACE_256:
   \   000023CE   0x2000             MOVS     R0,#+0
   \                     ??ProcessMsg_HUACE_257:
   \   000023D0   0x....             LDR.N    R1,??DataTable4_48
   \   000023D2   0x7108             STRB     R0,[R1, #+4]
   1852          		  if(g_Debug.HcMsg != 0)
   \   000023D4   0x....             LDR.N    R0,??DataTable4_48
   \   000023D6   0x7900             LDRB     R0,[R0, #+4]
   \   000023D8   0x2800             CMP      R0,#+0
   \   000023DA   0xD003             BEQ.N    ??ProcessMsg_HUACE_258
   1853          		  {
   1854          			  DebugMsg("Open g_Debug.HcMsg!\r\n");
   \   000023DC   0x....             LDR.N    R0,??DataTable4_82
   \   000023DE   0x.... 0x....      BL       DebugMsg
   \   000023E2   0xE002             B.N      ??ProcessMsg_HUACE_234
   1855          		  }
   1856          		  else
   1857          		  {
   1858          			  DebugMsg("Close g_Debug.HcMsg!\r\n");
   \                     ??ProcessMsg_HUACE_258:
   \   000023E4   0x....             LDR.N    R0,??DataTable4_83
   \   000023E6   0x.... 0x....      BL       DebugMsg
   1859          		  }	
   1860          	  }		  
   1861          	  
   1862          	  return;
   \                     ??ProcessMsg_HUACE_234:
   \   000023EA   0xE018             B.N      ??ProcessMsg_HUACE_4
   \                     ??ProcessMsg_HUACE_167:
   \   000023EC   0x........         DC32     `?<Constant "REQSTAT">`
   \   000023F0   0x........         DC32     `?<Constant "REQSTAT \\r\\n">`
   1863            }
   1864            else
   1865            {
   1866          	  if(g_Debug.HcMsg)
   \                     ??ProcessMsg_HUACE_232:
   \   000023F4   0x....             LDR.N    R0,??DataTable4_48
   \   000023F6   0x7900             LDRB     R0,[R0, #+4]
   \   000023F8   0x2800             CMP      R0,#+0
   \   000023FA   0xD00B             BEQ.N    ??ProcessMsg_HUACE_259
   1867          	  {
   1868          		  DebugMsg("********\r\n");
   \   000023FC   0x....             LDR.N    R0,??DataTable4_84
   \   000023FE   0x.... 0x....      BL       DebugMsg
   1869          		  SendOutHardware(PORT_ID_COM, (UINT8*)pMsg, Length);   
   \   00002402   0xF8BD 0x2830      LDRH     R2,[SP, #+2096]
   \   00002406   0x0021             MOVS     R1,R4
   \   00002408   0x2000             MOVS     R0,#+0
   \   0000240A   0x.... 0x....      BL       SendOutHardware
   1870          		  DebugMsg("********\r\n");
   \   0000240E   0x....             LDR.N    R0,??DataTable4_84
   \   00002410   0x.... 0x....      BL       DebugMsg
   1871          	  }
   1872          	  DebugMsg("hc msg id err !!! \r\n");
   \                     ??ProcessMsg_HUACE_259:
   \   00002414   0x....             LDR.N    R0,??DataTable4_85
   \   00002416   0x.... 0x....      BL       DebugMsg
   1873            }
   1874            
   1875            WriteFlash();
   \                     ??ProcessMsg_HUACE_9:
   \   0000241A   0x.... 0x....      BL       WriteFlash
   1876            
   1877            //*/
   1878            /*
   1879            GetField(pBuf, m, 3);
   1880            GetField(pBuf, d, 2);
   1881            g_Gps.y = atoi((const char*)y);
   1882            g_Gps.m = atoi((const char*)m);
   1883            
   1884            Uart_Init(PORT_ID_COM, cTT);
   1885            
   1886            Uart_Init(PORT_ID_GPS, cTT);// Uart1_Init(cTT);	// SelectReceiverBaudrate(iN);
   1887            
   1888            //PowerOffSys();//g_ReceiverConfig.bWorkMode = POffMode ;
   1889            CloseFile();
   1890            OSTaskDel(26);//关掉GPS任务，防止进入写文件步骤  26 是GPS的任务IDadd by xxw 20140724
   1891            WriteFlash();//add by xxw 20140724
   1892            
   1893            STimeDlyHMSM(0, 0, 1, 0);
   1894            
   1895            WriteFlash();
   1896            
   1897            */
   1898          }
   \                     ??ProcessMsg_HUACE_4:
   \   0000241E   0xF60D 0x0D34      ADDW     SP,SP,#+2100
   \   00002422   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   \   00002426   0xBF00             Nop      
   \                     ??ProcessMsg_HUACE_179:
   \   00002428   0x........         DC32     rs485_para
   \   0000242C   0x........         DC32     `?<Constant "NULL">`
   \   00002430   0x........         DC32     `?<Constant "DIST">`
   \   00002434   0x31 0x00          DC8      "1",0x0,0x0
   \              0x00 0x00    
   \   00002438   0x........         DC32     `?<Constant "TILT">`
   \   0000243C   0x........         DC32     `?<Constant "FLUX">`
   \   00002440   0x........         DC32     `?<Constant "MOVE">`
   \   00002444   0x........         DC32     `?<Constant "SOIL">`
   \   00002448   0x........         DC32     `?<Constant "ACCE">`
   \   0000244C   0x41200000         DC32     0x41200000
   1899          // Check the Checksum of the buffered command
   1900          // 校验命令
   1901          // Input：完整命令及长度（含头和尾）
   1902          // Output：校验成功返回TRUE，否则，返回FALSE.
   1903          static char CheckMsgSum(unsigned char* buff, char ComLen)
   1904          {
   1905            unsigned char iN, uCheckSum, tByte ;
   1906            
   1907            uCheckSum = 0 ;
   1908            if(ComLen < 9) return 0;
   1909            if(buff[ComLen - 2] != '\r') return 0;
   1910            if(buff[ComLen - 1] != '\n') return 0;
   1911            // ComLen 的长度为从第一个$到校验位前的一个字符
   1912            for( iN=0; iN < ComLen - 3; iN++ ) // The Command Header $$xx-- xx Command word
   1913            {
   1914              // Check the CheckSum
   1915              uCheckSum ^= buff[iN];
   1916            }
   1917            tByte = buff[ComLen - 3] ;  	 		// The Send CheckSum
   1918            if( uCheckSum != tByte ) return 0;
   1919            
   1920            return 1;
   1921          }
   1922          
   1923          

   \                                 In section .text, align 2, keep-with-next
   1924          void Uart_Init(UINT8 id, UINT8 rateT)
   1925          {
   \                     Uart_Init:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   1926            UINT32 rate;
   1927            switch(rateT)
   \   00000006   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000008   0x0028             MOVS     R0,R5
   \   0000000A   0x28B8             CMP      R0,#+184
   \   0000000C   0xD008             BEQ.N    ??Uart_Init_0
   \   0000000E   0x28EE             CMP      R0,#+238
   \   00000010   0xD00A             BEQ.N    ??Uart_Init_1
   \   00000012   0x28F7             CMP      R0,#+247
   \   00000014   0xD00C             BEQ.N    ??Uart_Init_2
   \   00000016   0x28FA             CMP      R0,#+250
   \   00000018   0xD00E             BEQ.N    ??Uart_Init_3
   \   0000001A   0x28FD             CMP      R0,#+253
   \   0000001C   0xD010             BEQ.N    ??Uart_Init_4
   \   0000001E   0xE013             B.N      ??Uart_Init_5
   1928            {
   1929            case 184:
   1930              rate = 4800;
   \                     ??Uart_Init_0:
   \   00000020   0xF44F 0x5096      MOV      R0,#+4800
   \   00000024   0x0006             MOVS     R6,R0
   1931              break;
   \   00000026   0xE012             B.N      ??Uart_Init_6
   1932            case 238:
   1933              rate = 19200;
   \                     ??Uart_Init_1:
   \   00000028   0xF44F 0x4096      MOV      R0,#+19200
   \   0000002C   0x0006             MOVS     R6,R0
   1934              break;
   \   0000002E   0xE00E             B.N      ??Uart_Init_6
   1935            case 247:
   1936              rate = 38400;
   \                     ??Uart_Init_2:
   \   00000030   0xF44F 0x4016      MOV      R0,#+38400
   \   00000034   0x0006             MOVS     R6,R0
   1937              break;
   \   00000036   0xE00A             B.N      ??Uart_Init_6
   1938            case 250:
   1939              rate = 57600;
   \                     ??Uart_Init_3:
   \   00000038   0xF44F 0x4061      MOV      R0,#+57600
   \   0000003C   0x0006             MOVS     R6,R0
   1940              break;
   \   0000003E   0xE006             B.N      ??Uart_Init_6
   1941            case 253:
   1942              rate = 115200;
   \                     ??Uart_Init_4:
   \   00000040   0xF45F 0x30E1      MOVS     R0,#+115200
   \   00000044   0x0006             MOVS     R6,R0
   1943              break;
   \   00000046   0xE002             B.N      ??Uart_Init_6
   1944            default:
   1945              rate = 9600;
   \                     ??Uart_Init_5:
   \   00000048   0xF44F 0x5016      MOV      R0,#+9600
   \   0000004C   0x0006             MOVS     R6,R0
   1946              break;
   1947            }
   1948            BSP_SerInit(id, rate);
   \                     ??Uart_Init_6:
   \   0000004E   0x0031             MOVS     R1,R6
   \   00000050   0x0020             MOVS     R0,R4
   \   00000052   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000054   0x.... 0x....      BL       BSP_SerInit
   1949            
   1950          }
   \   00000058   0xBD70             POP      {R4-R6,PC}       ;; return
   1951          
   1952          //pBuf中的数据打包到pPackBuf

   \                                 In section .text, align 2, keep-with-next
   1953          void PackedByHuace(UINT8 bMsgID, UINT8 *pBuf, UINT8 Len, UINT8 *pPackBuf, UINT8 *pPackLen)
   1954          {
   1955            /*
   1956            unsigned char i, j;
   1957            unsigned char bFirstByte, bSecondByte;
   1958            unsigned char bCheckSum;
   1959            unsigned char cTT1,cTT2;
   1960            UINT8 Route = 0x18;
   1961            
   1962            bCheckSum = 0;
   1963            bFirstByte = CommandID[bMsgID / 25];
   1964            bSecondByte = MessageID[bMsgID % 25];
   1965            
   1966            pPackBuf[0] = '$';
   1967            pPackBuf[1] = '$';
   1968            pPackBuf[2] = bFirstByte;
   1969            pPackBuf[3] = bSecondByte;
   1970            
   1971            cTT1 = (Route>>4)&0x0F;
   1972            cTT2 = (Route<<4)&0xF0;
   1973            pPackBuf[4] = cTT1|cTT2;
   1974            pPackBuf[5] = Len;
   1975            
   1976            for(j = 0; j < 6; j++)
   1977            bCheckSum ^= pPackBuf[j];
   1978            for(i = 0, j = 6; i < Len; i++, j++)
   1979            {
   1980            pPackBuf[j] = pBuf[i];
   1981            bCheckSum ^= pPackBuf[j];
   1982          }
   1983            pPackBuf[j++] = bCheckSum;
   1984            pPackBuf[j++] = 0x0D;
   1985            pPackBuf[j++] = 0x0A;
   1986            *pPackLen = j;
   1987            */
   1988          }
   \                     PackedByHuace:
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0xE000ED0C         DC32     0xe000ed0c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x05FA0004         DC32     0x5fa0004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     g_Debug

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     `?<Constant "huace buffer overflow...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     rs232_para

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     g_Byte128

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     bd_para

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     g_RtuStatus

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     `?<Constant "GPRS">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     `?<Constant "AUTO">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     `?<Constant "4800">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     `?<Constant "9600">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     `?<Constant "19200">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     `?<Constant "57600">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     `?<Constant "115200">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x........         DC32     `?<Constant "38400">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x........         DC32     `?<Constant "SLEEP">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x........         DC32     `?<Constant "WAKE">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x........         DC32     `?<Constant "HANZI">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \   00000000   0x........         DC32     HardvareVersion

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_20:
   \   00000000   0x........         DC32     `?<Constant "V1.3">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_21:
   \   00000000   0x........         DC32     `?<Constant "V1.1">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_22:
   \   00000000   0x........         DC32     g_RtuStatus+0x6B

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_23:
   \   00000000   0x........         DC32     `?<Constant "$0,REQCONF,RTUID:%s,C...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_24:
   \   00000000   0x........         DC32     rs485_para

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_25:
   \   00000000   0x447A0000         DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_26:
   \   00000000   0x........         DC32     rs485_para+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_27:
   \   00000000   0x........         DC32     sensor_type_table

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_28:
   \   00000000   0x........         DC32     `?<Constant "RS485:%s;%d;%d;%d;%s;...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_29:
   \   00000000   0x........         DC32     adc0_para

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_30:
   \   00000000   0x........         DC32     adc0_para+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_31:
   \   00000000   0x........         DC32     `?<Constant "ADC1:%s;%d;%d;%s;%c;,">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_32:
   \   00000000   0x........         DC32     `?<Constant "ADC1:%s;%d;%d;%s;%c%d...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_33:
   \   00000000   0x........         DC32     adc1_para

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_34:
   \   00000000   0x........         DC32     adc1_para+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_35:
   \   00000000   0x........         DC32     `?<Constant "ADC2:%s;%d;%d;%s;%c;,">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_36:
   \   00000000   0x........         DC32     `?<Constant "ADC2:%s;%d;%d;%s;%c%d...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_37:
   \   00000000   0x........         DC32     adc2_para

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_38:
   \   00000000   0x........         DC32     adc2_para+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_39:
   \   00000000   0x........         DC32     `?<Constant "ADC3:%s;%d;%d;%s;%c;,">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_40:
   \   00000000   0x........         DC32     `?<Constant "ADC3:%s;%d;%d;%s;%c%d...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_41:
   \   00000000   0x........         DC32     rs232_para+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_42:
   \   00000000   0x........         DC32     `?<Constant "RS232:%s;%d;%d;%s;,">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_43:
   \   00000000   0x........         DC32     pwm_para+0x10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_44:
   \   00000000   0x........         DC32     pwm_para

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_45:
   \   00000000   0x........         DC32     `?<Constant "PWM:%s;%d;%s;\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     `?<Constant "$0,REPSTAT,POWER:%c%d...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     `?<Constant "HISDAT">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x00E4E1C1         DC32     0xe4e1c1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     `?<Constant "No History Data \\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x00E4E1C0         DC32     0xe4e1c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     `?<Constant "DIRCMD">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     `?<Constant "DIRCMD \\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     `?<Constant "senser not support\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     `?<Constant "$0,DIRCMD\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     `?<Constant "REBOOT">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     `?<Constant "REBOOT \\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x........         DC32     `?<Constant "RTUID">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x........         DC32     `?<Constant "RTUID \\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x........         DC32     `?<Constant "rtuid len err!!!\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x........         DC32     g_RtuConfig

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x........         DC32     g_Byte128

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \   00000000   0x........         DC32     `?<Constant "HEART">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_17:
   \   00000000   0x........         DC32     g_SetRTCCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_18:
   \   00000000   0x........         DC32     `?<Constant "heart tm  err !!!\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_19:
   \   00000000   0x........         DC32     `?<Constant "BDBAUD">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_20:
   \   00000000   0x........         DC32     `?<Constant "BDBAUD \\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_21:
   \   00000000   0x........         DC32     bd_para

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_22:
   \   00000000   0x........         DC32     `?<Constant "RTCSET">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_23:
   \   00000000   0x........         DC32     `?<Constant "RTCSET \\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_24:
   \   00000000   0x........         DC32     `?<Constant "SNSET">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_25:
   \   00000000   0x........         DC32     `?<Constant "SNSET \\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_26:
   \   00000000   0x........         DC32     g_RtuStatus+0x6B

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_27:
   \   00000000   0x........         DC32     g_Byte128+0x1A8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_28:
   \   00000000   0x........         DC32     `?<Constant "REFILE">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_29:
   \   00000000   0x........         DC32     `?<Constant "admin REFILE \\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_30:
   \   00000000   0x40024048         DC32     0x40024048

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_31:
   \   00000000   0x4002404C         DC32     0x4002404c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_32:
   \   00000000   0x........         DC32     `?<Constant "REQIC">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_33:
   \   00000000   0x........         DC32     `?<Constant "admin REQIC \\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_34:
   \   00000000   0x........         DC32     g_RtuStatus

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_35:
   \   00000000   0x........         DC32     `?<Constant "own IC:%6d\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_36:
   \   00000000   0x........         DC32     `?<Constant "REQRTC">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_37:
   \   00000000   0x........         DC32     `?<Constant "admin REQRTC \\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_38:
   \   00000000   0x........         DC32     `?<Constant "$0,REQRTC,%04d-%02d-%...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_39:
   \   00000000   0x........         DC32     `?<Constant "REQSN">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_40:
   \   00000000   0x........         DC32     `?<Constant "admin REQSN \\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_41:
   \   00000000   0x........         DC32     `?<Constant "$0,REQSN,%s\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_42:
   \   00000000   0x........         DC32     `?<Constant "REQTEMP">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_43:
   \   00000000   0x........         DC32     `?<Constant "admin REQTEMP \\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_44:
   \   00000000   0x........         DC32     `?<Constant "%c%d.%01d degree \\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_45:
   \   00000000   0x........         DC32     `?<Constant "DEBUG">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_46:
   \   00000000   0x........         DC32     `?<Constant "admin DEBUG \\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_47:
   \   00000000   0x........         DC32     `?<Constant "GPRS">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_48:
   \   00000000   0x........         DC32     g_Debug

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_49:
   \   00000000   0x........         DC32     `?<Constant "GprsDataShow open!\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_50:
   \   00000000   0x........         DC32     `?<Constant "GprsDataShow close!\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_51:
   \   00000000   0x........         DC32     `?<Constant "TLIT">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_52:
   \   00000000   0x........         DC32     g_bPrintDataFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_53:
   \   00000000   0x........         DC32     `?<Constant "Open Uart data show!\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_54:
   \   00000000   0x........         DC32     `?<Constant "Close Uart data show!\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_55:
   \   00000000   0x........         DC32     `?<Constant "STAT">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_56:
   \   00000000   0x........         DC32     Telit_Connection_State

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_57:
   \   00000000   0x........         DC32     `?<Constant "Telit_Connection_Stat...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_58:
   \   00000000   0x........         DC32     g_bMoudule_Initialized_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_59:
   \   00000000   0x........         DC32     `?<Constant "g_bMoudule_Initialize...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_60:
   \   00000000   0x........         DC32     Common_Connection_State

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_61:
   \   00000000   0x........         DC32     `?<Constant "Common_Connection_Sta...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_62:
   \   00000000   0x........         DC32     Current_State

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_63:
   \   00000000   0x........         DC32     `?<Constant "Current_State:%d\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_64:
   \   00000000   0x........         DC32     g_bModuleRestartFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_65:
   \   00000000   0x........         DC32     `?<Constant "g_bModuleRestartFlag:...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_66:
   \   00000000   0x........         DC32     Module_Type

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_67:
   \   00000000   0x........         DC32     `?<Constant "Module_Type:%d\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_68:
   \   00000000   0x........         DC32     Timer_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_69:
   \   00000000   0x........         DC32     `?<Constant "Timer_Flag.Wait_Time_...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_70:
   \   00000000   0x........         DC32     `?<Constant "Timer_Flag.TimeOut_Cn...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_71:
   \   00000000   0x........         DC32     `?<Constant "g_RtuStatus.gprs:%d\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_72:
   \   00000000   0x........         DC32     `?<Constant "STEP">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_73:
   \   00000000   0x........         DC32     `?<Constant "Open g_Debug.Footstep!\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_74:
   \   00000000   0x........         DC32     `?<Constant "Close g_Debug.Footste...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_75:
   \   00000000   0x........         DC32     `?<Constant "IFSTUCK">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_76:
   \   00000000   0x........         DC32     `?<Constant "Open g_Debug.Footstep...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_77:
   \   00000000   0x........         DC32     `?<Constant "Close g_Debug.Footste...">_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_78:
   \   00000000   0x........         DC32     `?<Constant "SDSHOW">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_79:
   \   00000000   0x........         DC32     `?<Constant "Open g_Debug.Sendshow!\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_80:
   \   00000000   0x........         DC32     `?<Constant "Close g_Debug.Sendsho...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_81:
   \   00000000   0x........         DC32     `?<Constant "HCMSG">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_82:
   \   00000000   0x........         DC32     `?<Constant "Open g_Debug.HcMsg!\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_83:
   \   00000000   0x........         DC32     `?<Constant "Close g_Debug.HcMsg!\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_84:
   \   00000000   0x........         DC32     `?<Constant "********\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_85:
   \   00000000   0x........         DC32     `?<Constant "hc msg id err !!! \\r\\n">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "********\\r\\n">`:
   \   00000000   0x2A 0x2A          DC8 "********\015\012"
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "huace buffer overflow...">`:
   \   00000000   0x68 0x75          DC8 "huace buffer overflow MsgTmp !!!\015\012"
   \              0x61 0x63    
   \              0x65 0x20    
   \              0x62 0x75    
   \              0x66 0x66    
   \              0x65 0x72    
   \              0x20 0x6F    
   \              0x76 0x65    
   \              0x72 0x66    
   \              0x6C 0x6F    
   \              0x77 0x20    
   \              0x4D 0x73    
   \              0x67 0x54    
   \              0x6D 0x70    
   \              0x20 0x21    
   \              0x21 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x42 0x44          DC8 "BD"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "GPRS">`:
   \   00000000   0x47 0x50          DC8 "GPRS"
   \              0x52 0x53    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "AUTO">`:
   \   00000000   0x41 0x55          DC8 "AUTO"
   \              0x54 0x4F    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "4800">`:
   \   00000000   0x34 0x38          DC8 "4800"
   \              0x30 0x30    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "9600">`:
   \   00000000   0x39 0x36          DC8 "9600"
   \              0x30 0x30    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "19200">`:
   \   00000000   0x31 0x39          DC8 "19200"
   \              0x32 0x30    
   \              0x30 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "57600">`:
   \   00000000   0x35 0x37          DC8 "57600"
   \              0x36 0x30    
   \              0x30 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "115200">`:
   \   00000000   0x31 0x31          DC8 "115200"
   \              0x35 0x32    
   \              0x30 0x30    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "38400">`:
   \   00000000   0x33 0x38          DC8 "38400"
   \              0x34 0x30    
   \              0x30 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SLEEP">`:
   \   00000000   0x53 0x4C          DC8 "SLEEP"
   \              0x45 0x45    
   \              0x50 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "WAKE">`:
   \   00000000   0x57 0x41          DC8 "WAKE"
   \              0x4B 0x45    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x32 0x2E          DC8 "2.5"
   \              0x35 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x34 0x2E          DC8 "4.0"
   \              0x30 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "HANZI">`:
   \   00000000   0x48 0x41          DC8 "HANZI"
   \              0x4E 0x5A    
   \              0x49 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x42 0x43          DC8 "BCD"
   \              0x44 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "V1.3">`:
   \   00000000   0x56 0x31          DC8 "V1.3"
   \              0x2E 0x33    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "V1.1">`:
   \   00000000   0x56 0x31          DC8 "V1.1"
   \              0x2E 0x31    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "$0,REQCONF,RTUID:%s,C...">`:
   \   00000000   0x24 0x30          DC8 24H, 30H, 2CH, 52H, 45H, 51H, 43H, 4FH
   \              0x2C 0x52    
   \              0x45 0x51    
   \              0x43 0x4F    
   \   00000008   0x4E 0x46          DC8 4EH, 46H, 2CH, 52H, 54H, 55H, 49H, 44H
   \              0x2C 0x52    
   \              0x54 0x55    
   \              0x49 0x44    
   \   00000010   0x3A 0x25          DC8 3AH, 25H, 73H, 2CH, 43H, 4FH, 4DH, 4DH
   \              0x73 0x2C    
   \              0x43 0x4F    
   \              0x4D 0x4D    
   \   00000018   0x4F 0x44          DC8 4FH, 44H, 3AH, 25H, 73H, 2CH, 44H, 53H
   \              0x3A 0x25    
   \              0x73 0x2C    
   \              0x44 0x53    
   \   00000020   0x54 0x49          DC8 54H, 49H, 50H, 3AH, 25H, 64H, 2EH, 25H
   \              0x50 0x3A    
   \              0x25 0x64    
   \              0x2E 0x25    
   \   00000028   0x64 0x2E          DC8 64H, 2EH, 25H, 64H, 2EH, 25H, 64H, 3AH
   \              0x25 0x64    
   \              0x2E 0x25    
   \              0x64 0x3A    
   \   00000030   0x25 0x64          DC8 25H, 64H, 2CH, 52H, 41H, 49H, 4EH, 46H
   \              0x2C 0x52    
   \              0x41 0x49    
   \              0x4E 0x46    
   \   00000038   0x52 0x51          DC8 52H, 51H, 3AH, 25H, 64H, 2CH, 55H, 53H
   \              0x3A 0x25    
   \              0x64 0x2C    
   \              0x55 0x53    
   \   00000040   0x52 0x42          DC8 52H, 42H, 41H, 55H, 44H, 3AH, 25H, 73H
   \              0x41 0x55    
   \              0x44 0x3A    
   \              0x25 0x73    
   \   00000048   0x2C 0x50          DC8 2CH, 50H, 57H, 4DH, 4FH, 44H, 3AH, 25H
   \              0x57 0x4D    
   \              0x4F 0x44    
   \              0x3A 0x25    
   \   00000050   0x73 0x2C          DC8 73H, 2CH, 52H, 41H, 49H, 4EH, 52H, 45H
   \              0x52 0x41    
   \              0x49 0x4E    
   \              0x52 0x45    
   \   00000058   0x53 0x4F          DC8 53H, 4FH, 4CH, 3AH, 25H, 64H, 2EH, 25H
   \              0x4C 0x3A    
   \              0x25 0x64    
   \              0x2E 0x25    
   \   00000060   0x64 0x2C          DC8 64H, 2CH, 53H, 4EH, 3AH, 25H, 73H, 2CH
   \              0x53 0x4E    
   \              0x3A 0x25    
   \              0x73 0x2C    
   \   00000068   0x56 0x45          DC8 56H, 45H, 52H, 3AH, 25H, 73H, 2CH, 52H
   \              0x52 0x3A    
   \              0x25 0x73    
   \              0x2C 0x52    
   \   00000070   0x53 0x32          DC8 53H, 32H, 33H, 32H, 2DH, 42H, 44H, 53H
   \              0x33 0x32    
   \              0x2D 0x42    
   \              0x44 0x53    
   \   00000078   0x3A 0x30          DC8 3AH, 30H, 3BH, 25H, 73H, 3BH, 25H, 73H
   \              0x3B 0x25    
   \              0x73 0x3B    
   \              0x25 0x73    
   \   00000080   0x3B 0x25          DC8 3BH, 25H, 64H, 3BH, 25H, 73H, 3BH, 25H
   \              0x64 0x3B    
   \              0x25 0x73    
   \              0x3B 0x25    
   \   00000088   0x36 0x64          DC8 36H, 64H, 2CH, 0
   \              0x2C 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "RS485:%s;%d;%d;%d;%s;...">`:
   \   00000000   0x52 0x53          DC8 "RS485:%s;%d;%d;%d;%s;%c%d.%03d;%c%d.%03d;,"
   \              0x34 0x38    
   \              0x35 0x3A    
   \              0x25 0x73    
   \              0x3B 0x25    
   \              0x64 0x3B    
   \              0x25 0x64    
   \              0x3B 0x25    
   \              0x64 0x3B    
   \              0x25 0x73    
   \              0x3B 0x25    
   \              0x63 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x3B 0x25    
   \              0x63 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x3B 0x2C    
   \              0x00         
   \   0000002B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ADC1:%s;%d;%d;%s;%c;,">`:
   \   00000000   0x41 0x44          DC8 "ADC1:%s;%d;%d;%s;%c;,"
   \              0x43 0x31    
   \              0x3A 0x25    
   \              0x73 0x3B    
   \              0x25 0x64    
   \              0x3B 0x25    
   \              0x64 0x3B    
   \              0x25 0x73    
   \              0x3B 0x25    
   \              0x63 0x3B    
   \              0x2C 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ADC1:%s;%d;%d;%s;%c%d...">`:
   \   00000000   0x41 0x44          DC8 "ADC1:%s;%d;%d;%s;%c%d.%03d;%c%d.%03d;,"
   \              0x43 0x31    
   \              0x3A 0x25    
   \              0x73 0x3B    
   \              0x25 0x64    
   \              0x3B 0x25    
   \              0x64 0x3B    
   \              0x25 0x73    
   \              0x3B 0x25    
   \              0x63 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x3B 0x25    
   \              0x63 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x3B 0x2C    
   \              0x00         
   \   00000027   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ADC2:%s;%d;%d;%s;%c;,">`:
   \   00000000   0x41 0x44          DC8 "ADC2:%s;%d;%d;%s;%c;,"
   \              0x43 0x32    
   \              0x3A 0x25    
   \              0x73 0x3B    
   \              0x25 0x64    
   \              0x3B 0x25    
   \              0x64 0x3B    
   \              0x25 0x73    
   \              0x3B 0x25    
   \              0x63 0x3B    
   \              0x2C 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ADC2:%s;%d;%d;%s;%c%d...">`:
   \   00000000   0x41 0x44          DC8 "ADC2:%s;%d;%d;%s;%c%d.%03d;%c%d.%03d;,"
   \              0x43 0x32    
   \              0x3A 0x25    
   \              0x73 0x3B    
   \              0x25 0x64    
   \              0x3B 0x25    
   \              0x64 0x3B    
   \              0x25 0x73    
   \              0x3B 0x25    
   \              0x63 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x3B 0x25    
   \              0x63 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x3B 0x2C    
   \              0x00         
   \   00000027   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ADC3:%s;%d;%d;%s;%c;,">`:
   \   00000000   0x41 0x44          DC8 "ADC3:%s;%d;%d;%s;%c;,"
   \              0x43 0x33    
   \              0x3A 0x25    
   \              0x73 0x3B    
   \              0x25 0x64    
   \              0x3B 0x25    
   \              0x64 0x3B    
   \              0x25 0x73    
   \              0x3B 0x25    
   \              0x63 0x3B    
   \              0x2C 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ADC3:%s;%d;%d;%s;%c%d...">`:
   \   00000000   0x41 0x44          DC8 "ADC3:%s;%d;%d;%s;%c%d.%03d;%c%d.%03d;,"
   \              0x43 0x33    
   \              0x3A 0x25    
   \              0x73 0x3B    
   \              0x25 0x64    
   \              0x3B 0x25    
   \              0x64 0x3B    
   \              0x25 0x73    
   \              0x3B 0x25    
   \              0x63 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x3B 0x25    
   \              0x63 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x3B 0x2C    
   \              0x00         
   \   00000027   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "RS232:%s;%d;%d;%s;,">`:
   \   00000000   0x52 0x53          DC8 "RS232:%s;%d;%d;%s;,"
   \              0x32 0x33    
   \              0x32 0x3A    
   \              0x25 0x73    
   \              0x3B 0x25    
   \              0x64 0x3B    
   \              0x25 0x64    
   \              0x3B 0x25    
   \              0x73 0x3B    
   \              0x2C 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "PWM:%s;%d;%s;\\r\\n">`:
   \   00000000   0x50 0x57          DC8 "PWM:%s;%d;%s;\015\012"
   \              0x4D 0x3A    
   \              0x25 0x73    
   \              0x3B 0x25    
   \              0x64 0x3B    
   \              0x25 0x73    
   \              0x3B 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000021   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x24 0x30          DC8 "$0"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "hc msg err !!! \\r\\n">`:
   \   00000000   0x68 0x63          DC8 "hc msg err !!! \015\012"
   \              0x20 0x6D    
   \              0x73 0x67    
   \              0x20 0x65    
   \              0x72 0x72    
   \              0x20 0x21    
   \              0x21 0x21    
   \              0x20 0x0D    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "COMMOD">`:
   \   00000000   0x43 0x4F          DC8 "COMMOD"
   \              0x4D 0x4D    
   \              0x4F 0x44    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "COMMOD need reboot\\r\\n">`:
   \   00000000   0x43 0x4F          DC8 "COMMOD need reboot\015\012"
   \              0x4D 0x4D    
   \              0x4F 0x44    
   \              0x20 0x6E    
   \              0x65 0x65    
   \              0x64 0x20    
   \              0x72 0x65    
   \              0x62 0x6F    
   \              0x6F 0x74    
   \              0x0D 0x0A    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "DSTIC">`:
   \   00000000   0x44 0x53          DC8 "DSTIC"
   \              0x54 0x49    
   \              0x43 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "DSTIC \\r\\n">`:
   \   00000000   0x44 0x53          DC8 "DSTIC \015\012"
   \              0x54 0x49    
   \              0x43 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "DSTIP">`:
   \   00000000   0x44 0x53          DC8 "DSTIP"
   \              0x54 0x49    
   \              0x50 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "DSTIP need reboot\\r\\n">`:
   \   00000000   0x44 0x53          DC8 "DSTIP need reboot\015\012"
   \              0x54 0x49    
   \              0x50 0x20    
   \              0x6E 0x65    
   \              0x65 0x64    
   \              0x20 0x72    
   \              0x65 0x62    
   \              0x6F 0x6F    
   \              0x74 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "%s\\r\\n">`:
   \   00000000   0x25 0x73          DC8 "%s\015\012"
   \              0x0D 0x0A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "TERMCONF">`:
   \   00000000   0x54 0x45          DC8 "TERMCONF"
   \              0x52 0x4D    
   \              0x43 0x4F    
   \              0x4E 0x46    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "admin TERMCONF\\r\\n">`:
   \   00000000   0x61 0x64          DC8 "admin TERMCONF\015\012"
   \              0x6D 0x69    
   \              0x6E 0x20    
   \              0x54 0x45    
   \              0x52 0x4D    
   \              0x43 0x4F    
   \              0x4E 0x46    
   \              0x0D 0x0A    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "RAINFRQ">`:
   \   00000000   0x52 0x41          DC8 "RAINFRQ"
   \              0x49 0x4E    
   \              0x46 0x52    
   \              0x51 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "RAINFRQ \\r\\n">`:
   \   00000000   0x52 0x41          DC8 "RAINFRQ \015\012"
   \              0x49 0x4E    
   \              0x46 0x52    
   \              0x51 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "USRBAUD">`:
   \   00000000   0x55 0x53          DC8 "USRBAUD"
   \              0x52 0x42    
   \              0x41 0x55    
   \              0x44 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "USRBAUD \\r\\n">`:
   \   00000000   0x55 0x53          DC8 "USRBAUD \015\012"
   \              0x52 0x42    
   \              0x41 0x55    
   \              0x44 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "PWMOD">`:
   \   00000000   0x50 0x57          DC8 "PWMOD"
   \              0x4D 0x4F    
   \              0x44 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "PWMOD \\r\\n">`:
   \   00000000   0x50 0x57          DC8 "PWMOD \015\012"
   \              0x4D 0x4F    
   \              0x44 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "RAINRESOL">`:
   \   00000000   0x52 0x41          DC8 "RAINRESOL"
   \              0x49 0x4E    
   \              0x52 0x45    
   \              0x53 0x4F    
   \              0x4C 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "RAINRESOL \\r\\n">`:
   \   00000000   0x52 0x41          DC8 "RAINRESOL \015\012"
   \              0x49 0x4E    
   \              0x52 0x45    
   \              0x53 0x4F    
   \              0x4C 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "PORTCFG">`:
   \   00000000   0x50 0x4F          DC8 "PORTCFG"
   \              0x52 0x54    
   \              0x43 0x46    
   \              0x47 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "RS485">`:
   \   00000000   0x52 0x53          DC8 "RS485"
   \              0x34 0x38    
   \              0x35 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ADC1">`:
   \   00000000   0x41 0x44          DC8 "ADC1"
   \              0x43 0x31    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "ADC2">`:
   \   00000000   0x41 0x44          DC8 "ADC2"
   \              0x43 0x32    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "ADC3">`:
   \   00000000   0x41 0x44          DC8 "ADC3"
   \              0x43 0x33    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "RS232">`:
   \   00000000   0x52 0x53          DC8 "RS232"
   \              0x32 0x33    
   \              0x32 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "IO-INPUT">`:
   \   00000000   0x49 0x4F          DC8 "IO-INPUT"
   \              0x2D 0x49    
   \              0x4E 0x50    
   \              0x55 0x54    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "RS232-BDS">`:
   \   00000000   0x52 0x53          DC8 "RS232-BDS"
   \              0x32 0x33    
   \              0x32 0x2D    
   \              0x42 0x44    
   \              0x53 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x50 0x57          DC8 "PWM"
   \              0x4D 0x00    

   \                                 In section .rodata, align 2
   \   00000000   0x31 0x00          DC8 "1"

   \                                 In section .rodata, align 2
   \   00000000   0x32 0x00          DC8 "2"

   \                                 In section .rodata, align 4
   \                     `?<Constant "REQCONF">`:
   \   00000000   0x52 0x45          DC8 "REQCONF"
   \              0x51 0x43    
   \              0x4F 0x4E    
   \              0x46 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "REQCONF \\r\\n">`:
   \   00000000   0x52 0x45          DC8 "REQCONF \015\012"
   \              0x51 0x43    
   \              0x4F 0x4E    
   \              0x46 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "REQRAINDAT">`:
   \   00000000   0x52 0x45          DC8 "REQRAINDAT"
   \              0x51 0x52    
   \              0x41 0x49    
   \              0x4E 0x44    
   \              0x41 0x54    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "REQRAINDAT\\r\\n">`:
   \   00000000   0x52 0x45          DC8 "REQRAINDAT\015\012"
   \              0x51 0x52    
   \              0x41 0x49    
   \              0x4E 0x44    
   \              0x41 0x54    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "$0,%s,%04d%02d%02d,%0...">`:
   \   00000000   0x24 0x30          DC8 "$0,%s,%04d%02d%02d,%02d%02d%02d,%d,,%s,*"
   \              0x2C 0x25    
   \              0x73 0x2C    
   \              0x25 0x30    
   \              0x34 0x64    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x2C 0x25    
   \              0x30 0x32    
   \              0x64 0x25    
   \              0x30 0x32    
   \              0x64 0x25    
   \              0x30 0x32    
   \              0x64 0x2C    
   \              0x25 0x64    
   \              0x2C 0x2C    
   \              0x25 0x73    
   \              0x2C 0x2A    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "%s%02X\\r\\n">`:
   \   00000000   0x25 0x73          DC8 "%s%02X\015\012"
   \              0x25 0x30    
   \              0x32 0x58    
   \              0x0D 0x0A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "REQDISTDAT">`:
   \   00000000   0x52 0x45          DC8 "REQDISTDAT"
   \              0x51 0x44    
   \              0x49 0x53    
   \              0x54 0x44    
   \              0x41 0x54    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "REQDISTDAT\\r\\n">`:
   \   00000000   0x52 0x45          DC8 "REQDISTDAT\015\012"
   \              0x51 0x44    
   \              0x49 0x53    
   \              0x54 0x44    
   \              0x41 0x54    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "TEMPDAT">`:
   \   00000000   0x54 0x45          DC8 "TEMPDAT"
   \              0x4D 0x50    
   \              0x44 0x41    
   \              0x54 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "%s,%d">`:
   \   00000000   0x25 0x73          DC8 "%s,%d"
   \              0x2C 0x25    
   \              0x64 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "$0,%s,%04d%02d%02d,%0...">_1`:
   \   00000000   0x24 0x30          DC8 "$0,%s,%04d%02d%02d,%02d%02d%02d,%d,,%s,%d,,%c,*"
   \              0x2C 0x25    
   \              0x73 0x2C    
   \              0x25 0x30    
   \              0x34 0x64    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x2C 0x25    
   \              0x30 0x32    
   \              0x64 0x25    
   \              0x30 0x32    
   \              0x64 0x25    
   \              0x30 0x32    
   \              0x64 0x2C    
   \              0x25 0x64    
   \              0x2C 0x2C    
   \              0x25 0x73    
   \              0x2C 0x25    
   \              0x64 0x2C    
   \              0x2C 0x25    
   \              0x63 0x2C    
   \              0x2A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "$0,%s,%04d%02d%02d,%0...">_2`:
   \   00000000   0x24 0x30          DC8 24H, 30H, 2CH, 25H, 73H, 2CH, 25H, 30H
   \              0x2C 0x25    
   \              0x73 0x2C    
   \              0x25 0x30    
   \   00000008   0x34 0x64          DC8 34H, 64H, 25H, 30H, 32H, 64H, 25H, 30H
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x25 0x30    
   \   00000010   0x32 0x64          DC8 32H, 64H, 2CH, 25H, 30H, 32H, 64H, 25H
   \              0x2C 0x25    
   \              0x30 0x32    
   \              0x64 0x25    
   \   00000018   0x30 0x32          DC8 30H, 32H, 64H, 25H, 30H, 32H, 64H, 2CH
   \              0x64 0x25    
   \              0x30 0x32    
   \              0x64 0x2C    
   \   00000020   0x25 0x64          DC8 25H, 64H, 2CH, 2CH, 25H, 73H, 2CH, 25H
   \              0x2C 0x2C    
   \              0x25 0x73    
   \              0x2C 0x25    
   \   00000028   0x64 0x2C          DC8 64H, 2CH, 25H, 63H, 25H, 64H, 2EH, 25H
   \              0x25 0x63    
   \              0x25 0x64    
   \              0x2E 0x25    
   \   00000030   0x30 0x33          DC8 30H, 33H, 64H, 2CH, 25H, 63H, 2CH, 2AH
   \              0x64 0x2C    
   \              0x25 0x63    
   \              0x2C 0x2A    
   \   00000038   0x00               DC8 0
   \   00000039   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "$0,%s,%04d%02d%02d,%0...">_3`:
   \   00000000   0x24 0x30          DC8 24H, 30H, 2CH, 25H, 73H, 2CH, 25H, 30H
   \              0x2C 0x25    
   \              0x73 0x2C    
   \              0x25 0x30    
   \   00000008   0x34 0x64          DC8 34H, 64H, 25H, 30H, 32H, 64H, 25H, 30H
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x25 0x30    
   \   00000010   0x32 0x64          DC8 32H, 64H, 2CH, 25H, 30H, 32H, 64H, 25H
   \              0x2C 0x25    
   \              0x30 0x32    
   \              0x64 0x25    
   \   00000018   0x30 0x32          DC8 30H, 32H, 64H, 25H, 30H, 32H, 64H, 2CH
   \              0x64 0x25    
   \              0x30 0x32    
   \              0x64 0x2C    
   \   00000020   0x25 0x64          DC8 25H, 64H, 2CH, 2CH, 25H, 73H, 2CH, 25H
   \              0x2C 0x2C    
   \              0x25 0x73    
   \              0x2C 0x25    
   \   00000028   0x64 0x2C          DC8 64H, 2CH, 2CH, 25H, 63H, 25H, 64H, 2EH
   \              0x2C 0x25    
   \              0x63 0x25    
   \              0x64 0x2E    
   \   00000030   0x25 0x30          DC8 25H, 30H, 33H, 64H, 2CH, 25H, 63H, 25H
   \              0x33 0x64    
   \              0x2C 0x25    
   \              0x63 0x25    
   \   00000038   0x64 0x2E          DC8 64H, 2EH, 25H, 30H, 33H, 64H, 2CH, 2AH
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x2C 0x2A    
   \   00000040   0x00               DC8 0
   \   00000041   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "$0,%s,%04d%02d%02d,%0...">_4`:
   \   00000000   0x24 0x30          DC8 24H, 30H, 2CH, 25H, 73H, 2CH, 25H, 30H
   \              0x2C 0x25    
   \              0x73 0x2C    
   \              0x25 0x30    
   \   00000008   0x34 0x64          DC8 34H, 64H, 25H, 30H, 32H, 64H, 25H, 30H
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x25 0x30    
   \   00000010   0x32 0x64          DC8 32H, 64H, 2CH, 25H, 30H, 32H, 64H, 25H
   \              0x2C 0x25    
   \              0x30 0x32    
   \              0x64 0x25    
   \   00000018   0x30 0x32          DC8 30H, 32H, 64H, 25H, 30H, 32H, 64H, 2CH
   \              0x64 0x25    
   \              0x30 0x32    
   \              0x64 0x2C    
   \   00000020   0x25 0x64          DC8 25H, 64H, 2CH, 2CH, 25H, 73H, 2CH, 25H
   \              0x2C 0x2C    
   \              0x25 0x73    
   \              0x2C 0x25    
   \   00000028   0x64 0x2C          DC8 64H, 2CH, 25H, 63H, 25H, 64H, 2EH, 25H
   \              0x25 0x63    
   \              0x25 0x64    
   \              0x2E 0x25    
   \   00000030   0x30 0x33          DC8 30H, 33H, 64H, 2CH, 25H, 63H, 25H, 64H
   \              0x64 0x2C    
   \              0x25 0x63    
   \              0x25 0x64    
   \   00000038   0x2E 0x25          DC8 2EH, 25H, 30H, 33H, 64H, 2CH, 25H, 63H
   \              0x30 0x33    
   \              0x64 0x2C    
   \              0x25 0x63    
   \   00000040   0x25 0x64          DC8 25H, 64H, 2EH, 25H, 30H, 33H, 64H, 2CH
   \              0x2E 0x25    
   \              0x30 0x33    
   \              0x64 0x2C    
   \   00000048   0x2A 0x00          DC8 2AH, 0
   \   0000004A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "REQSTAT">`:
   \   00000000   0x52 0x45          DC8 "REQSTAT"
   \              0x51 0x53    
   \              0x54 0x41    
   \              0x54 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "REQSTAT \\r\\n">`:
   \   00000000   0x52 0x45          DC8 "REQSTAT \015\012"
   \              0x51 0x53    
   \              0x54 0x41    
   \              0x54 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x4F 0x4B          DC8 "OK"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x45 0x52          DC8 "ERR"
   \              0x52 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "NULL">`:
   \   00000000   0x4E 0x55          DC8 "NULL"
   \              0x4C 0x4C    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "DIST">`:
   \   00000000   0x44 0x49          DC8 "DIST"
   \              0x53 0x54    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "TILT">`:
   \   00000000   0x54 0x49          DC8 "TILT"
   \              0x4C 0x54    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "FLUX">`:
   \   00000000   0x46 0x4C          DC8 "FLUX"
   \              0x55 0x58    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "MOVE">`:
   \   00000000   0x4D 0x4F          DC8 "MOVE"
   \              0x56 0x45    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "SOIL">`:
   \   00000000   0x53 0x4F          DC8 "SOIL"
   \              0x49 0x4C    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "ACCE">`:
   \   00000000   0x41 0x43          DC8 "ACCE"
   \              0x43 0x45    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "$0,REPSTAT,POWER:%c%d...">`:
   \   00000000   0x24 0x30          DC8 24H, 30H, 2CH, 52H, 45H, 50H, 53H, 54H
   \              0x2C 0x52    
   \              0x45 0x50    
   \              0x53 0x54    
   \   00000008   0x41 0x54          DC8 41H, 54H, 2CH, 50H, 4FH, 57H, 45H, 52H
   \              0x2C 0x50    
   \              0x4F 0x57    
   \              0x45 0x52    
   \   00000010   0x3A 0x25          DC8 3AH, 25H, 63H, 25H, 64H, 2EH, 25H, 30H
   \              0x63 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \   00000018   0x31 0x64          DC8 31H, 64H, 2CH, 54H, 45H, 4DH, 50H, 3AH
   \              0x2C 0x54    
   \              0x45 0x4D    
   \              0x50 0x3A    
   \   00000020   0x25 0x63          DC8 25H, 63H, 25H, 64H, 2EH, 25H, 30H, 31H
   \              0x25 0x64    
   \              0x2E 0x25    
   \              0x30 0x31    
   \   00000028   0x64 0x2C          DC8 64H, 2CH, 47H, 50H, 52H, 53H, 3AH, 25H
   \              0x47 0x50    
   \              0x52 0x53    
   \              0x3A 0x25    
   \   00000030   0x73 0x2C          DC8 73H, 2CH, 42H, 44H, 3AH, 25H, 73H, 2CH
   \              0x42 0x44    
   \              0x3A 0x25    
   \              0x73 0x2C    
   \   00000038   0x52 0x41          DC8 52H, 41H, 49H, 4EH, 3AH, 25H, 73H, 2CH
   \              0x49 0x4E    
   \              0x3A 0x25    
   \              0x73 0x2C    
   \   00000040   0x25 0x73          DC8 25H, 73H, 3AH, 25H, 73H, 2CH, 53H, 54H
   \              0x3A 0x25    
   \              0x73 0x2C    
   \              0x53 0x54    
   \   00000048   0x52 0x49          DC8 52H, 49H, 3AH, 25H, 73H, 0DH, 0AH, 0
   \              0x3A 0x25    
   \              0x73 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "HISDAT">`:
   \   00000000   0x48 0x49          DC8 "HISDAT"
   \              0x53 0x44    
   \              0x41 0x54    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "No History Data \\r\\n">`:
   \   00000000   0x4E 0x6F          DC8 "No History Data \015\012"
   \              0x20 0x48    
   \              0x69 0x73    
   \              0x74 0x6F    
   \              0x72 0x79    
   \              0x20 0x44    
   \              0x61 0x74    
   \              0x61 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "DIRCMD">`:
   \   00000000   0x44 0x49          DC8 "DIRCMD"
   \              0x52 0x43    
   \              0x4D 0x44    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "DIRCMD \\r\\n">`:
   \   00000000   0x44 0x49          DC8 "DIRCMD \015\012"
   \              0x52 0x43    
   \              0x4D 0x44    
   \              0x20 0x0D    
   \              0x0A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "senser not support\\r\\n">`:
   \   00000000   0x73 0x65          DC8 "senser not support\015\012"
   \              0x6E 0x73    
   \              0x65 0x72    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x73    
   \              0x75 0x70    
   \              0x70 0x6F    
   \              0x72 0x74    
   \              0x0D 0x0A    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "$0,DIRCMD\\r\\n">`:
   \   00000000   0x24 0x30          DC8 "$0,DIRCMD\015\012"
   \              0x2C 0x44    
   \              0x49 0x52    
   \              0x43 0x4D    
   \              0x44 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "REBOOT">`:
   \   00000000   0x52 0x45          DC8 "REBOOT"
   \              0x42 0x4F    
   \              0x4F 0x54    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "REBOOT \\r\\n">`:
   \   00000000   0x52 0x45          DC8 "REBOOT \015\012"
   \              0x42 0x4F    
   \              0x4F 0x54    
   \              0x20 0x0D    
   \              0x0A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "RTUID">`:
   \   00000000   0x52 0x54          DC8 "RTUID"
   \              0x55 0x49    
   \              0x44 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "RTUID \\r\\n">`:
   \   00000000   0x52 0x54          DC8 "RTUID \015\012"
   \              0x55 0x49    
   \              0x44 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "rtuid len err!!!\\r\\n">`:
   \   00000000   0x72 0x74          DC8 "rtuid len err!!!\015\012"
   \              0x75 0x69    
   \              0x64 0x20    
   \              0x6C 0x65    
   \              0x6E 0x20    
   \              0x65 0x72    
   \              0x72 0x21    
   \              0x21 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "HEART">`:
   \   00000000   0x48 0x45          DC8 "HEART"
   \              0x41 0x52    
   \              0x54 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "heart tm  err !!!\\r\\n">`:
   \   00000000   0x68 0x65          DC8 "heart tm  err !!!\015\012"
   \              0x61 0x72    
   \              0x74 0x20    
   \              0x74 0x6D    
   \              0x20 0x20    
   \              0x65 0x72    
   \              0x72 0x20    
   \              0x21 0x21    
   \              0x21 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "BDBAUD">`:
   \   00000000   0x42 0x44          DC8 "BDBAUD"
   \              0x42 0x41    
   \              0x55 0x44    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "BDBAUD \\r\\n">`:
   \   00000000   0x42 0x44          DC8 "BDBAUD \015\012"
   \              0x42 0x41    
   \              0x55 0x44    
   \              0x20 0x0D    
   \              0x0A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "RTCSET">`:
   \   00000000   0x52 0x54          DC8 "RTCSET"
   \              0x43 0x53    
   \              0x45 0x54    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "RTCSET \\r\\n">`:
   \   00000000   0x52 0x54          DC8 "RTCSET \015\012"
   \              0x43 0x53    
   \              0x45 0x54    
   \              0x20 0x0D    
   \              0x0A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SNSET">`:
   \   00000000   0x53 0x4E          DC8 "SNSET"
   \              0x53 0x45    
   \              0x54 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SNSET \\r\\n">`:
   \   00000000   0x53 0x4E          DC8 "SNSET \015\012"
   \              0x53 0x45    
   \              0x54 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "REFILE">`:
   \   00000000   0x52 0x45          DC8 "REFILE"
   \              0x46 0x49    
   \              0x4C 0x45    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "admin REFILE \\r\\n">`:
   \   00000000   0x61 0x64          DC8 "admin REFILE \015\012"
   \              0x6D 0x69    
   \              0x6E 0x20    
   \              0x52 0x45    
   \              0x46 0x49    
   \              0x4C 0x45    
   \              0x20 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "REQIC">`:
   \   00000000   0x52 0x45          DC8 "REQIC"
   \              0x51 0x49    
   \              0x43 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "admin REQIC \\r\\n">`:
   \   00000000   0x61 0x64          DC8 "admin REQIC \015\012"
   \              0x6D 0x69    
   \              0x6E 0x20    
   \              0x52 0x45    
   \              0x51 0x49    
   \              0x43 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "own IC:%6d\\r\\n">`:
   \   00000000   0x6F 0x77          DC8 "own IC:%6d\015\012"
   \              0x6E 0x20    
   \              0x49 0x43    
   \              0x3A 0x25    
   \              0x36 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "REQRTC">`:
   \   00000000   0x52 0x45          DC8 "REQRTC"
   \              0x51 0x52    
   \              0x54 0x43    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "admin REQRTC \\r\\n">`:
   \   00000000   0x61 0x64          DC8 "admin REQRTC \015\012"
   \              0x6D 0x69    
   \              0x6E 0x20    
   \              0x52 0x45    
   \              0x51 0x52    
   \              0x54 0x43    
   \              0x20 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "$0,REQRTC,%04d-%02d-%...">`:
   \   00000000   0x24 0x30          DC8 "$0,REQRTC,%04d-%02d-%02d %02d:%02d:%02d\015\012"
   \              0x2C 0x52    
   \              0x45 0x51    
   \              0x52 0x54    
   \              0x43 0x2C    
   \              0x25 0x30    
   \              0x34 0x64    
   \              0x2D 0x25    
   \              0x30 0x32    
   \              0x64 0x2D    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x20 0x25    
   \              0x30 0x32    
   \              0x64 0x3A    
   \              0x25 0x30    
   \              0x32 0x64    
   \              0x3A 0x25    
   \              0x30 0x32    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "REQSN">`:
   \   00000000   0x52 0x45          DC8 "REQSN"
   \              0x51 0x53    
   \              0x4E 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "admin REQSN \\r\\n">`:
   \   00000000   0x61 0x64          DC8 "admin REQSN \015\012"
   \              0x6D 0x69    
   \              0x6E 0x20    
   \              0x52 0x45    
   \              0x51 0x53    
   \              0x4E 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "$0,REQSN,%s\\r\\n">`:
   \   00000000   0x24 0x30          DC8 "$0,REQSN,%s\015\012"
   \              0x2C 0x52    
   \              0x45 0x51    
   \              0x53 0x4E    
   \              0x2C 0x25    
   \              0x73 0x0D    
   \              0x0A 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "REQTEMP">`:
   \   00000000   0x52 0x45          DC8 "REQTEMP"
   \              0x51 0x54    
   \              0x45 0x4D    
   \              0x50 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "admin REQTEMP \\r\\n">`:
   \   00000000   0x61 0x64          DC8 "admin REQTEMP \015\012"
   \              0x6D 0x69    
   \              0x6E 0x20    
   \              0x52 0x45    
   \              0x51 0x54    
   \              0x45 0x4D    
   \              0x50 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "%c%d.%01d degree \\r\\n">`:
   \   00000000   0x25 0x63          DC8 "%c%d.%01d degree \015\012"
   \              0x25 0x64    
   \              0x2E 0x25    
   \              0x30 0x31    
   \              0x64 0x20    
   \              0x64 0x65    
   \              0x67 0x72    
   \              0x65 0x65    
   \              0x20 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "DEBUG">`:
   \   00000000   0x44 0x45          DC8 "DEBUG"
   \              0x42 0x55    
   \              0x47 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "admin DEBUG \\r\\n">`:
   \   00000000   0x61 0x64          DC8 "admin DEBUG \015\012"
   \              0x6D 0x69    
   \              0x6E 0x20    
   \              0x44 0x45    
   \              0x42 0x55    
   \              0x47 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "GprsDataShow open!\\r\\n">`:
   \   00000000   0x47 0x70          DC8 "GprsDataShow open!\015\012"
   \              0x72 0x73    
   \              0x44 0x61    
   \              0x74 0x61    
   \              0x53 0x68    
   \              0x6F 0x77    
   \              0x20 0x6F    
   \              0x70 0x65    
   \              0x6E 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "GprsDataShow close!\\r\\n">`:
   \   00000000   0x47 0x70          DC8 "GprsDataShow close!\015\012"
   \              0x72 0x73    
   \              0x44 0x61    
   \              0x74 0x61    
   \              0x53 0x68    
   \              0x6F 0x77    
   \              0x20 0x63    
   \              0x6C 0x6F    
   \              0x73 0x65    
   \              0x21 0x0D    
   \              0x0A 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "TLIT">`:
   \   00000000   0x54 0x4C          DC8 "TLIT"
   \              0x49 0x54    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Open Uart data show!\\r\\n">`:
   \   00000000   0x4F 0x70          DC8 "Open Uart data show!\015\012"
   \              0x65 0x6E    
   \              0x20 0x55    
   \              0x61 0x72    
   \              0x74 0x20    
   \              0x64 0x61    
   \              0x74 0x61    
   \              0x20 0x73    
   \              0x68 0x6F    
   \              0x77 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Close Uart data show!\\r\\n">`:
   \   00000000   0x43 0x6C          DC8 "Close Uart data show!\015\012"
   \              0x6F 0x73    
   \              0x65 0x20    
   \              0x55 0x61    
   \              0x72 0x74    
   \              0x20 0x64    
   \              0x61 0x74    
   \              0x61 0x20    
   \              0x73 0x68    
   \              0x6F 0x77    
   \              0x21 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "STAT">`:
   \   00000000   0x53 0x54          DC8 "STAT"
   \              0x41 0x54    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Telit_Connection_Stat...">`:
   \   00000000   0x54 0x65          DC8 "Telit_Connection_State:%d\015\012"
   \              0x6C 0x69    
   \              0x74 0x5F    
   \              0x43 0x6F    
   \              0x6E 0x6E    
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x5F 0x53    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x3A 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "g_bMoudule_Initialize...">`:
   \   00000000   0x67 0x5F          DC8 "g_bMoudule_Initialized_Flag:%d\015\012"
   \              0x62 0x4D    
   \              0x6F 0x75    
   \              0x64 0x75    
   \              0x6C 0x65    
   \              0x5F 0x49    
   \              0x6E 0x69    
   \              0x74 0x69    
   \              0x61 0x6C    
   \              0x69 0x7A    
   \              0x65 0x64    
   \              0x5F 0x46    
   \              0x6C 0x61    
   \              0x67 0x3A    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   00000021   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Common_Connection_Sta...">`:
   \   00000000   0x43 0x6F          DC8 "Common_Connection_State:%d\015\012"
   \              0x6D 0x6D    
   \              0x6F 0x6E    
   \              0x5F 0x43    
   \              0x6F 0x6E    
   \              0x6E 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x5F    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x65 0x3A    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Current_State:%d\\r\\n">`:
   \   00000000   0x43 0x75          DC8 "Current_State:%d\015\012"
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x5F    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x65 0x3A    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "g_bModuleRestartFlag:...">`:
   \   00000000   0x67 0x5F          DC8 "g_bModuleRestartFlag:%d\015\012"
   \              0x62 0x4D    
   \              0x6F 0x64    
   \              0x75 0x6C    
   \              0x65 0x52    
   \              0x65 0x73    
   \              0x74 0x61    
   \              0x72 0x74    
   \              0x46 0x6C    
   \              0x61 0x67    
   \              0x3A 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Module_Type:%d\\r\\n">`:
   \   00000000   0x4D 0x6F          DC8 "Module_Type:%d\015\012"
   \              0x64 0x75    
   \              0x6C 0x65    
   \              0x5F 0x54    
   \              0x79 0x70    
   \              0x65 0x3A    
   \              0x25 0x64    
   \              0x0D 0x0A    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Timer_Flag.Wait_Time_...">`:
   \   00000000   0x54 0x69          DC8 "Timer_Flag.Wait_Time_Cnt:%d\015\012"
   \              0x6D 0x65    
   \              0x72 0x5F    
   \              0x46 0x6C    
   \              0x61 0x67    
   \              0x2E 0x57    
   \              0x61 0x69    
   \              0x74 0x5F    
   \              0x54 0x69    
   \              0x6D 0x65    
   \              0x5F 0x43    
   \              0x6E 0x74    
   \              0x3A 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Timer_Flag.TimeOut_Cn...">`:
   \   00000000   0x54 0x69          DC8 "Timer_Flag.TimeOut_Cnt:%d\015\012"
   \              0x6D 0x65    
   \              0x72 0x5F    
   \              0x46 0x6C    
   \              0x61 0x67    
   \              0x2E 0x54    
   \              0x69 0x6D    
   \              0x65 0x4F    
   \              0x75 0x74    
   \              0x5F 0x43    
   \              0x6E 0x74    
   \              0x3A 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "g_RtuStatus.gprs:%d\\r\\n">`:
   \   00000000   0x67 0x5F          DC8 "g_RtuStatus.gprs:%d\015\012"
   \              0x52 0x74    
   \              0x75 0x53    
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x2E    
   \              0x67 0x70    
   \              0x72 0x73    
   \              0x3A 0x25    
   \              0x64 0x0D    
   \              0x0A 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "STEP">`:
   \   00000000   0x53 0x54          DC8 "STEP"
   \              0x45 0x50    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Open g_Debug.Footstep!\\r\\n">`:
   \   00000000   0x4F 0x70          DC8 "Open g_Debug.Footstep!\015\012"
   \              0x65 0x6E    
   \              0x20 0x67    
   \              0x5F 0x44    
   \              0x65 0x62    
   \              0x75 0x67    
   \              0x2E 0x46    
   \              0x6F 0x6F    
   \              0x74 0x73    
   \              0x74 0x65    
   \              0x70 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Close g_Debug.Footste...">`:
   \   00000000   0x43 0x6C          DC8 "Close g_Debug.Footstep!\015\012"
   \              0x6F 0x73    
   \              0x65 0x20    
   \              0x67 0x5F    
   \              0x44 0x65    
   \              0x62 0x75    
   \              0x67 0x2E    
   \              0x46 0x6F    
   \              0x6F 0x74    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x21 0x0D    
   \              0x0A 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "IFSTUCK">`:
   \   00000000   0x49 0x46          DC8 "IFSTUCK"
   \              0x53 0x54    
   \              0x55 0x43    
   \              0x4B 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Open g_Debug.Footstep...">`:
   \   00000000   0x4F 0x70          DC8 "Open g_Debug.Footstep2!\015\012"
   \              0x65 0x6E    
   \              0x20 0x67    
   \              0x5F 0x44    
   \              0x65 0x62    
   \              0x75 0x67    
   \              0x2E 0x46    
   \              0x6F 0x6F    
   \              0x74 0x73    
   \              0x74 0x65    
   \              0x70 0x32    
   \              0x21 0x0D    
   \              0x0A 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Close g_Debug.Footste...">_1`:
   \   00000000   0x43 0x6C          DC8 "Close g_Debug.Footstep2!\015\012"
   \              0x6F 0x73    
   \              0x65 0x20    
   \              0x67 0x5F    
   \              0x44 0x65    
   \              0x62 0x75    
   \              0x67 0x2E    
   \              0x46 0x6F    
   \              0x6F 0x74    
   \              0x73 0x74    
   \              0x65 0x70    
   \              0x32 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SDSHOW">`:
   \   00000000   0x53 0x44          DC8 "SDSHOW"
   \              0x53 0x48    
   \              0x4F 0x57    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Open g_Debug.Sendshow!\\r\\n">`:
   \   00000000   0x4F 0x70          DC8 "Open g_Debug.Sendshow!\015\012"
   \              0x65 0x6E    
   \              0x20 0x67    
   \              0x5F 0x44    
   \              0x65 0x62    
   \              0x75 0x67    
   \              0x2E 0x53    
   \              0x65 0x6E    
   \              0x64 0x73    
   \              0x68 0x6F    
   \              0x77 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Close g_Debug.Sendsho...">`:
   \   00000000   0x43 0x6C          DC8 "Close g_Debug.Sendshow!\015\012"
   \              0x6F 0x73    
   \              0x65 0x20    
   \              0x67 0x5F    
   \              0x44 0x65    
   \              0x62 0x75    
   \              0x67 0x2E    
   \              0x53 0x65    
   \              0x6E 0x64    
   \              0x73 0x68    
   \              0x6F 0x77    
   \              0x21 0x0D    
   \              0x0A 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "HCMSG">`:
   \   00000000   0x48 0x43          DC8 "HCMSG"
   \              0x4D 0x53    
   \              0x47 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Open g_Debug.HcMsg!\\r\\n">`:
   \   00000000   0x4F 0x70          DC8 "Open g_Debug.HcMsg!\015\012"
   \              0x65 0x6E    
   \              0x20 0x67    
   \              0x5F 0x44    
   \              0x65 0x62    
   \              0x75 0x67    
   \              0x2E 0x48    
   \              0x63 0x4D    
   \              0x73 0x67    
   \              0x21 0x0D    
   \              0x0A 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Close g_Debug.HcMsg!\\r\\n">`:
   \   00000000   0x43 0x6C          DC8 "Close g_Debug.HcMsg!\015\012"
   \              0x6F 0x73    
   \              0x65 0x20    
   \              0x67 0x5F    
   \              0x44 0x65    
   \              0x62 0x75    
   \              0x67 0x2E    
   \              0x48 0x63    
   \              0x4D 0x73    
   \              0x67 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "hc msg id err !!! \\r\\n">`:
   \   00000000   0x68 0x63          DC8 "hc msg id err !!! \015\012"
   \              0x20 0x6D    
   \              0x73 0x67    
   \              0x20 0x69    
   \              0x64 0x20    
   \              0x65 0x72    
   \              0x72 0x20    
   \              0x21 0x21    
   \              0x21 0x20    
   \              0x0D 0x0A    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   1989          
   1990          
   1991          
   1992          
   1993          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   DbgMsg
         8   -> DebugMsg
       0   NVIC_SystemReset
       0   PackedByHuace
     232   ProcessData_HUACE
       232   -> DebugMsg
       232   -> ProcessMsg_HUACE
       232   -> SendOutHardware
       232   -> rs232_data_put
    2136   ProcessMsg_HUACE
      2136   -> BSP_SerInit
      2136   -> ClearRadioLLed
      2136   -> DbgMsg
      2136   -> DebugMsg
      2136   -> GPIO_OutputValue
      2136   -> GetField
      2136   -> GetField_IP
      2136   -> GprsSoftReset
      2136   -> NVIC_SystemReset
      2136   -> OSTimeDlyHMSM
      2136   -> SaveConfig
      2136   -> SendOutHardware
      2136   -> SetRadioLLed
      2136   -> Stri_measure
      2136   -> WWDT_Feed
      2136   -> WriteFlash
      2136   -> __aeabi_cfcmple
      2136   -> __aeabi_cfrcmple
      2136   -> __aeabi_d2f
      2136   -> __aeabi_d2iz
      2136   -> __aeabi_dmul
      2136   -> __aeabi_f2iz
      2136   -> __aeabi_f2uiz
      2136   -> __aeabi_fmul
      2136   -> __aeabi_memclr4
      2136   -> abs
      2136   -> adc_get_current
      2136   -> adc_get_voltage
      2136   -> atof
      2136   -> atoi
      2136   -> bd_uart_init
      2136   -> file_get_addr_by_time
      2136   -> file_read_by_addr
      2136   -> log_config_info
      2136   -> memcpy
      2136   -> memset
      2136   -> rain_get_curr
      2136   -> reply_cmd
      2136   -> rs485_data_process
      2136   -> rs485_quiry
      2136   -> rtc_get_time
      2136   -> rtc_set_time
      2136   -> sprintf
      2136   -> strcmp
      2136   -> strcpy
      2136   -> strlen
      2136   -> tsensor_get_t
      16   Uart_Init
        16   -> BSP_SerInit
     232   log_config_info
       232   -> __aeabi_cfcmple
       232   -> __aeabi_f2iz
       232   -> __aeabi_fmul
       232   -> abs
       232   -> memset
       232   -> sprintf
       232   -> strcpy
       232   -> strlen
      16   memcpy
        16   -> __aeabi_memcpy
      16   memset
        16   -> __aeabi_memset
      16   reply_cmd
        16   -> SendDataByGPRS
        16   -> SendOutHardware
        16   -> SetBD_TXSQ


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?<Constant "$0">
      44  ?<Constant "$0,%s,%04d%02d%02d,%0...">
      48  ?<Constant "$0,%s,%04d%02d%02d,%0...">_1
      60  ?<Constant "$0,%s,%04d%02d%02d,%0...">_2
      68  ?<Constant "$0,%s,%04d%02d%02d,%0...">_3
      76  ?<Constant "$0,%s,%04d%02d%02d,%0...">_4
      12  ?<Constant "$0,DIRCMD\r\n">
      80  ?<Constant "$0,REPSTAT,POWER:%c%d...">
     140  ?<Constant "$0,REQCONF,RTUID:%s,C...">
      44  ?<Constant "$0,REQRTC,%04d-%02d-%...">
      16  ?<Constant "$0,REQSN,%s\r\n">
      20  ?<Constant "%c%d.%01d degree \r\n">
      12  ?<Constant "%s%02X\r\n">
       8  ?<Constant "%s,%d">
       8  ?<Constant "%s\r\n">
      12  ?<Constant "********\r\n">
       2  ?<Constant "1">
       8  ?<Constant "115200">
       8  ?<Constant "19200">
       2  ?<Constant "2">
       4  ?<Constant "2.5">
       8  ?<Constant "38400">
       4  ?<Constant "4.0">
       8  ?<Constant "4800">
       8  ?<Constant "57600">
       8  ?<Constant "9600">
       8  ?<Constant "ACCE">
       8  ?<Constant "ADC1">
      40  ?<Constant "ADC1:%s;%d;%d;%s;%c%d...">
      24  ?<Constant "ADC1:%s;%d;%d;%s;%c;,">
       8  ?<Constant "ADC2">
      40  ?<Constant "ADC2:%s;%d;%d;%s;%c%d...">
      24  ?<Constant "ADC2:%s;%d;%d;%s;%c;,">
       8  ?<Constant "ADC3">
      40  ?<Constant "ADC3:%s;%d;%d;%s;%c%d...">
      24  ?<Constant "ADC3:%s;%d;%d;%s;%c;,">
       8  ?<Constant "AUTO">
       4  ?<Constant "BCD">
       4  ?<Constant "BD">
      12  ?<Constant "BDBAUD \r\n">
       8  ?<Constant "BDBAUD">
      24  ?<Constant "COMMOD need reboot\r\n">
       8  ?<Constant "COMMOD">
      24  ?<Constant "Close Uart data show!\r\n">
      28  ?<Constant "Close g_Debug.Footste...">
      28  ?<Constant "Close g_Debug.Footste...">_1
      24  ?<Constant "Close g_Debug.HcMsg!\r\n">
      28  ?<Constant "Close g_Debug.Sendsho...">
      32  ?<Constant "Common_Connection_Sta...">
      20  ?<Constant "Current_State:%d\r\n">
       8  ?<Constant "DEBUG">
      12  ?<Constant "DIRCMD \r\n">
       8  ?<Constant "DIRCMD">
       8  ?<Constant "DIST">
      12  ?<Constant "DSTIC \r\n">
       8  ?<Constant "DSTIC">
      20  ?<Constant "DSTIP need reboot\r\n">
       8  ?<Constant "DSTIP">
       4  ?<Constant "ERR">
       8  ?<Constant "FLUX">
       8  ?<Constant "GPRS">
      24  ?<Constant "GprsDataShow close!\r\n">
      24  ?<Constant "GprsDataShow open!\r\n">
       8  ?<Constant "HANZI">
       8  ?<Constant "HCMSG">
       8  ?<Constant "HEART">
       8  ?<Constant "HISDAT">
       8  ?<Constant "IFSTUCK">
      12  ?<Constant "IO-INPUT">
       8  ?<Constant "MOVE">
      20  ?<Constant "Module_Type:%d\r\n">
       8  ?<Constant "NULL">
      20  ?<Constant "No History Data \r\n">
       4  ?<Constant "OK">
      24  ?<Constant "Open Uart data show!\r\n">
      28  ?<Constant "Open g_Debug.Footstep!\r\n">
      28  ?<Constant "Open g_Debug.Footstep...">
      24  ?<Constant "Open g_Debug.HcMsg!\r\n">
      28  ?<Constant "Open g_Debug.Sendshow!\r\n">
       8  ?<Constant "PORTCFG">
       4  ?<Constant "PWM">
      16  ?<Constant "PWM:%s;%d;%s;\r\n">
      12  ?<Constant "PWMOD \r\n">
       8  ?<Constant "PWMOD">
      12  ?<Constant "RAINFRQ \r\n">
       8  ?<Constant "RAINFRQ">
      16  ?<Constant "RAINRESOL \r\n">
      12  ?<Constant "RAINRESOL">
      12  ?<Constant "REBOOT \r\n">
       8  ?<Constant "REBOOT">
       8  ?<Constant "REFILE">
      12  ?<Constant "REQCONF \r\n">
       8  ?<Constant "REQCONF">
      12  ?<Constant "REQDISTDAT">
      16  ?<Constant "REQDISTDAT\r\n">
       8  ?<Constant "REQIC">
      12  ?<Constant "REQRAINDAT">
      16  ?<Constant "REQRAINDAT\r\n">
       8  ?<Constant "REQRTC">
       8  ?<Constant "REQSN">
      12  ?<Constant "REQSTAT \r\n">
       8  ?<Constant "REQSTAT">
       8  ?<Constant "REQTEMP">
       8  ?<Constant "RS232">
      12  ?<Constant "RS232-BDS">
      20  ?<Constant "RS232:%s;%d;%d;%s;,">
       8  ?<Constant "RS485">
      44  ?<Constant "RS485:%s;%d;%d;%d;%s;...">
      12  ?<Constant "RTCSET \r\n">
       8  ?<Constant "RTCSET">
      12  ?<Constant "RTUID \r\n">
       8  ?<Constant "RTUID">
       8  ?<Constant "SDSHOW">
       8  ?<Constant "SLEEP">
      12  ?<Constant "SNSET \r\n">
       8  ?<Constant "SNSET">
       8  ?<Constant "SOIL">
       8  ?<Constant "STAT">
       8  ?<Constant "STEP">
       8  ?<Constant "TEMPDAT">
      12  ?<Constant "TERMCONF">
       8  ?<Constant "TILT">
       8  ?<Constant "TLIT">
      28  ?<Constant "Telit_Connection_Stat...">
      28  ?<Constant "Timer_Flag.TimeOut_Cn...">
      32  ?<Constant "Timer_Flag.Wait_Time_...">
      12  ?<Constant "USRBAUD \r\n">
       8  ?<Constant "USRBAUD">
       8  ?<Constant "V1.1">
       8  ?<Constant "V1.3">
       8  ?<Constant "WAKE">
      16  ?<Constant "admin DEBUG \r\n">
      16  ?<Constant "admin REFILE \r\n">
      16  ?<Constant "admin REQIC \r\n">
      16  ?<Constant "admin REQRTC \r\n">
      16  ?<Constant "admin REQSN \r\n">
      20  ?<Constant "admin REQTEMP \r\n">
      20  ?<Constant "admin TERMCONF\r\n">
      24  ?<Constant "g_RtuStatus.gprs:%d\r\n">
      28  ?<Constant "g_bModuleRestartFlag:...">
      36  ?<Constant "g_bMoudule_Initialize...">
      20  ?<Constant "hc msg err !!! \r\n">
      24  ?<Constant "hc msg id err !!! \r\n">
      20  ?<Constant "heart tm  err !!!\r\n">
      36  ?<Constant "huace buffer overflow...">
      16  ?<Constant "own IC:%6d\r\n">
      20  ?<Constant "rtuid len err!!!\r\n">
      24  ?<Constant "senser not support\r\n">
       8  ?<Constant {0}>
       8  ?<Constant {0}>_1
      20  ?<Constant {0}>_2
      52  ?<Constant {0}>_3
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_20
       4  ??DataTable3_21
       4  ??DataTable3_22
       4  ??DataTable3_23
       4  ??DataTable3_24
       4  ??DataTable3_25
       4  ??DataTable3_26
       4  ??DataTable3_27
       4  ??DataTable3_28
       4  ??DataTable3_29
       4  ??DataTable3_3
       4  ??DataTable3_30
       4  ??DataTable3_31
       4  ??DataTable3_32
       4  ??DataTable3_33
       4  ??DataTable3_34
       4  ??DataTable3_35
       4  ??DataTable3_36
       4  ??DataTable3_37
       4  ??DataTable3_38
       4  ??DataTable3_39
       4  ??DataTable3_4
       4  ??DataTable3_40
       4  ??DataTable3_41
       4  ??DataTable3_42
       4  ??DataTable3_43
       4  ??DataTable3_44
       4  ??DataTable3_45
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_17
       4  ??DataTable4_18
       4  ??DataTable4_19
       4  ??DataTable4_2
       4  ??DataTable4_20
       4  ??DataTable4_21
       4  ??DataTable4_22
       4  ??DataTable4_23
       4  ??DataTable4_24
       4  ??DataTable4_25
       4  ??DataTable4_26
       4  ??DataTable4_27
       4  ??DataTable4_28
       4  ??DataTable4_29
       4  ??DataTable4_3
       4  ??DataTable4_30
       4  ??DataTable4_31
       4  ??DataTable4_32
       4  ??DataTable4_33
       4  ??DataTable4_34
       4  ??DataTable4_35
       4  ??DataTable4_36
       4  ??DataTable4_37
       4  ??DataTable4_38
       4  ??DataTable4_39
       4  ??DataTable4_4
       4  ??DataTable4_40
       4  ??DataTable4_41
       4  ??DataTable4_42
       4  ??DataTable4_43
       4  ??DataTable4_44
       4  ??DataTable4_45
       4  ??DataTable4_46
       4  ??DataTable4_47
       4  ??DataTable4_48
       4  ??DataTable4_49
       4  ??DataTable4_5
       4  ??DataTable4_50
       4  ??DataTable4_51
       4  ??DataTable4_52
       4  ??DataTable4_53
       4  ??DataTable4_54
       4  ??DataTable4_55
       4  ??DataTable4_56
       4  ??DataTable4_57
       4  ??DataTable4_58
       4  ??DataTable4_59
       4  ??DataTable4_6
       4  ??DataTable4_60
       4  ??DataTable4_61
       4  ??DataTable4_62
       4  ??DataTable4_63
       4  ??DataTable4_64
       4  ??DataTable4_65
       4  ??DataTable4_66
       4  ??DataTable4_67
       4  ??DataTable4_68
       4  ??DataTable4_69
       4  ??DataTable4_7
       4  ??DataTable4_70
       4  ??DataTable4_71
       4  ??DataTable4_72
       4  ??DataTable4_73
       4  ??DataTable4_74
       4  ??DataTable4_75
       4  ??DataTable4_76
       4  ??DataTable4_77
       4  ??DataTable4_78
       4  ??DataTable4_79
       4  ??DataTable4_8
       4  ??DataTable4_80
       4  ??DataTable4_81
       4  ??DataTable4_82
       4  ??DataTable4_83
       4  ??DataTable4_84
       4  ??DataTable4_85
       4  ??DataTable4_9
      12  DbgMsg
      20  Gps_name
       1  NMEA_set
      32  NVIC_SystemReset
       2  PackedByHuace
     560  ProcessData_HUACE
    9296  ProcessMsg_HUACE
      72  RTK_angle
       1  RTK_angle_half
      90  Uart_Init
       1  calibration_en
       4  g_SetRTCCount
    1886  log_config_info
      22  memcpy
      22  memset
      76  reply_cmd
       1  rtkSource
       1  sensor_frq
       1  static_set

 
     96 bytes in section .bss
      6 bytes in section .data
  2 652 bytes in section .rodata
 12 526 bytes in section .text
 
 12 482 bytes of CODE  memory (+ 44 bytes shared)
  2 652 bytes of CONST memory
    102 bytes of DATA  memory

Errors: none
Warnings: 69
