###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.6.4896/W32 for ARM      20/Mar/2017  17:17:55 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\wangfan2\桌面\RTU_1.2\bsp\RS485\RS485.c               #
#    Command line =  D:\wangfan2\桌面\RTU_1.2\bsp\RS485\RS485.c -lCN          #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\List\ -o      #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\Obj\          #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5_2\arm\INC\c\DLib_Config_F #
#                    ull.h" -I D:\wangfan2\桌面\RTU_1.2\project\iar\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\ADC\ -I   #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RTC\ -I   #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\TILT\ -I  #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RDLevel\  #
#                    -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RS232\ #
#                     -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\OS-v2 #
#                    \ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\Vibr #
#                    ationString\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\ #
#                    ..\ucos2\uCOS-II\Ports\ARM-Cortex-M3\Generic\IAR\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\ucos2\uCOS-II #
#                    \Source\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\u #
#                    cos2\uC-LIB\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\ #
#                    ..\ucos2\uC-CPU\ -I D:\wangfan2\桌面\RTU_1.2\project\iar #
#                    \..\..\ucos2\uC-CPU\ARM-Cortex-M3\IAR\ -I                #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\cmsis\Drivers #
#                    \source\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\c #
#                    msis\Drivers\include\ -I D:\wangfan2\桌面\RTU_1.2\projec #
#                    t\iar\..\..\app\ -I D:\wangfan2\桌面\RTU_1.2\project\iar #
#                    \..\..\uC-Probe\Target\Plugins\uCOS-II\ -I               #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Demos\Intro\Workspaces\ -I                            #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Demos\Intro\Source\ -I D:\wangfan2\桌面\RTU_1.2\proje #
#                    ct\iar\..\..\uC-Probe\Target\Communication\Generic\Sourc #
#                    e\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Prob #
#                    e\Target\Communication\Generic\RS-232\Source\ -I         #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Communication\Generic\RS-232\Ports\NXP\LPC17xx\ -I    #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Communication\Generic\RS-232\OS\uCOS-II\ -I           #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\cmsis\Core\CM #
#                    3\CoreSupport\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\. #
#                    .\..\cmsis\Core\CM3\DeviceSupport\NXP\LPC177x_8x\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\ -I  #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\DEVI #
#                    CE_BT\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\Hua #
#                    ceApp\DEVICE_COM\ -I D:\wangfan2\桌面\RTU_1.2\project\ia #
#                    r\..\..\HuaceApp\DEVICE_GPRS\ -I                         #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\DEVI #
#                    CE_GPS\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\Hu #
#                    aceApp\DEVICE_RADIO\ -I D:\wangfan2\桌面\RTU_1.2\project #
#                    \iar\..\..\HuaceApp\iap\ -I                              #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\FatFs\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\USB\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\bsp\spi_flash #
#                    \ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp #
#                    \LED\ -On --use_c++_inline                               #
#    List file    =  D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\List\RS485.ls #
#                    t                                                        #
#    Object file  =  D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\Obj\RS485.o   #
#                                                                             #
#                                                                             #
###############################################################################

D:\wangfan2\桌面\RTU_1.2\bsp\RS485\RS485.c
      1          #include "RS485.h"

   \                                 In section .text, align 2
   \   __intrinsic __nounwind __interwork __softfp void *memset(void *, int, size_t)
   \                     memset:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x002A             MOVS     R2,R5
   \   0000000A   0x0031             MOVS     R1,R6
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_memset
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xBD70             POP      {R4-R6,PC}       ;; return
      2          

   \                                 In section .bss, align 4
      3          uint32_t rs485_store_cnt;
   \                     rs485_store_cnt:
   \   00000000                      DS8 4
      4          

   \                                 In section .bss, align 4
      5          rs485_para_t rs485_para;
   \                     rs485_para:
   \   00000000                      DS8 156
      6          

   \                                 In section .bss, align 4
      7           uint8_t rs485_buf[260];
   \                     rs485_buf:
   \   00000000                      DS8 260
      8          

   \                                 In section .bss, align 4
      9          static uint32_t rs485_task_timeout;
   \                     rs485_task_timeout:
   \   00000000                      DS8 4
     10          

   \                                 In section .bss, align 4
     11          static queue_t rs485_queue[20];
   \                     rs485_queue:
   \   00000000                      DS8 120
     12          

   \                                 In section .bss, align 4
     13          static uint32_t wr_last;
   \                     wr_last:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     14          static uint32_t curr_addr;
   \                     curr_addr:
   \   00000000                      DS8 4
     15          
     16          

   \                                 In section .text, align 2, keep-with-next
     17          void rs485_init(void)
     18          {
   \                     rs485_init:
   \   00000000   0xB580             PUSH     {R7,LR}
     19          	  
     20            /** 变量初始化 ---------------------------*/
     21            
     22            memset(rs485_queue,0,sizeof(rs485_queue));
   \   00000002   0x2278             MOVS     R2,#+120
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x....             LDR.N    R0,??DataTable4
   \   00000008   0x.... 0x....      BL       memset
     23            
     24            rs485_task_timeout = rs485_para.frq * 2400 / rs485_para.cnt;
   \   0000000C   0x....             LDR.N    R0,??DataTable4_1
   \   0000000E   0x6840             LDR      R0,[R0, #+4]
   \   00000010   0xF44F 0x6116      MOV      R1,#+2400
   \   00000014   0x4348             MULS     R0,R1,R0
   \   00000016   0x....             LDR.N    R1,??DataTable4_1
   \   00000018   0x6889             LDR      R1,[R1, #+8]
   \   0000001A   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000001E   0x....             LDR.N    R1,??DataTable4_2
   \   00000020   0x6008             STR      R0,[R1, #+0]
     25            
     26            wr_last = 0;
   \   00000022   0x....             LDR.N    R0,??DataTable4_3
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x6001             STR      R1,[R0, #+0]
     27            curr_addr = 1;
   \   00000028   0x....             LDR.N    R0,??DataTable4_4
   \   0000002A   0x2101             MOVS     R1,#+1
   \   0000002C   0x6001             STR      R1,[R0, #+0]
     28              
     29            /** IO初始化 -----------------------------*/
     30            GPIO_SetDir(RS485_OE_PORT,RS485_OE_PIN,GPIO_DIRECTION_OUTPUT);
   \   0000002E   0x2201             MOVS     R2,#+1
   \   00000030   0xF45F 0x2100      MOVS     R1,#+524288
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0x.... 0x....      BL       GPIO_SetDir
     31            
     32            /** UART外设及中断初始化 -----------------*/
     33            
     34            BSP_SerInit(PORT_ID_GPS, rs485_para.baud);
   \   0000003A   0x....             LDR.N    R0,??DataTable4_1
   \   0000003C   0x68C1             LDR      R1,[R0, #+12]
   \   0000003E   0x2002             MOVS     R0,#+2
   \   00000040   0x.... 0x....      BL       BSP_SerInit
     35            
     36            //BSP_SerInit(RS485_UART_ID,);
     37            
     38            switch(rs485_para.type)
   \   00000044   0x....             LDR.N    R0,??DataTable4_1
   \   00000046   0x6800             LDR      R0,[R0, #+0]
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD00A             BEQ.N    ??rs485_init_0
   \   0000004C   0x2801             CMP      R0,#+1
   \   0000004E   0xD009             BEQ.N    ??rs485_init_1
   \   00000050   0x2802             CMP      R0,#+2
   \   00000052   0xD00A             BEQ.N    ??rs485_init_2
   \   00000054   0x2803             CMP      R0,#+3
   \   00000056   0xD00B             BEQ.N    ??rs485_init_3
   \   00000058   0x2804             CMP      R0,#+4
   \   0000005A   0xD00A             BEQ.N    ??rs485_init_4
   \   0000005C   0x2807             CMP      R0,#+7
   \   0000005E   0xD009             BEQ.N    ??rs485_init_5
   \   00000060   0xE00B             B.N      ??rs485_init_6
     39            {
     40            case 0://空
     41              break;
   \                     ??rs485_init_0:
   \   00000062   0xE00A             B.N      ??rs485_init_6
     42            case 1://水位计
     43              {
     44                dist_init();
   \                     ??rs485_init_1:
   \   00000064   0x.... 0x....      BL       dist_init
     45              }
     46              break;
   \   00000068   0xE007             B.N      ??rs485_init_6
     47            case 2://固定式测斜仪
     48              {
     49                tilt_init();
   \                     ??rs485_init_2:
   \   0000006A   0x.... 0x....      BL       tilt_init
     50              }
     51              break;
   \   0000006E   0xE004             B.N      ??rs485_init_6
     52            case 3://流量计
     53              break;
   \                     ??rs485_init_3:
   \   00000070   0xE003             B.N      ??rs485_init_6
     54            case 4://瞬时位移传感器
     55              break; 
   \                     ??rs485_init_4:
   \   00000072   0xE002             B.N      ??rs485_init_6
     56            case RDLE://雷达液位计
     57          	  {
     58          		  DebugMsg("Init RDlevel OK!\r\n");
   \                     ??rs485_init_5:
   \   00000074   0x....             LDR.N    R0,??DataTable4_5
   \   00000076   0x.... 0x....      BL       DebugMsg
     59          	  }
     60          	break;
     61            }
     62          }
   \                     ??rs485_init_6:
   \   0000007A   0xBD01             POP      {R0,PC}          ;; return
     63          

   \                                 In section .text, align 2, keep-with-next
     64          void rs485_task(void)
     65          {
   \                     rs485_task:
   \   00000000   0xB510             PUSH     {R4,LR}
     66            
     67            uint32_t len = 0;
   \   00000002   0x2400             MOVS     R4,#+0
     68          
     69            if( rs485_para.frq_changed)
   \   00000004   0x....             LDR.N    R0,??DataTable4_1
   \   00000006   0xF890 0x009A      LDRB     R0,[R0, #+154]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD00E             BEQ.N    ??rs485_task_0
     70            {
     71              rs485_para.frq_changed = 0;
   \   0000000E   0x....             LDR.N    R0,??DataTable4_1
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0xF880 0x109A      STRB     R1,[R0, #+154]
     72              
     73              rs485_task_timeout = rs485_para.frq * 2400 / rs485_para.cnt;
   \   00000016   0x....             LDR.N    R0,??DataTable4_1
   \   00000018   0x6840             LDR      R0,[R0, #+4]
   \   0000001A   0xF44F 0x6116      MOV      R1,#+2400
   \   0000001E   0x4348             MULS     R0,R1,R0
   \   00000020   0x....             LDR.N    R1,??DataTable4_1
   \   00000022   0x6889             LDR      R1,[R1, #+8]
   \   00000024   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000028   0x....             LDR.N    R1,??DataTable4_2
   \   0000002A   0x6008             STR      R0,[R1, #+0]
     74              
     75            }
     76            if( (rs485_para.frq != 0) && (rs485_para.cnt != 0))
   \                     ??rs485_task_0:
   \   0000002C   0x....             LDR.N    R0,??DataTable4_1
   \   0000002E   0x6840             LDR      R0,[R0, #+4]
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xD027             BEQ.N    ??rs485_task_1
   \   00000034   0x....             LDR.N    R0,??DataTable4_1
   \   00000036   0x6880             LDR      R0,[R0, #+8]
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xD023             BEQ.N    ??rs485_task_1
     77            {// 水位计在设置间隔为0时，定义为关闭采集状态
     78              if( rs485_task_timeout == 0) 
   \   0000003C   0x....             LDR.N    R0,??DataTable4_2
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD11F             BNE.N    ??rs485_task_1
     79              {
     80                rs485_task_timeout = rs485_para.frq * 2400 / rs485_para.cnt;
   \   00000044   0x....             LDR.N    R0,??DataTable4_1
   \   00000046   0x6840             LDR      R0,[R0, #+4]
   \   00000048   0xF44F 0x6116      MOV      R1,#+2400
   \   0000004C   0x4348             MULS     R0,R1,R0
   \   0000004E   0x....             LDR.N    R1,??DataTable4_1
   \   00000050   0x6889             LDR      R1,[R1, #+8]
   \   00000052   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000056   0x....             LDR.N    R1,??DataTable4_2
   \   00000058   0x6008             STR      R0,[R1, #+0]
     81                
     82                memset(rs485_para.data,0,sizeof(rs485_para.data));
   \   0000005A   0x2264             MOVS     R2,#+100
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0x....             LDR.N    R0,??DataTable4_6
   \   00000060   0x.... 0x....      BL       memset
     83                  
     84                rs485_quiry(curr_addr++);				//mark 改为静态变量 ++用宏定义实现
   \   00000064   0x....             LDR.N    R0,??DataTable4_4
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0x1C41             ADDS     R1,R0,#+1
   \   0000006A   0x....             LDR.N    R2,??DataTable4_4
   \   0000006C   0x6011             STR      R1,[R2, #+0]
   \   0000006E   0x.... 0x....      BL       rs485_quiry
     85                
     86                if( curr_addr > rs485_para.cnt)
   \   00000072   0x....             LDR.N    R0,??DataTable4_1
   \   00000074   0x6880             LDR      R0,[R0, #+8]
   \   00000076   0x....             LDR.N    R1,??DataTable4_4
   \   00000078   0x6809             LDR      R1,[R1, #+0]
   \   0000007A   0x4288             CMP      R0,R1
   \   0000007C   0xD202             BCS.N    ??rs485_task_1
     87                {
     88                  curr_addr = 1;
   \   0000007E   0x....             LDR.N    R0,??DataTable4_4
   \   00000080   0x2101             MOVS     R1,#+1
   \   00000082   0x6001             STR      R1,[R0, #+0]
     89                }
     90              }
     91            }
     92            /** 数据存储 **/
     93            
     94            
     95            /** 数据处理 **/
     96            if( g_DeviceGPS.WrSp != wr_last )
   \                     ??rs485_task_1:
   \   00000084   0x....             LDR.N    R0,??DataTable4_7
   \   00000086   0x8B00             LDRH     R0,[R0, #+24]
   \   00000088   0x....             LDR.N    R1,??DataTable4_3
   \   0000008A   0x6809             LDR      R1,[R1, #+0]
   \   0000008C   0x4288             CMP      R0,R1
   \   0000008E   0xD004             BEQ.N    ??rs485_task_2
     97            {
     98              wr_last = g_DeviceGPS.WrSp;
   \   00000090   0x....             LDR.N    R0,??DataTable4_7
   \   00000092   0x8B00             LDRH     R0,[R0, #+24]
   \   00000094   0x....             LDR.N    R1,??DataTable4_3
   \   00000096   0x6008             STR      R0,[R1, #+0]
     99              return;
   \   00000098   0xE031             B.N      ??rs485_task_3
    100            }
    101            else if(g_DeviceGPS.WrSp != g_DeviceGPS.RdSp)
   \                     ??rs485_task_2:
   \   0000009A   0x....             LDR.N    R0,??DataTable4_7
   \   0000009C   0x8B00             LDRH     R0,[R0, #+24]
   \   0000009E   0x....             LDR.N    R1,??DataTable4_7
   \   000000A0   0x8B49             LDRH     R1,[R1, #+26]
   \   000000A2   0x4288             CMP      R0,R1
   \   000000A4   0xD02B             BEQ.N    ??rs485_task_4
    102            {     
    103              
    104              OSTimeDly(10);
   \   000000A6   0x200A             MOVS     R0,#+10
   \   000000A8   0x.... 0x....      BL       OSTimeDly
    105              
    106              while( g_DeviceGPS.RdSp != g_DeviceGPS.WrSp)
   \                     ??rs485_task_5:
   \   000000AC   0x....             LDR.N    R0,??DataTable4_7
   \   000000AE   0x8B40             LDRH     R0,[R0, #+26]
   \   000000B0   0x....             LDR.N    R1,??DataTable4_7
   \   000000B2   0x8B09             LDRH     R1,[R1, #+24]
   \   000000B4   0x4288             CMP      R0,R1
   \   000000B6   0xD019             BEQ.N    ??rs485_task_6
    107              {
    108                rs485_buf[len++] = g_DeviceGPS.Buf[g_DeviceGPS.RdSp];
   \   000000B8   0x....             LDR.N    R0,??DataTable4_7
   \   000000BA   0x8B40             LDRH     R0,[R0, #+26]
   \   000000BC   0x....             LDR.N    R1,??DataTable4_7
   \   000000BE   0x6949             LDR      R1,[R1, #+20]
   \   000000C0   0x5C40             LDRB     R0,[R0, R1]
   \   000000C2   0x....             LDR.N    R1,??DataTable4_8
   \   000000C4   0x5460             STRB     R0,[R4, R1]
   \   000000C6   0x1C64             ADDS     R4,R4,#+1
    109                
    110                INCREASE_POINTER(g_DeviceGPS.RdSp);
   \   000000C8   0x....             LDR.N    R0,??DataTable4_7
   \   000000CA   0x8B40             LDRH     R0,[R0, #+26]
   \   000000CC   0x1C40             ADDS     R0,R0,#+1
   \   000000CE   0x....             LDR.N    R1,??DataTable4_7
   \   000000D0   0x8348             STRH     R0,[R1, #+26]
   \   000000D2   0x....             LDR.N    R0,??DataTable4_7
   \   000000D4   0x8B40             LDRH     R0,[R0, #+26]
   \   000000D6   0xF44F 0x6100      MOV      R1,#+2048
   \   000000DA   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000DE   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   000000E2   0x....             LDR.N    R0,??DataTable4_7
   \   000000E4   0x8342             STRH     R2,[R0, #+26]
    111                
    112                if( len >= sizeof(rs485_buf) )
   \   000000E6   0xF5B4 0x7F82      CMP      R4,#+260
   \   000000EA   0xD3DF             BCC.N    ??rs485_task_5
    113                {
    114                  break;
    115                }
    116              }
    117              
    118              rs485_data_process(rs485_buf,len,1);
   \                     ??rs485_task_6:
   \   000000EC   0x2201             MOVS     R2,#+1
   \   000000EE   0x0021             MOVS     R1,R4
   \   000000F0   0x....             LDR.N    R0,??DataTable4_8
   \   000000F2   0x.... 0x....      BL       rs485_data_process
    119                    
    120              g_DeviceGPS.RdSp = g_DeviceGPS.WrSp;
   \   000000F6   0x....             LDR.N    R0,??DataTable4_7
   \   000000F8   0x....             LDR.N    R1,??DataTable4_7
   \   000000FA   0x8B09             LDRH     R1,[R1, #+24]
   \   000000FC   0x8341             STRH     R1,[R0, #+26]
    121            }
    122                    
    123          }
   \                     ??rs485_task_4:
   \                     ??rs485_task_3:
   \   000000FE   0xBD10             POP      {R4,PC}          ;; return
    124          

   \                                 In section .text, align 2, keep-with-next
    125          void rs485_timer_handler(void)
    126          {//25ms中断
    127            if( rs485_task_timeout > 0)
   \                     rs485_timer_handler:
   \   00000000   0x....             LDR.N    R0,??DataTable4_2
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD004             BEQ.N    ??rs485_timer_handler_0
    128              rs485_task_timeout--;
   \   00000008   0x....             LDR.N    R0,??DataTable4_2
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x1E40             SUBS     R0,R0,#+1
   \   0000000E   0x....             LDR.N    R1,??DataTable4_2
   \   00000010   0x6008             STR      R0,[R1, #+0]
    129            
    130          }
   \                     ??rs485_timer_handler_0:
   \   00000012   0x4770             BX       LR               ;; return
    131          
    132          /**
    133          addr 从1开始，到 rs485_para.cnt
    134          **/

   \                                 In section .text, align 2, keep-with-next
    135          void rs485_quiry(uint32_t addr)
    136          {
   \                     rs485_quiry:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    137            
    138            switch(rs485_para.type)
   \   00000004   0x....             LDR.N    R0,??DataTable4_1
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD00A             BEQ.N    ??rs485_quiry_0
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xD009             BEQ.N    ??rs485_quiry_1
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xD00B             BEQ.N    ??rs485_quiry_2
   \   00000014   0x2803             CMP      R0,#+3
   \   00000016   0xD00D             BEQ.N    ??rs485_quiry_3
   \   00000018   0x2804             CMP      R0,#+4
   \   0000001A   0xD00C             BEQ.N    ??rs485_quiry_4
   \   0000001C   0x2807             CMP      R0,#+7
   \   0000001E   0xD00B             BEQ.N    ??rs485_quiry_5
   \   00000020   0xE00F             B.N      ??rs485_quiry_6
    139            {
    140            case 0://空
    141              break;
   \                     ??rs485_quiry_0:
   \   00000022   0xE00E             B.N      ??rs485_quiry_6
    142            case 1://水位计
    143              {
    144                dist_quiry(addr);
   \                     ??rs485_quiry_1:
   \   00000024   0x0020             MOVS     R0,R4
   \   00000026   0x.... 0x....      BL       dist_quiry
    145              }
    146              break;
   \   0000002A   0xE00A             B.N      ??rs485_quiry_6
    147            case 2://固定式测斜仪
    148              {
    149                tilt_quiry(addr);
   \                     ??rs485_quiry_2:
   \   0000002C   0x0020             MOVS     R0,R4
   \   0000002E   0x.... 0x....      BL       tilt_quiry
    150              }
    151              break;
   \   00000032   0xE006             B.N      ??rs485_quiry_6
    152            case 3://流量计
    153              break;
   \                     ??rs485_quiry_3:
   \   00000034   0xE005             B.N      ??rs485_quiry_6
    154            case 4://瞬时位移传感器
    155              break; 
   \                     ??rs485_quiry_4:
   \   00000036   0xE004             B.N      ??rs485_quiry_6
    156            case RDLE://雷达液位计
    157          	  {
    158          		  RDLevel_quiry(addr,rs485_para.para0);
   \                     ??rs485_quiry_5:
   \   00000038   0x....             LDR.N    R0,??DataTable4_1
   \   0000003A   0x6901             LDR      R1,[R0, #+16]
   \   0000003C   0x0020             MOVS     R0,R4
   \   0000003E   0x.... 0x....      BL       RDLevel_quiry
    159          	  }
    160          	break;
    161            }
    162          }
   \                     ??rs485_quiry_6:
   \   00000042   0xBD10             POP      {R4,PC}          ;; return
    163          
    164          /**
    165          flag : 0 -> 不存储到FLASH 1 -> 存储到FLASH
    166          **/
    167          

   \                                 In section .text, align 2, keep-with-next
    168           void rs485_data_process(uint8_t * p_pkg,uint32_t len,uint8_t flag)
    169          {
   \                     rs485_data_process:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    170            
    171              switch(rs485_para.type)
   \   00000008   0x....             LDR.N    R0,??DataTable4_1
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD00A             BEQ.N    ??rs485_data_process_0
   \   00000010   0x2801             CMP      R0,#+1
   \   00000012   0xD009             BEQ.N    ??rs485_data_process_1
   \   00000014   0x2802             CMP      R0,#+2
   \   00000016   0xD00E             BEQ.N    ??rs485_data_process_2
   \   00000018   0x2803             CMP      R0,#+3
   \   0000001A   0xD013             BEQ.N    ??rs485_data_process_3
   \   0000001C   0x2804             CMP      R0,#+4
   \   0000001E   0xD012             BEQ.N    ??rs485_data_process_4
   \   00000020   0x2807             CMP      R0,#+7
   \   00000022   0xD011             BEQ.N    ??rs485_data_process_5
   \   00000024   0xE016             B.N      ??rs485_data_process_6
    172            {
    173            case 0://空
    174              break;
   \                     ??rs485_data_process_0:
   \   00000026   0xE015             B.N      ??rs485_data_process_6
    175            case 1://水位计
    176              {
    177                dist_process(p_pkg,len,flag);
   \                     ??rs485_data_process_1:
   \   00000028   0x0032             MOVS     R2,R6
   \   0000002A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000002C   0x0029             MOVS     R1,R5
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0x.... 0x....      BL       dist_process
    178              }
    179              break;
   \   00000034   0xE00E             B.N      ??rs485_data_process_6
    180            case 2://固定式测斜仪
    181              {
    182                tilt_process(p_pkg,len,flag);
   \                     ??rs485_data_process_2:
   \   00000036   0x0032             MOVS     R2,R6
   \   00000038   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000003A   0x0029             MOVS     R1,R5
   \   0000003C   0x0020             MOVS     R0,R4
   \   0000003E   0x.... 0x....      BL       tilt_process
    183              }
    184              break;
   \   00000042   0xE007             B.N      ??rs485_data_process_6
    185            case 3://流量计
    186              break;
   \                     ??rs485_data_process_3:
   \   00000044   0xE006             B.N      ??rs485_data_process_6
    187            case 4://瞬时位移传感器
    188              break; 
   \                     ??rs485_data_process_4:
   \   00000046   0xE005             B.N      ??rs485_data_process_6
    189            case RDLE:	//雷达液位计
    190          	  {
    191          //		  SendOutHardware(PORT_ID_COM, (UINT8*)p_pkg, len);
    192          		  RDLevel_process(p_pkg,len,flag);
   \                     ??rs485_data_process_5:
   \   00000048   0x0032             MOVS     R2,R6
   \   0000004A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000004C   0x0029             MOVS     R1,R5
   \   0000004E   0x0020             MOVS     R0,R4
   \   00000050   0x.... 0x....      BL       RDLevel_process
    193          	  }
    194          	break;
    195            }
    196          }
   \                     ??rs485_data_process_6:
   \   00000054   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     rs485_queue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     rs485_para

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     rs485_task_timeout

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     wr_last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     curr_addr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     `?<Constant "Init RDlevel OK!\\r\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     rs485_para+0x35

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     g_DeviceGPS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     rs485_buf

   \                                 In section .rodata, align 4
   \                     `?<Constant "Init RDlevel OK!\\r\\n">`:
   \   00000000   0x49 0x6E          DC8 "Init RDlevel OK!\015\012"
   \              0x69 0x74    
   \              0x20 0x52    
   \              0x44 0x6C    
   \              0x65 0x76    
   \              0x65 0x6C    
   \              0x20 0x4F    
   \              0x4B 0x21    
   \              0x0D 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   memset
        16   -> __aeabi_memset
      16   rs485_data_process
        16   -> RDLevel_process
        16   -> dist_process
        16   -> tilt_process
       8   rs485_init
         8   -> BSP_SerInit
         8   -> DebugMsg
         8   -> GPIO_SetDir
         8   -> dist_init
         8   -> memset
         8   -> tilt_init
       8   rs485_quiry
         8   -> RDLevel_quiry
         8   -> dist_quiry
         8   -> tilt_quiry
       8   rs485_task
         8   -> OSTimeDly
         8   -> memset
         8   -> rs485_data_process
         8   -> rs485_quiry
       0   rs485_timer_handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant "Init RDlevel OK!\r\n">
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  curr_addr
      22  memset
     260  rs485_buf
      86  rs485_data_process
     124  rs485_init
     156  rs485_para
     120  rs485_queue
      68  rs485_quiry
       4  rs485_store_cnt
     256  rs485_task
       4  rs485_task_timeout
      20  rs485_timer_handler
       4  wr_last

 
 552 bytes in section .bss
  20 bytes in section .rodata
 612 bytes in section .text
 
 590 bytes of CODE  memory (+ 22 bytes shared)
  20 bytes of CONST memory
 552 bytes of DATA  memory

Errors: none
Warnings: none
