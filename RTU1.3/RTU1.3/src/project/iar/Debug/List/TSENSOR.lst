###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.6.4896/W32 for ARM      11/Mar/2017  15:34:35 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\bsp\TSens #
#                    or\TSENSOR.c                                             #
#    Command line =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\bsp\TSens #
#                    or\TSENSOR.c -lCN D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë #
#                    \RTU_1.2\project\iar\Debug\List\ -o                      #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\Debug\Obj\ --no_cse --no_unroll --no_inline           #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5_2\arm\INC\c\DLib_Config_F #
#                    ull.h" -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2 #
#                    \project\iar\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\ #
#                    RTU_1.2\project\iar\..\..\BSP\ -I                        #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\ADC\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´ #
#                    úÂë\RTU_1.2\project\iar\..\..\BSP\RTC\ -I                #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\TILT\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\ #
#                    ´úÂë\RTU_1.2\project\iar\..\..\BSP\RDLevel\ -I           #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\RS232\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU #
#                    \´úÂë\RTU_1.2\project\iar\..\..\BSP\OS-v2\ -I            #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\VibrationString\ -I                         #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\ucos2\uCOS-II\Ports\ARM-Cortex-M3\Generic\IAR\  #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\ucos2\uCOS-II\Source\ -I                     #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\ucos2\uC-LIB\ -I D:\wangfan2\×ÀÃæ\receiverfirm\ #
#                    RTU\´úÂë\RTU_1.2\project\iar\..\..\ucos2\uC-CPU\ -I      #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\ucos2\uC-CPU\ARM-Cortex-M3\IAR\ -I              #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\cmsis\Drivers\source\ -I                        #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\cmsis\Drivers\include\ -I                       #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\app\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\ #
#                    RTU_1.2\project\iar\..\..\uC-Probe\Target\Plugins\uCOS-I #
#                    I\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\pro #
#                    ject\iar\..\..\uC-Probe\Target\Demos\Intro\Workspaces\   #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\uC-Probe\Target\Demos\Intro\Source\ -I       #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\uC-Probe\Target\Communication\Generic\Source\   #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\uC-Probe\Target\Communication\Generic\RS-232 #
#                    \Source\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1 #
#                    .2\project\iar\..\..\uC-Probe\Target\Communication\Gener #
#                    ic\RS-232\Ports\NXP\LPC17xx\ -I                          #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\uC-Probe\Target\Communication\Generic\RS-232\OS #
#                    \uCOS-II\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_ #
#                    1.2\project\iar\..\..\cmsis\Core\CM3\CoreSupport\ -I     #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\cmsis\Core\CM3\DeviceSupport\NXP\LPC177x_8x\    #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\HuaceApp\ -I D:\wangfan2\×ÀÃæ\receiverfirm\R #
#                    TU\´úÂë\RTU_1.2\project\iar\..\..\HuaceApp\DEVICE_BT\    #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\HuaceApp\DEVICE_COM\ -I                      #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\DEVICE_GPRS\ -I                        #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\DEVICE_GPS\ -I                         #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\DEVICE_RADIO\ -I                       #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\iap\ -I D:\wangfan2\×ÀÃæ\receiverfirm\ #
#                    RTU\´úÂë\RTU_1.2\project\iar\..\..\FatFs\ -I             #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\USB\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\ #
#                    RTU_1.2\project\iar\..\..\bsp\spi_flash\ -I              #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\LED\ -On --use_c++_inline              #
#    List file    =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\Debug\List\TSENSOR.lst                                #
#    Object file  =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\Debug\Obj\TSENSOR.o                                   #
#                                                                             #
#                                                                             #
###############################################################################

D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\bsp\TSensor\TSENSOR.c
      1          #include "TSENSOR.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_EnableIRQ(IRQn_Type)
   \                     NVIC_EnableIRQ:
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000004   0x0941             LSRS     R1,R0,#+5
   \   00000006   0x.... 0x....      LDR.W    R2,??DataTable7  ;; 0xe000e100
   \   0000000A   0x2301             MOVS     R3,#+1
   \   0000000C   0xF010 0x041F      ANDS     R4,R0,#0x1F
   \   00000010   0x40A3             LSLS     R3,R3,R4
   \   00000012   0xF842 0x3021      STR      R3,[R2, R1, LSL #+2]
   \   00000016   0xBC10             POP      {R4}
   \   00000018   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_SetPriority(IRQn_Type, uint32_t)
   \                     NVIC_SetPriority:
   \   00000000   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD509             BPL.N    ??NVIC_SetPriority_0
   \   00000006   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000008   0xF010 0x020F      ANDS     R2,R0,#0xF
   \   0000000C   0x.... 0x....      LDR.W    R3,??DataTable7_1  ;; 0xe000ed18
   \   00000010   0x18D2             ADDS     R2,R2,R3
   \   00000012   0x00CB             LSLS     R3,R1,#+3
   \   00000014   0xF802 0x3C04      STRB     R3,[R2, #-4]
   \   00000018   0xE004             B.N      ??NVIC_SetPriority_1
   \                     ??NVIC_SetPriority_0:
   \   0000001A   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000001C   0x.... 0x....      LDR.W    R2,??DataTable7_2  ;; 0xe000e400
   \   00000020   0x00CB             LSLS     R3,R1,#+3
   \   00000022   0x5483             STRB     R3,[R0, R2]
   \                     ??NVIC_SetPriority_1:
   \   00000024   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __intrinsic __nounwind __interwork __softfp void *memset(void *, int, size_t)
   \                     memset:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x002A             MOVS     R2,R5
   \   0000000A   0x0031             MOVS     R1,R6
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_memset
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xBD70             POP      {R4-R6,PC}       ;; return
      2          

   \                                 In section .bss, align 4
      3          uint32_t cap_st[CAPATURE_TIMES];
   \                     cap_st:
   \   00000000                      DS8 40

   \                                 In section .bss, align 4
      4          uint32_t cap_tt[CAPATURE_TIMES];
   \                     cap_tt:
   \   00000000                      DS8 40
      5          

   \                                 In section .bss, align 4
      6          static uint32_t cap_st_idx,cap_tt_idx;
   \                     cap_st_idx:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     cap_tt_idx:
   \   00000000                      DS8 4
      7          
      8          static void tsensor_timer_init(void);  //TSENSOR ×¨ÓÃ
      9          

   \                                 In section .bss, align 4
     10          static uint32_t tsensor_timeout;
   \                     tsensor_timeout:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     11          static TSENSOR_OPS sensor_ops;
   \                     sensor_ops:
   \   00000000                      DS8 1
     12          
     13          /** ÈÈÃôµç×èR/T¶ÔÕÕ±í 3950 **/

   \                                 In section .rodata, align 4
     14          const int32_t  tsensor_table[]=
   \                     tsensor_table:
   \   00000000   0x00040857         DC32 264279, 250344, 237130, 224603, 212733, 201487, 190836, 180750
   \              0x0003D1E8   
   \              0x00039E4A   
   \              0x00036D5B   
   \              0x00033EFD   
   \              0x0003130F   
   \              0x0002E974   
   \              0x0002C20E   
   \   00000020   0x00029CC1         DC32 171201, 162163, 153610, 145516, 137858, 130614, 123761, 117280
   \              0x00027973   
   \              0x0002580A   
   \              0x0002386C   
   \              0x00021A82   
   \              0x0001FE36   
   \              0x0001E371   
   \              0x0001CA20   
   \   00000040   0x0001B22D         DC32 111149, 105351, 99867, 94681, 89776, 85137, 80750, 76600, 72676
   \              0x00019B87   
   \              0x0001861B   
   \              0x000171D9   
   \              0x00015EB0   
   \              0x00014C91   
   \              0x00013B6E   
   \              0x00012B38   
   \              0x00011BE4   
   \   00000064   0x00010D63         DC32 68963, 65451, 62129, 58986, 56012, 53198, 50534, 48013, 45627
   \              0x0000FFAB   
   \              0x0000F2B1   
   \              0x0000E66A   
   \              0x0000DACC   
   \              0x0000CFCE   
   \              0x0000C566   
   \              0x0000BB8D   
   \              0x0000B23B   
   \   00000088   0x0000A968         DC32 43368, 41229, 39204, 37285, 35468, 33747, 32116, 30570, 29105
   \              0x0000A10D   
   \              0x00009924   
   \              0x000091A5   
   \              0x00008A8C   
   \              0x000083D3   
   \              0x00007D74   
   \              0x0000776A   
   \              0x000071B1   
   \   000000AC   0x00006C44         DC32 27716, 26399, 25150, 23965, 22842, 21776, 20764, 19783, 18892
   \              0x0000671F   
   \              0x0000623E   
   \              0x00005D9D   
   \              0x0000593A   
   \              0x00005510   
   \              0x0000511C   
   \              0x00004D47   
   \              0x000049CC   
   \   000000D0   0x0000466A         DC32 18026, 17204, 16423, 15681, 14976, 14306, 13669, 13063, 12487
   \              0x00004334   
   \              0x00004027   
   \              0x00003D41   
   \              0x00003A80   
   \              0x000037E2   
   \              0x00003565   
   \              0x00003307   
   \              0x000030C7   
   \   000000F4   0x00002EA3         DC32 11939, 11418, 10921, 10449, 10000, 9571, 9164, 8775, 8405, 8052
   \              0x00002C9A   
   \              0x00002AA9   
   \              0x000028D1   
   \              0x00002710   
   \              0x00002563   
   \              0x000023CC   
   \              0x00002247   
   \              0x000020D5   
   \              0x00001F74   
   \   0000011C   0x00001E24         DC32 7716, 7396, 7090, 6798, 6520, 6255, 6002, 5760, 5529, 5309, 5098
   \              0x00001CE4   
   \              0x00001BB2   
   \              0x00001A8E   
   \              0x00001978   
   \              0x0000186F   
   \              0x00001772   
   \              0x00001680   
   \              0x00001599   
   \              0x000014BD   
   \              0x000013EA   
   \   00000148   0x00001321         DC32 4897, 4704, 4521, 4345, 4177, 4016, 3863, 3716, 3588, 3440, 3311
   \              0x00001260   
   \              0x000011A9   
   \              0x000010F9   
   \              0x00001051   
   \              0x00000FB0   
   \              0x00000F17   
   \              0x00000E84   
   \              0x00000E04   
   \              0x00000D70   
   \              0x00000CEF   
   \   00000174   0x00000C74         DC32 3188, 3069, 2956, 2848, 2744, 2644, 2548, 2457, 2369, 2284, 2204
   \              0x00000BFD   
   \              0x00000B8C   
   \              0x00000B20   
   \              0x00000AB8   
   \              0x00000A54   
   \              0x000009F4   
   \              0x00000999   
   \              0x00000941   
   \              0x000008EC   
   \              0x0000089C   
   \   000001A0   0x0000084E         DC32 2126, 2051, 1980, 1911, 1845, 1782, 1721, 1663, 1606, 1552, 1500
   \              0x00000803   
   \              0x000007BC   
   \              0x00000777   
   \              0x00000735   
   \              0x000006F6   
   \              0x000006B9   
   \              0x0000067F   
   \              0x00000646   
   \              0x00000610   
   \              0x000005DC   
   \   000001CC   0x000005AA         DC32 1450, 1402, 1356, 1312, 1269, 1228, 1188, 1150, 1113, 1078, 1044
   \              0x0000057A   
   \              0x0000054C   
   \              0x00000520   
   \              0x000004F5   
   \              0x000004CC   
   \              0x000004A4   
   \              0x0000047E   
   \              0x00000459   
   \              0x00000436   
   \              0x00000414   
   \   000001F8   0x000003F3         DC32 1011, 979, 948, 919, 891, 863, 837, 811, 787, 763, 740, 718, 697
   \              0x000003D3   
   \              0x000003B4   
   \              0x00000397   
   \              0x0000037B   
   \              0x0000035F   
   \              0x00000345   
   \              0x0000032B   
   \              0x00000313   
   \              0x000002FB   
   \              0x000002E4   
   \              0x000002CE   
   \              0x000002B9   
   \   0000022C   0x000002A4         DC32 676, 657, 637, 619, 601, 584, 567
   \              0x00000291   
   \              0x0000027D   
   \              0x0000026B   
   \              0x00000259   
   \              0x00000248   
   \              0x00000237   
     15          {
     16          264279,250344,237130,224603,212733,201487,190836,180750,171201,162163,   // -40  --  -31
     17          153610,145516,137858,130614,123761,117280,111149,105351, 99867, 94681,   // -30  --  -21
     18           89776, 85137, 80750, 76600, 72676, 68963, 65451, 62129, 58986, 56012,   // -20  --  -11
     19           53198, 50534, 48013, 45627, 43368, 41229, 39204, 37285, 35468, 33747,   // -10  --  -1
     20           32116, 30570, 29105, 27716, 26399, 25150, 23965, 22842, 21776, 20764,   //  0   --  9
     21           19783, 18892, 18026, 17204, 16423, 15681, 14976, 14306, 13669, 13063,   //  10  --  19
     22           12487, 11939, 11418, 10921, 10449, 10000,  9571,  9164,  8775,  8405,   //  20  --  29
     23            8052,  7716,  7396,  7090,  6798,  6520,  6255,  6002,  5760,  5529,   //  30  --  39
     24            5309,  5098,  4897,  4704,  4521,  4345,  4177,  4016,  3863,  3716,   //  40  --  49
     25            3588,  3440,  3311,  3188,  3069,  2956,  2848,  2744,  2644,  2548,   //  50  --  59
     26            2457,  2369,  2284,  2204,  2126,  2051,  1980,  1911,  1845,  1782,   //  60  --  69
     27            1721,  1663,  1606,  1552,  1500,  1450,  1402,  1356,  1312,  1269,   //  70  --  79
     28            1228,  1188,  1150,  1113,  1078,  1044,  1011,   979,   948,   919,   //  80  --  89
     29             891,   863,   837,   811,   787,   763,   740,   718,   697,   676,   //  90  --  99
     30             657,   637,   619,   601,   584,   567,                               // 100  --  105
     31          };  
     32          
     33          #define TSENSOR_TABLE_CNT (sizeof(tsensor_table)/sizeof(*tsensor_table))
     34          

   \                                 In section .text, align 2, keep-with-next
     35          void tsensor_init(void)
     36          {
   \                     tsensor_init:
   \   00000000   0xB580             PUSH     {R7,LR}
     37              /** GPIO ³õÊ¼»¯ **/
     38            CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCGPIO, ENABLE);
   \   00000002   0x2101             MOVS     R1,#+1
   \   00000004   0xF44F 0x4000      MOV      R0,#+32768
   \   00000008   0x.... 0x....      BL       CLKPWR_ConfigPPWR
     39            
     40            /** ±äÁ¿³õÊ¼»¯ **/
     41            tsensor_timeout = 0;
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable7_3
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x6001             STR      R1,[R0, #+0]
     42            cap_st_idx = 0;
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x6001             STR      R1,[R0, #+0]
     43            cap_tt_idx = 0;
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable7_5
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x6001             STR      R1,[R0, #+0]
     44            
     45            sensor_ops = TSENSOR_DISCHARGE2;
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable7_6
   \   00000028   0x2102             MOVS     R1,#+2
   \   0000002A   0x7001             STRB     R1,[R0, #+0]
     46            
     47            memset(cap_st,0,sizeof(cap_st));
   \   0000002C   0x2228             MOVS     R2,#+40
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable7_7
   \   00000034   0x.... 0x....      BL       memset
     48            
     49            memset(cap_tt,0,sizeof(cap_tt));
   \   00000038   0x2228             MOVS     R2,#+40
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable7_8
   \   00000040   0x.... 0x....      BL       memset
     50            
     51            /** Òý½Å³õÊ¼»¯ **/
     52            
     53            GPIO_SetDir(TSENSOR_OUT_ST_PORT, TSENSOR_OUT_ST_PIN, GPIO_DIRECTION_OUTPUT);
   \   00000044   0x2201             MOVS     R2,#+1
   \   00000046   0xF44F 0x4100      MOV      R1,#+32768
   \   0000004A   0x2001             MOVS     R0,#+1
   \   0000004C   0x.... 0x....      BL       GPIO_SetDir
     54            
     55            PINSEL_SetPinMode(TSENSOR_OUT_ST_PORT, TSENSOR_OUT_ST_PNUM,PINSEL_BASICMODE_PLAINOUT);
   \   00000050   0x2200             MOVS     R2,#+0
   \   00000052   0x210F             MOVS     R1,#+15
   \   00000054   0x2001             MOVS     R0,#+1
   \   00000056   0x.... 0x....      BL       PINSEL_SetPinMode
     56            
     57            PINSEL_SetSlewMode(TSENSOR_OUT_ST_PORT, TSENSOR_OUT_ST_PNUM,ENABLE);
   \   0000005A   0x2201             MOVS     R2,#+1
   \   0000005C   0x210F             MOVS     R1,#+15
   \   0000005E   0x2001             MOVS     R0,#+1
   \   00000060   0x.... 0x....      BL       PINSEL_SetSlewMode
     58          
     59            PINSEL_SetHysMode (TSENSOR_OUT_ST_PORT, TSENSOR_OUT_ST_PNUM,DISABLE);
   \   00000064   0x2200             MOVS     R2,#+0
   \   00000066   0x210F             MOVS     R1,#+15
   \   00000068   0x2001             MOVS     R0,#+1
   \   0000006A   0x.... 0x....      BL       PINSEL_SetHysMode
     60          
     61            
     62            GPIO_SetDir(TSENSOR_OUT_TT_PORT, TSENSOR_OUT_TT_PIN, GPIO_DIRECTION_OUTPUT);
   \   0000006E   0x2201             MOVS     R2,#+1
   \   00000070   0xF45F 0x3180      MOVS     R1,#+65536
   \   00000074   0x2001             MOVS     R0,#+1
   \   00000076   0x.... 0x....      BL       GPIO_SetDir
     63            
     64            PINSEL_SetPinMode(TSENSOR_OUT_TT_PORT, TSENSOR_OUT_TT_PNUM,PINSEL_BASICMODE_PLAINOUT);
   \   0000007A   0x2200             MOVS     R2,#+0
   \   0000007C   0x2110             MOVS     R1,#+16
   \   0000007E   0x2001             MOVS     R0,#+1
   \   00000080   0x.... 0x....      BL       PINSEL_SetPinMode
     65            
     66            PINSEL_SetSlewMode(TSENSOR_OUT_TT_PORT, TSENSOR_OUT_TT_PNUM,ENABLE);
   \   00000084   0x2201             MOVS     R2,#+1
   \   00000086   0x2110             MOVS     R1,#+16
   \   00000088   0x2001             MOVS     R0,#+1
   \   0000008A   0x.... 0x....      BL       PINSEL_SetSlewMode
     67            
     68            PINSEL_SetHysMode (TSENSOR_OUT_TT_PORT, TSENSOR_OUT_TT_PNUM,DISABLE);
   \   0000008E   0x2200             MOVS     R2,#+0
   \   00000090   0x2110             MOVS     R1,#+16
   \   00000092   0x2001             MOVS     R0,#+1
   \   00000094   0x.... 0x....      BL       PINSEL_SetHysMode
     69          
     70            
     71            
     72            GPIO_SetDir(TSENSOR_IN_CAP_PORT, TSENSOR_IN_CAP_PIN, GPIO_DIRECTION_INPUT);
   \   00000098   0x2200             MOVS     R2,#+0
   \   0000009A   0xF44F 0x4180      MOV      R1,#+16384
   \   0000009E   0x2001             MOVS     R0,#+1
   \   000000A0   0x.... 0x....      BL       GPIO_SetDir
     73            
     74            PINSEL_SetPinMode(TSENSOR_IN_CAP_PORT, TSENSOR_IN_CAP_PNUM,PINSEL_BASICMODE_PLAINOUT);  
   \   000000A4   0x2200             MOVS     R2,#+0
   \   000000A6   0x210E             MOVS     R1,#+14
   \   000000A8   0x2001             MOVS     R0,#+1
   \   000000AA   0x.... 0x....      BL       PINSEL_SetPinMode
     75            
     76            PINSEL_SetSlewMode(TSENSOR_IN_CAP_PORT, TSENSOR_IN_CAP_PNUM,ENABLE);
   \   000000AE   0x2201             MOVS     R2,#+1
   \   000000B0   0x210E             MOVS     R1,#+14
   \   000000B2   0x2001             MOVS     R0,#+1
   \   000000B4   0x.... 0x....      BL       PINSEL_SetSlewMode
     77            
     78            PINSEL_SetHysMode (TSENSOR_IN_CAP_PORT, TSENSOR_IN_CAP_PNUM,DISABLE);
   \   000000B8   0x2200             MOVS     R2,#+0
   \   000000BA   0x210E             MOVS     R1,#+14
   \   000000BC   0x2001             MOVS     R0,#+1
   \   000000BE   0x.... 0x....      BL       PINSEL_SetHysMode
     79            /** ¶¨Ê±Æ÷³õÊ¼»¯ **/
     80            
     81            tsensor_timer_init();
   \   000000C2   0x.... 0x....      BL       tsensor_timer_init
     82          }
   \   000000C6   0xBD01             POP      {R0,PC}          ;; return
     83          

   \                                 In section .text, align 2, keep-with-next
     84          void tsensor_task(void)
     85          {
   \                     tsensor_task:
   \   00000000   0xB580             PUSH     {R7,LR}
     86            if( tsensor_timeout > 0)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable7_3
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xF040 0x8081      BNE.W    ??tsensor_task_0
     87              return;
     88            
     89            switch(sensor_ops)
   \                     ??tsensor_task_1:
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable7_6
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD005             BEQ.N    ??tsensor_task_2
   \   00000018   0x2802             CMP      R0,#+2
   \   0000001A   0xD03F             BEQ.N    ??tsensor_task_3
   \   0000001C   0xD31F             BCC.N    ??tsensor_task_4
   \   0000001E   0x2803             CMP      R0,#+3
   \   00000020   0xD058             BEQ.N    ??tsensor_task_5
   \   00000022   0xE075             B.N      ??tsensor_task_6
     90            {
     91            case TSENSOR_DISCHARGE:
     92              {
     93                sensor_ops = TSENSOR_CHARGE_S;
   \                     ??tsensor_task_2:
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable7_6
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0x7001             STRB     R1,[R0, #+0]
     94                
     95                GPIO_SetDir(TSENSOR_OUT_TT_PORT, TSENSOR_OUT_TT_PIN, GPIO_DIRECTION_INPUT);
   \   0000002C   0x2200             MOVS     R2,#+0
   \   0000002E   0xF45F 0x3180      MOVS     R1,#+65536
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0x.... 0x....      BL       GPIO_SetDir
     96                GPIO_SetDir(TSENSOR_OUT_ST_PORT, TSENSOR_OUT_ST_PIN, GPIO_DIRECTION_OUTPUT);
   \   00000038   0x2201             MOVS     R2,#+1
   \   0000003A   0xF44F 0x4100      MOV      R1,#+32768
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0x.... 0x....      BL       GPIO_SetDir
     97                
     98                GPIO_OutputValue(TSENSOR_OUT_ST_PORT, TSENSOR_OUT_ST_PIN,1);
   \   00000044   0x2201             MOVS     R2,#+1
   \   00000046   0xF44F 0x4100      MOV      R1,#+32768
   \   0000004A   0x2001             MOVS     R0,#+1
   \   0000004C   0x.... 0x....      BL       GPIO_OutputValue
     99                
    100                TSENSOR_TIMER->TC = 0;
   \   00000050   0x....             LDR.N    R0,??DataTable7_9  ;; 0x40090008
   \   00000052   0x2100             MOVS     R1,#+0
   \   00000054   0x6001             STR      R1,[R0, #+0]
    101                tsensor_timeout = 2;
   \   00000056   0x....             LDR.N    R0,??DataTable7_3
   \   00000058   0x2102             MOVS     R1,#+2
   \   0000005A   0x6001             STR      R1,[R0, #+0]
    102              }
    103              break;
   \   0000005C   0xE058             B.N      ??tsensor_task_6
    104            case TSENSOR_CHARGE_S:     //Í¨¹ý±ê³Æµç×è³äµç
    105              {
    106                sensor_ops = TSENSOR_DISCHARGE2;
   \                     ??tsensor_task_4:
   \   0000005E   0x....             LDR.N    R0,??DataTable7_6
   \   00000060   0x2102             MOVS     R1,#+2
   \   00000062   0x7001             STRB     R1,[R0, #+0]
    107                
    108                
    109                GPIO_SetDir(TSENSOR_OUT_ST_PORT, TSENSOR_OUT_ST_PIN, GPIO_DIRECTION_OUTPUT);
   \   00000064   0x2201             MOVS     R2,#+1
   \   00000066   0xF44F 0x4100      MOV      R1,#+32768
   \   0000006A   0x2001             MOVS     R0,#+1
   \   0000006C   0x.... 0x....      BL       GPIO_SetDir
    110                GPIO_SetDir(TSENSOR_OUT_TT_PORT, TSENSOR_OUT_TT_PIN, GPIO_DIRECTION_OUTPUT);
   \   00000070   0x2201             MOVS     R2,#+1
   \   00000072   0xF45F 0x3180      MOVS     R1,#+65536
   \   00000076   0x2001             MOVS     R0,#+1
   \   00000078   0x.... 0x....      BL       GPIO_SetDir
    111                
    112                GPIO_OutputValue(TSENSOR_OUT_ST_PORT, TSENSOR_OUT_ST_PIN,0);
   \   0000007C   0x2200             MOVS     R2,#+0
   \   0000007E   0xF44F 0x4100      MOV      R1,#+32768
   \   00000082   0x2001             MOVS     R0,#+1
   \   00000084   0x.... 0x....      BL       GPIO_OutputValue
    113                GPIO_OutputValue(TSENSOR_OUT_TT_PORT, TSENSOR_OUT_TT_PIN,0);
   \   00000088   0x2200             MOVS     R2,#+0
   \   0000008A   0xF45F 0x3180      MOVS     R1,#+65536
   \   0000008E   0x2001             MOVS     R0,#+1
   \   00000090   0x.... 0x....      BL       GPIO_OutputValue
    114                tsensor_timeout = 1;
   \   00000094   0x....             LDR.N    R0,??DataTable7_3
   \   00000096   0x2101             MOVS     R1,#+1
   \   00000098   0x6001             STR      R1,[R0, #+0]
    115                
    116              }
    117              break;
   \   0000009A   0xE039             B.N      ??tsensor_task_6
    118              
    119            case TSENSOR_DISCHARGE2:
    120              {
    121                sensor_ops = TSENSOR_CHARGE_T;
   \                     ??tsensor_task_3:
   \   0000009C   0x....             LDR.N    R0,??DataTable7_6
   \   0000009E   0x2103             MOVS     R1,#+3
   \   000000A0   0x7001             STRB     R1,[R0, #+0]
    122                
    123                GPIO_SetDir(TSENSOR_OUT_ST_PORT, TSENSOR_OUT_ST_PIN, GPIO_DIRECTION_INPUT);
   \   000000A2   0x2200             MOVS     R2,#+0
   \   000000A4   0xF44F 0x4100      MOV      R1,#+32768
   \   000000A8   0x2001             MOVS     R0,#+1
   \   000000AA   0x.... 0x....      BL       GPIO_SetDir
    124                GPIO_SetDir(TSENSOR_OUT_TT_PORT, TSENSOR_OUT_TT_PIN, GPIO_DIRECTION_OUTPUT);
   \   000000AE   0x2201             MOVS     R2,#+1
   \   000000B0   0xF45F 0x3180      MOVS     R1,#+65536
   \   000000B4   0x2001             MOVS     R0,#+1
   \   000000B6   0x.... 0x....      BL       GPIO_SetDir
    125          
    126                GPIO_OutputValue(TSENSOR_OUT_TT_PORT, TSENSOR_OUT_TT_PIN,1);
   \   000000BA   0x2201             MOVS     R2,#+1
   \   000000BC   0xF45F 0x3180      MOVS     R1,#+65536
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0x.... 0x....      BL       GPIO_OutputValue
    127                
    128                TSENSOR_TIMER->TC = 0;
   \   000000C6   0x....             LDR.N    R0,??DataTable7_9  ;; 0x40090008
   \   000000C8   0x2100             MOVS     R1,#+0
   \   000000CA   0x6001             STR      R1,[R0, #+0]
    129                
    130                tsensor_timeout = 1;
   \   000000CC   0x....             LDR.N    R0,??DataTable7_3
   \   000000CE   0x2101             MOVS     R1,#+1
   \   000000D0   0x6001             STR      R1,[R0, #+0]
    131              }
    132              break;
   \   000000D2   0xE01D             B.N      ??tsensor_task_6
    133            case TSENSOR_CHARGE_T:
    134              {
    135                sensor_ops = TSENSOR_DISCHARGE;
   \                     ??tsensor_task_5:
   \   000000D4   0x....             LDR.N    R0,??DataTable7_6
   \   000000D6   0x2100             MOVS     R1,#+0
   \   000000D8   0x7001             STRB     R1,[R0, #+0]
    136                
    137                GPIO_SetDir(TSENSOR_OUT_ST_PORT, TSENSOR_OUT_ST_PIN, GPIO_DIRECTION_OUTPUT);
   \   000000DA   0x2201             MOVS     R2,#+1
   \   000000DC   0xF44F 0x4100      MOV      R1,#+32768
   \   000000E0   0x2001             MOVS     R0,#+1
   \   000000E2   0x.... 0x....      BL       GPIO_SetDir
    138                GPIO_SetDir(TSENSOR_OUT_TT_PORT, TSENSOR_OUT_TT_PIN, GPIO_DIRECTION_OUTPUT);
   \   000000E6   0x2201             MOVS     R2,#+1
   \   000000E8   0xF45F 0x3180      MOVS     R1,#+65536
   \   000000EC   0x2001             MOVS     R0,#+1
   \   000000EE   0x.... 0x....      BL       GPIO_SetDir
    139                
    140                GPIO_OutputValue(TSENSOR_OUT_ST_PORT, TSENSOR_OUT_ST_PIN,0);
   \   000000F2   0x2200             MOVS     R2,#+0
   \   000000F4   0xF44F 0x4100      MOV      R1,#+32768
   \   000000F8   0x2001             MOVS     R0,#+1
   \   000000FA   0x.... 0x....      BL       GPIO_OutputValue
    141                GPIO_OutputValue(TSENSOR_OUT_TT_PORT, TSENSOR_OUT_TT_PIN,0);
   \   000000FE   0x2200             MOVS     R2,#+0
   \   00000100   0xF45F 0x3180      MOVS     R1,#+65536
   \   00000104   0x2001             MOVS     R0,#+1
   \   00000106   0x.... 0x....      BL       GPIO_OutputValue
    142                tsensor_timeout = 4;
   \   0000010A   0x....             LDR.N    R0,??DataTable7_3
   \   0000010C   0x2104             MOVS     R1,#+4
   \   0000010E   0x6001             STR      R1,[R0, #+0]
    143          
    144              }
    145              break;
    146            }
    147          }
   \                     ??tsensor_task_6:
   \                     ??tsensor_task_0:
   \   00000110   0xBD01             POP      {R0,PC}          ;; return
    148          

   \                                 In section .text, align 2, keep-with-next
    149          float tsensor_get_t(void)
    150          {
   \                     tsensor_get_t:
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
    151            uint32_t sum_st = 0 ,sum_tt = 0;
   \   00000004   0x2700             MOVS     R7,#+0
   \   00000006   0x2600             MOVS     R6,#+0
    152            uint8_t cnt_st,cnt_tt;
    153            int32_t res_t;
    154            
    155            cnt_st = 0;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x0004             MOVS     R4,R0
    156            cnt_tt = 0;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x0005             MOVS     R5,R0
    157            
    158            for( int i = 0; i < 10; i++)
   \   00000010   0x2000             MOVS     R0,#+0
   \                     ??tsensor_get_t_0:
   \   00000012   0x280A             CMP      R0,#+10
   \   00000014   0xDA11             BGE.N    ??tsensor_get_t_1
    159            {
    160              if( (cap_st[i] >= TSENSOR_CAP_MIN) && (cap_st[i] <= TSENSOR_CAP_MAX))
   \   00000016   0x....             LDR.N    R1,??DataTable7_7
   \   00000018   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   0000001C   0x2900             CMP      R1,#+0
   \   0000001E   0xD00A             BEQ.N    ??tsensor_get_t_2
   \   00000020   0x....             LDR.N    R1,??DataTable7_7
   \   00000022   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000026   0x....             LDR.N    R2,??DataTable7_10  ;; 0x5b8d81
   \   00000028   0x4291             CMP      R1,R2
   \   0000002A   0xD204             BCS.N    ??tsensor_get_t_2
    161              {
    162                sum_st += cap_st[i];
   \   0000002C   0x....             LDR.N    R1,??DataTable7_7
   \   0000002E   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000032   0x19CF             ADDS     R7,R1,R7
    163                cnt_st ++;
   \   00000034   0x1C64             ADDS     R4,R4,#+1
    164              }
    165            }
   \                     ??tsensor_get_t_2:
   \   00000036   0x1C40             ADDS     R0,R0,#+1
   \   00000038   0xE7EB             B.N      ??tsensor_get_t_0
    166            
    167            for( int i = 0; i < 10; i++)
   \                     ??tsensor_get_t_1:
   \   0000003A   0x2000             MOVS     R0,#+0
   \                     ??tsensor_get_t_3:
   \   0000003C   0x280A             CMP      R0,#+10
   \   0000003E   0xDA11             BGE.N    ??tsensor_get_t_4
    168            {
    169              if( (cap_tt[i] >= TSENSOR_CAP_MIN) && (cap_tt[i] <= TSENSOR_CAP_MAX))
   \   00000040   0x....             LDR.N    R1,??DataTable7_8
   \   00000042   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000046   0x2900             CMP      R1,#+0
   \   00000048   0xD00A             BEQ.N    ??tsensor_get_t_5
   \   0000004A   0x....             LDR.N    R1,??DataTable7_8
   \   0000004C   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000050   0x....             LDR.N    R2,??DataTable7_10  ;; 0x5b8d81
   \   00000052   0x4291             CMP      R1,R2
   \   00000054   0xD204             BCS.N    ??tsensor_get_t_5
    170              {
    171                sum_tt += cap_tt[i];
   \   00000056   0x....             LDR.N    R1,??DataTable7_8
   \   00000058   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   0000005C   0x198E             ADDS     R6,R1,R6
    172                cnt_tt ++;
   \   0000005E   0x1C6D             ADDS     R5,R5,#+1
    173              }
    174            }
   \                     ??tsensor_get_t_5:
   \   00000060   0x1C40             ADDS     R0,R0,#+1
   \   00000062   0xE7EB             B.N      ??tsensor_get_t_3
    175            
    176            if( ( cnt_st == 0) || (cnt_tt == 0))
   \                     ??tsensor_get_t_4:
   \   00000064   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000066   0x2C00             CMP      R4,#+0
   \   00000068   0xD002             BEQ.N    ??tsensor_get_t_6
   \   0000006A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000006C   0x2D00             CMP      R5,#+0
   \   0000006E   0xD101             BNE.N    ??tsensor_get_t_7
    177            {
    178              return 0.0f;
   \                     ??tsensor_get_t_6:
   \   00000070   0x2000             MOVS     R0,#+0
   \   00000072   0xE07C             B.N      ??tsensor_get_t_8
    179            }
    180            
    181              sum_tt /= cnt_tt;
   \                     ??tsensor_get_t_7:
   \   00000074   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000076   0xFBB6 0xF6F5      UDIV     R6,R6,R5
    182              sum_st /= cnt_st;
   \   0000007A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007C   0xFBB7 0xF7F4      UDIV     R7,R7,R4
    183            
    184            res_t =(uint32_t)( RES_ST_VALUE * 1.0f * sum_tt / sum_st);
   \   00000080   0x0030             MOVS     R0,R6
   \   00000082   0x.... 0x....      BL       __aeabi_ui2f
   \   00000086   0x....             LDR.N    R1,??DataTable7_11  ;; 0x461c4000
   \   00000088   0x.... 0x....      BL       __aeabi_fmul
   \   0000008C   0x4680             MOV      R8,R0
   \   0000008E   0x0038             MOVS     R0,R7
   \   00000090   0x.... 0x....      BL       __aeabi_ui2f
   \   00000094   0x0001             MOVS     R1,R0
   \   00000096   0x4640             MOV      R0,R8
   \   00000098   0x.... 0x....      BL       __aeabi_fdiv
   \   0000009C   0x.... 0x....      BL       __aeabi_f2uiz
   \   000000A0   0x4683             MOV      R11,R0
    185            
    186            /** 2·Ö²éÕÒ **/
    187            int16_t cmp_mid,cmp_low,cmp_high;
    188          
    189            cmp_low = 0;
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x4681             MOV      R9,R0
    190            cmp_high = TSENSOR_TABLE_CNT -1;
   \   000000A6   0x2091             MOVS     R0,#+145
   \   000000A8   0x4682             MOV      R10,R0
    191            cmp_mid = (cmp_low + cmp_high)/2;
   \   000000AA   0xFA0F 0xF989      SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
   \   000000AE   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000000B2   0xEB1A 0x0009      ADDS     R0,R10,R9
   \   000000B6   0x2102             MOVS     R1,#+2
   \   000000B8   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000BC   0x4680             MOV      R8,R0
    192            
    193            while( cmp_low < cmp_high)
   \                     ??tsensor_get_t_9:
   \   000000BE   0xFA0F 0xF989      SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
   \   000000C2   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000000C6   0x45D1             CMP      R9,R10
   \   000000C8   0xDA1F             BGE.N    ??tsensor_get_t_10
    194            {  
    195              if( res_t > tsensor_table[cmp_mid])
   \   000000CA   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000CE   0x....             LDR.N    R0,??DataTable7_12
   \   000000D0   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   000000D4   0x4558             CMP      R0,R11
   \   000000D6   0xDA01             BGE.N    ??tsensor_get_t_11
    196              {
    197                cmp_high = cmp_mid;
   \   000000D8   0x46C2             MOV      R10,R8
   \   000000DA   0xE00B             B.N      ??tsensor_get_t_12
    198              }
    199              else if (res_t < tsensor_table[cmp_mid])
   \                     ??tsensor_get_t_11:
   \   000000DC   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000E0   0x....             LDR.N    R0,??DataTable7_12
   \   000000E2   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   000000E6   0x4583             CMP      R11,R0
   \   000000E8   0xDA03             BGE.N    ??tsensor_get_t_13
    200              {
    201                cmp_high--;
   \   000000EA   0xF1BA 0x0A01      SUBS     R10,R10,#+1
    202                cmp_low = cmp_mid;
   \   000000EE   0x46C1             MOV      R9,R8
   \   000000F0   0xE000             B.N      ??tsensor_get_t_12
    203              }
    204              else
    205              {
    206                break;
   \                     ??tsensor_get_t_13:
   \   000000F2   0xE00A             B.N      ??tsensor_get_t_10
    207              }
    208              
    209              cmp_mid = (cmp_low + cmp_high)/2;
   \                     ??tsensor_get_t_12:
   \   000000F4   0xFA0F 0xF989      SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
   \   000000F8   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000000FC   0xEB1A 0x0009      ADDS     R0,R10,R9
   \   00000100   0x2102             MOVS     R1,#+2
   \   00000102   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000106   0x4680             MOV      R8,R0
   \   00000108   0xE7D9             B.N      ??tsensor_get_t_9
    210            }
    211            
    212            if( cmp_mid ==(TSENSOR_TABLE_CNT -1) )
   \                     ??tsensor_get_t_10:
   \   0000010A   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000010E   0xF1B8 0x0F91      CMP      R8,#+145
   \   00000112   0xD101             BNE.N    ??tsensor_get_t_14
    213            {
    214              return (float)(TSENSOR_TABLE_CNT -1-40);
   \   00000114   0x....             LDR.N    R0,??DataTable7_13  ;; 0x42d20000
   \   00000116   0xE02A             B.N      ??tsensor_get_t_8
    215            }
    216            else
    217            {
    218              res_t -= tsensor_table[cmp_mid];
   \                     ??tsensor_get_t_14:
   \   00000118   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000011C   0x....             LDR.N    R0,??DataTable7_12
   \   0000011E   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   00000122   0xEBBB 0x0B00      SUBS     R11,R11,R0
    219              
    220              return (float)(cmp_mid - 40 + res_t * 1.0f / ( tsensor_table[cmp_mid+1] - tsensor_table[cmp_mid]));
   \   00000126   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000012A   0xF1B8 0x0028      SUBS     R0,R8,#+40
   \   0000012E   0x.... 0x....      BL       __aeabi_i2f
   \   00000132   0x9000             STR      R0,[SP, #+0]
   \   00000134   0x4658             MOV      R0,R11
   \   00000136   0x.... 0x....      BL       __aeabi_i2f
   \   0000013A   0xF05F 0x517E      MOVS     R1,#+1065353216
   \   0000013E   0x.... 0x....      BL       __aeabi_fmul
   \   00000142   0x4683             MOV      R11,R0
   \   00000144   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000148   0x....             LDR.N    R0,??DataTable7_12
   \   0000014A   0xEB10 0x0088      ADDS     R0,R0,R8, LSL #+2
   \   0000014E   0x6840             LDR      R0,[R0, #+4]
   \   00000150   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000154   0x....             LDR.N    R1,??DataTable7_12
   \   00000156   0xF851 0x1028      LDR      R1,[R1, R8, LSL #+2]
   \   0000015A   0x1A40             SUBS     R0,R0,R1
   \   0000015C   0x.... 0x....      BL       __aeabi_i2f
   \   00000160   0x0001             MOVS     R1,R0
   \   00000162   0x4658             MOV      R0,R11
   \   00000164   0x.... 0x....      BL       __aeabi_fdiv
   \   00000168   0x9900             LDR      R1,[SP, #+0]
   \   0000016A   0x.... 0x....      BL       __aeabi_fadd
   \                     ??tsensor_get_t_8:
   \   0000016E   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
    221            }
    222          
    223            //return  ( RES_ST_VALUE * 1.0f * (sum_tt- 42300)  / (sum_st- 41700));
    224            
    225            //timer2_start();
    226          }
    227          
    228          

   \                                 In section .text, align 2, keep-with-next
    229          static void tsensor_timer_init(void)
    230          {
   \                     tsensor_timer_init:
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
    231            TIM_TIMERCFG_Type TIM_ConfigStruct;
    232            TIM_CAPTURECFG_Type TIM_CaptureConfigStruct;
    233          
    234            /** ¶¨Ê±Æ÷ÅäÖÃ -------------------------------------*/
    235            
    236            CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCTIM2, ENABLE);
   \   00000002   0x2101             MOVS     R1,#+1
   \   00000004   0xF45F 0x0080      MOVS     R0,#+4194304
   \   00000008   0x.... 0x....      BL       CLKPWR_ConfigPPWR
    237            
    238            TSENSOR_TIMER->MCR = 0x00;
   \   0000000C   0x....             LDR.N    R0,??DataTable7_14  ;; 0x40090014
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x6001             STR      R1,[R0, #+0]
    239            
    240            //TIM_DeInit(TSENSOR_TIMER);
    241            //TIM_Cmd(TSENSOR_TIMER, DISABLE);
    242            
    243            TIM_ConfigStruct.PrescaleOption = TIM_PRESCALE_TICKVAL;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xF88D 0x0004      STRB     R0,[SP, #+4]
    244            TIM_ConfigStruct.PrescaleValue  = 1;
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x9002             STR      R0,[SP, #+8]
    245            
    246            // Set configuration for Tim_config and Tim_MatchConfig
    247            TIM_Init(TSENSOR_TIMER, TIM_TIMER_MODE, &TIM_ConfigStruct);
   \   0000001C   0xAA01             ADD      R2,SP,#+4
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x....             LDR.N    R0,??DataTable7_15  ;; 0x40090000
   \   00000022   0x.... 0x....      BL       TIM_Init
    248            
    249            /** ²¶×½ÅäÖÃ ---------------------------------------*/
    250            
    251            //Config pin as CAPATURE function
    252            PINSEL_ConfigPin(TSENSOR_IN_CAP_PORT, TSENSOR_IN_CAP_PNUM, 3);
   \   00000026   0x2203             MOVS     R2,#+3
   \   00000028   0x210E             MOVS     R1,#+14
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       PINSEL_ConfigPin
    253                  
    254            // use channel 0
    255            TIM_CaptureConfigStruct.CaptureChannel = 0;
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0xF88D 0x0000      STRB     R0,[SP, #+0]
    256          
    257            TIM_CaptureConfigStruct.RisingEdge = ENABLE;
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0xF88D 0x0001      STRB     R0,[SP, #+1]
    258          
    259            TIM_CaptureConfigStruct.FallingEdge = ENABLE;
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0xF88D 0x0002      STRB     R0,[SP, #+2]
    260            
    261            // Generate capture interrupt
    262            TIM_CaptureConfigStruct.IntOnCaption = ENABLE;
   \   00000042   0x2001             MOVS     R0,#+1
   \   00000044   0xF88D 0x0003      STRB     R0,[SP, #+3]
    263            
    264            TIM_ConfigCapture(TSENSOR_TIMER, &TIM_CaptureConfigStruct);
   \   00000048   0xA900             ADD      R1,SP,#+0
   \   0000004A   0x....             LDR.N    R0,??DataTable7_15  ;; 0x40090000
   \   0000004C   0x.... 0x....      BL       TIM_ConfigCapture
    265          
    266            /** ¶¨Ê±Æ÷ÖÐ¶ÏÅäÖÃ ----------------------------------*/
    267            
    268            /* preemption = 1, sub-priority = 1 */
    269            NVIC_SetPriority(TSENSOR_TIM_IRQn, ((0x01<<3)|0x01));
   \   00000050   0x2109             MOVS     R1,#+9
   \   00000052   0x2003             MOVS     R0,#+3
   \   00000054   0x.... 0x....      BL       NVIC_SetPriority
    270            
    271            /* Enable interrupt for timer 0 */
    272            NVIC_EnableIRQ(TSENSOR_TIM_IRQn);
   \   00000058   0x2003             MOVS     R0,#+3
   \   0000005A   0x.... 0x....      BL       NVIC_EnableIRQ
    273            
    274            /** ¿ª¶¨Ê±Æ÷ ----------------------------------------*/
    275            
    276            TIM_Cmd(TSENSOR_TIMER, ENABLE);
   \   0000005E   0x2101             MOVS     R1,#+1
   \   00000060   0x....             LDR.N    R0,??DataTable7_15  ;; 0x40090000
   \   00000062   0x.... 0x....      BL       TIM_Cmd
    277            
    278          }
   \   00000066   0xBD07             POP      {R0-R2,PC}       ;; return
    279          

   \                                 In section .text, align 2, keep-with-next
    280          void TSENSOR_TIM_IRQ_HANDLER(void)
    281          {
   \                     TIMER2_IRQHandler:
   \   00000000   0xB580             PUSH     {R7,LR}
    282            if ( TIM_GetIntCaptureStatus(TSENSOR_TIMER, TIM_CR0_INT))
   \   00000002   0x2104             MOVS     R1,#+4
   \   00000004   0x....             LDR.N    R0,??DataTable7_15  ;; 0x40090000
   \   00000006   0x.... 0x....      BL       TIM_GetIntCaptureStatus
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD035             BEQ.N    ??TIMER2_IRQHandler_0
    283            {
    284              switch(sensor_ops)
   \   0000000E   0x....             LDR.N    R0,??DataTable7_6
   \   00000010   0x7800             LDRB     R0,[R0, #+0]
   \   00000012   0x2801             CMP      R0,#+1
   \   00000014   0xD002             BEQ.N    ??TIMER2_IRQHandler_1
   \   00000016   0x2803             CMP      R0,#+3
   \   00000018   0xD016             BEQ.N    ??TIMER2_IRQHandler_2
   \   0000001A   0xE02A             B.N      ??TIMER2_IRQHandler_3
    285              {
    286              case TSENSOR_CHARGE_S:
    287                {
    288                  cap_st[cap_st_idx++] = TSENSOR_TIMER->CR0;
   \                     ??TIMER2_IRQHandler_1:
   \   0000001C   0x....             LDR.N    R0,??DataTable7_4
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0x....             LDR.N    R1,??DataTable7_7
   \   00000022   0x....             LDR.N    R2,??DataTable7_16  ;; 0x4009002c
   \   00000024   0x6812             LDR      R2,[R2, #+0]
   \   00000026   0xF841 0x2020      STR      R2,[R1, R0, LSL #+2]
   \   0000002A   0x....             LDR.N    R0,??DataTable7_4
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x1C40             ADDS     R0,R0,#+1
   \   00000030   0x....             LDR.N    R1,??DataTable7_4
   \   00000032   0x6008             STR      R0,[R1, #+0]
    289                  cap_st_idx %= CAPATURE_TIMES;
   \   00000034   0x....             LDR.N    R0,??DataTable7_4
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0x210A             MOVS     R1,#+10
   \   0000003A   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000003E   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000042   0x....             LDR.N    R1,??DataTable7_4
   \   00000044   0x6008             STR      R0,[R1, #+0]
    290                }
    291                break;
   \   00000046   0xE014             B.N      ??TIMER2_IRQHandler_3
    292            
    293              case TSENSOR_CHARGE_T:
    294                {
    295                  cap_tt[cap_tt_idx++] = TSENSOR_TIMER->CR0; 
   \                     ??TIMER2_IRQHandler_2:
   \   00000048   0x....             LDR.N    R0,??DataTable7_5
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0x....             LDR.N    R1,??DataTable7_8
   \   0000004E   0x....             LDR.N    R2,??DataTable7_16  ;; 0x4009002c
   \   00000050   0x6812             LDR      R2,[R2, #+0]
   \   00000052   0xF841 0x2020      STR      R2,[R1, R0, LSL #+2]
   \   00000056   0x....             LDR.N    R0,??DataTable7_5
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x1C40             ADDS     R0,R0,#+1
   \   0000005C   0x....             LDR.N    R1,??DataTable7_5
   \   0000005E   0x6008             STR      R0,[R1, #+0]
    296                  cap_tt_idx %= CAPATURE_TIMES;
   \   00000060   0x....             LDR.N    R0,??DataTable7_5
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0x210A             MOVS     R1,#+10
   \   00000066   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000006A   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000006E   0x....             LDR.N    R1,??DataTable7_5
   \   00000070   0x6008             STR      R0,[R1, #+0]
    297                }
    298                break;
    299              }
    300              TIM_ClearIntCapturePending(TSENSOR_TIMER, TIM_CR0_INT);
   \                     ??TIMER2_IRQHandler_3:
   \   00000072   0x2104             MOVS     R1,#+4
   \   00000074   0x....             LDR.N    R0,??DataTable7_15  ;; 0x40090000
   \   00000076   0x.... 0x....      BL       TIM_ClearIntCapturePending
    301            }
    302          }
   \                     ??TIMER2_IRQHandler_0:
   \   0000007A   0xBD01             POP      {R0,PC}          ;; return
    303          

   \                                 In section .text, align 2, keep-with-next
    304          void tsensor_time_handler(void)
    305          {//25msÖÐ¶Ï
    306            if( tsensor_timeout > 0)
   \                     tsensor_time_handler:
   \   00000000   0x....             LDR.N    R0,??DataTable7_3
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD004             BEQ.N    ??tsensor_time_handler_0
    307              tsensor_timeout--;
   \   00000008   0x....             LDR.N    R0,??DataTable7_3
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x1E40             SUBS     R0,R0,#+1
   \   0000000E   0x....             LDR.N    R1,??DataTable7_3
   \   00000010   0x6008             STR      R0,[R1, #+0]
    308          }
   \                     ??tsensor_time_handler_0:
   \   00000012   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0xE000ED18         DC32     0xe000ed18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0xE000E400         DC32     0xe000e400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     tsensor_timeout

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     cap_st_idx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     cap_tt_idx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     sensor_ops

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     cap_st

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x........         DC32     cap_tt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x40090008         DC32     0x40090008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   0x005B8D81         DC32     0x5b8d81

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   0x461C4000         DC32     0x461c4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   0x........         DC32     tsensor_table

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \   00000000   0x42D20000         DC32     0x42d20000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_14:
   \   00000000   0x40090014         DC32     0x40090014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_15:
   \   00000000   0x40090000         DC32     0x40090000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_16:
   \   00000000   0x4009002C         DC32     0x4009002c

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   NVIC_EnableIRQ
       0   NVIC_SetPriority
       8   TIMER2_IRQHandler
         8   -> TIM_ClearIntCapturePending
         8   -> TIM_GetIntCaptureStatus
      16   memset
        16   -> __aeabi_memset
      40   tsensor_get_t
        40   -> __aeabi_f2uiz
        40   -> __aeabi_fadd
        40   -> __aeabi_fdiv
        40   -> __aeabi_fmul
        40   -> __aeabi_i2f
        40   -> __aeabi_ui2f
       8   tsensor_init
         8   -> CLKPWR_ConfigPPWR
         8   -> GPIO_SetDir
         8   -> PINSEL_SetHysMode
         8   -> PINSEL_SetPinMode
         8   -> PINSEL_SetSlewMode
         8   -> memset
         8   -> tsensor_timer_init
       8   tsensor_task
         8   -> GPIO_OutputValue
         8   -> GPIO_SetDir
       0   tsensor_time_handler
      16   tsensor_timer_init
        16   -> CLKPWR_ConfigPPWR
        16   -> NVIC_EnableIRQ
        16   -> NVIC_SetPriority
        16   -> PINSEL_ConfigPin
        16   -> TIM_Cmd
        16   -> TIM_ConfigCapture
        16   -> TIM_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_14
       4  ??DataTable7_15
       4  ??DataTable7_16
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
      26  NVIC_EnableIRQ
      38  NVIC_SetPriority
     124  TIMER2_IRQHandler
      40  cap_st
       4  cap_st_idx
      40  cap_tt
       4  cap_tt_idx
      22  memset
       1  sensor_ops
     370  tsensor_get_t
     200  tsensor_init
     584  tsensor_table
     274  tsensor_task
      20  tsensor_time_handler
       4  tsensor_timeout
     104  tsensor_timer_init

 
    93 bytes in section .bss
   584 bytes in section .rodata
 1 246 bytes in section .text
 
 1 224 bytes of CODE  memory (+ 22 bytes shared)
   584 bytes of CONST memory
    93 bytes of DATA  memory

Errors: none
Warnings: none
