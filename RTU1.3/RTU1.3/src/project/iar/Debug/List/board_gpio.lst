###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.6.4896/W32 for ARM      26/Mar/2017  12:36:35 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\wangfan2\桌面\RTU_1.2\bsp\board_gpio.c                #
#    Command line =  D:\wangfan2\桌面\RTU_1.2\bsp\board_gpio.c -lCN           #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\List\ -o      #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\Obj\          #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5_2\arm\INC\c\DLib_Config_F #
#                    ull.h" -I D:\wangfan2\桌面\RTU_1.2\project\iar\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\ADC\ -I   #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RTC\ -I   #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\TILT\ -I  #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RDLevel\  #
#                    -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RS232\ #
#                     -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\OS-v2 #
#                    \ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\Vibr #
#                    ationString\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\ #
#                    ..\ucos2\uCOS-II\Ports\ARM-Cortex-M3\Generic\IAR\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\ucos2\uCOS-II #
#                    \Source\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\u #
#                    cos2\uC-LIB\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\ #
#                    ..\ucos2\uC-CPU\ -I D:\wangfan2\桌面\RTU_1.2\project\iar #
#                    \..\..\ucos2\uC-CPU\ARM-Cortex-M3\IAR\ -I                #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\cmsis\Drivers #
#                    \source\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\c #
#                    msis\Drivers\include\ -I D:\wangfan2\桌面\RTU_1.2\projec #
#                    t\iar\..\..\app\ -I D:\wangfan2\桌面\RTU_1.2\project\iar #
#                    \..\..\uC-Probe\Target\Plugins\uCOS-II\ -I               #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Demos\Intro\Workspaces\ -I                            #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Demos\Intro\Source\ -I D:\wangfan2\桌面\RTU_1.2\proje #
#                    ct\iar\..\..\uC-Probe\Target\Communication\Generic\Sourc #
#                    e\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Prob #
#                    e\Target\Communication\Generic\RS-232\Source\ -I         #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Communication\Generic\RS-232\Ports\NXP\LPC17xx\ -I    #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Communication\Generic\RS-232\OS\uCOS-II\ -I           #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\cmsis\Core\CM #
#                    3\CoreSupport\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\. #
#                    .\..\cmsis\Core\CM3\DeviceSupport\NXP\LPC177x_8x\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\ -I  #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\DEVI #
#                    CE_BT\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\Hua #
#                    ceApp\DEVICE_COM\ -I D:\wangfan2\桌面\RTU_1.2\project\ia #
#                    r\..\..\HuaceApp\DEVICE_GPRS\ -I                         #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\DEVI #
#                    CE_GPS\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\Hu #
#                    aceApp\DEVICE_RADIO\ -I D:\wangfan2\桌面\RTU_1.2\project #
#                    \iar\..\..\HuaceApp\iap\ -I                              #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\FatFs\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\USB\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\bsp\spi_flash #
#                    \ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp #
#                    \LED\ -On --use_c++_inline                               #
#    List file    =  D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\List\board_gp #
#                    io.lst                                                   #
#    Object file  =  D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\Obj\board_gpi #
#                    o.o                                                      #
#                                                                             #
#                                                                             #
###############################################################################

D:\wangfan2\桌面\RTU_1.2\bsp\board_gpio.c
      1          /***********************************************************************//**
      2          * @file		Gpio.c
      3          * @purpose		This example describes how to use GPIO to drive
      4          * 			  	LEDs and Switch
      5          * @version		1.0
      6          * @date		18. September. 2010
      7          * @author		NXP MCU SW Application Team
      8          *---------------------------------------------------------------------
      9          * Software that is described herein is for illustrative purposes only
     10          * which provides customers with programming information regarding the
     11          * products. This software is supplied "AS IS" without any warranties.
     12          * NXP Semiconductors assumes no responsibility or liability for the
     13          * use of the software, conveys no license or title under any patent,
     14          * copyright, or mask work right to the product. NXP Semiconductors
     15          * reserves the right to make changes in the software without
     16          * notification. NXP Semiconductors also make no representation or
     17          * warranty that such application will be suitable for the specified
     18          * use without further testing or modification.
     19          **********************************************************************/
     20          #include "includes.h"
     21          void GPIO_IRQHandler(void);
     22          

   \                                 In section .text, align 2, keep-with-next
     23          void GPIO_IRQHandler(void)//xf
     24          {
   \                     GPIO_IRQHandler:
   \   00000000   0xB580             PUSH     {R7,LR}
     25              if(GPIO_GetIntStatus(BRD_PIO_KEY_INTR_PORT, BRD_PIO_KEY_INTR_PIN, 1))
   \   00000002   0x2201             MOVS     R2,#+1
   \   00000004   0x2119             MOVS     R1,#+25
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       GPIO_GetIntStatus
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD007             BEQ.N    ??GPIO_IRQHandler_0
     26              {
     27                  GPIO_ClearInt(BRD_PIO_KEY_INTR_PORT, BRD_PIO_KEY_INTR_MASK);
   \   00000010   0xF05F 0x7100      MOVS     R1,#+33554432
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      BL       GPIO_ClearInt
     28                  g_KeyPower = 1;
   \   0000001A   0x....             LDR.N    R0,??DataTable0
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x7001             STRB     R1,[R0, #+0]
     29              }
     30          }
   \                     ??GPIO_IRQHandler_0:
   \   00000020   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     31          void Board_Gpio_Init(void)//xf
     32          {
   \                     Board_Gpio_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
     33              /*
     34              // Enable GPIO interrupt that connects with ADC potentiometer
     35              GPIO_IntCmd(BRD_PIO_KEY_INTR_PORT, BRD_PIO_KEY_INTR_MASK, 1);
     36              NVIC_SetPriority(GPIO_IRQn, 1);
     37              NVIC_EnableIRQ(GPIO_IRQn);
     38              */
     39          
     40              GPIO_SetDir(BRD_PIO_KEY_INTR_PORT, BRD_PIO_KEY_INTR_MASK, GPIO_DIRECTION_INPUT);
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0xF05F 0x7100      MOVS     R1,#+33554432
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       GPIO_SetDir
     41              GPIO_SetDir(BRD_PIO_STATIC_INTR_PORT, BRD_PIO_STATIC_INTR_MASK, GPIO_DIRECTION_INPUT);
   \   0000000E   0x2200             MOVS     R2,#+0
   \   00000010   0xF44F 0x5100      MOV      R1,#+8192
   \   00000014   0x2002             MOVS     R0,#+2
   \   00000016   0x.... 0x....      BL       GPIO_SetDir
     42              
     43              GPIO_SetDir(BRD_LED_485_OE_PORT, BRD_LED_485_OE_MASK, GPIO_DIRECTION_OUTPUT);//zxf
   \   0000001A   0x2201             MOVS     R2,#+1
   \   0000001C   0xF45F 0x2100      MOVS     R1,#+524288
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x.... 0x....      BL       GPIO_SetDir
     44              
     45              GPIO_SetDir(BRD_LED_RADIOL_CONNECTED_PORT ,BRD_LED_RADIOL_CONNECTED_MASK , GPIO_DIRECTION_OUTPUT );//zxf
   \   00000026   0x2201             MOVS     R2,#+1
   \   00000028   0xF45F 0x0180      MOVS     R1,#+4194304
   \   0000002C   0x2003             MOVS     R0,#+3
   \   0000002E   0x.... 0x....      BL       GPIO_SetDir
     46          	
     47          	GPIO_SetDir(BRD_PWM_POWER_5V_PORT, BRD_PWM_POWER_5V_MASK, GPIO_DIRECTION_OUTPUT);
   \   00000032   0x2201             MOVS     R2,#+1
   \   00000034   0xF45F 0x2100      MOVS     R1,#+524288
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x.... 0x....      BL       GPIO_SetDir
     48          	GPIO_SetDir(BRD_PWM_POWER_12V_PORT, BRD_PWM_POWER_12V_MASK, GPIO_DIRECTION_OUTPUT);
   \   0000003E   0x2201             MOVS     R2,#+1
   \   00000040   0xF45F 0x2180      MOVS     R1,#+262144
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x.... 0x....      BL       GPIO_SetDir
     49          	
     50                  PINSEL_ConfigPin(BRD_PWM_SHUTD_PORT,BRD_PWM_SHUTD_PIN,0);
   \   0000004A   0x2200             MOVS     R2,#+0
   \   0000004C   0x210C             MOVS     R1,#+12
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0x.... 0x....      BL       PINSEL_ConfigPin
     51            
     52                  GPIO_SetDir(BRD_PWM_SHUTD_PORT,BRD_PWM_SHUTD_MASK, GPIO_DIRECTION_OUTPUT);
   \   00000054   0x2201             MOVS     R2,#+1
   \   00000056   0xF44F 0x5180      MOV      R1,#+4096
   \   0000005A   0x2001             MOVS     R0,#+1
   \   0000005C   0x.... 0x....      BL       GPIO_SetDir
     53                  
     54          
     55          }
   \   00000060   0xBD01             POP      {R0,PC}          ;; return
     56          /************************************************************************
     57          ** Function Name: Board_LED_Init
     58          ** Parameters: none
     59          ** Return: none
     60          ** Description: Init LED Control GPIO
     61          ************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     62          void Board_LED_Init (void)
     63          {
   \                     Board_LED_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
     64          
     65            /** RTU LED 初始化 **/
     66            GPIO_SetDir(LED_POWER_PORT ,LED_POWER_PIN , LED_POWER_MODE );
   \   00000002   0x2201             MOVS     R2,#+1
   \   00000004   0xF05F 0x4100      MOVS     R1,#-2147483648
   \   00000008   0x2003             MOVS     R0,#+3
   \   0000000A   0x.... 0x....      BL       GPIO_SetDir
     67            GPIO_SetDir(LED_BD_PORT    ,LED_BD_PIN    , LED_BD_MODE    );
   \   0000000E   0x2201             MOVS     R2,#+1
   \   00000010   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000014   0x2003             MOVS     R0,#+3
   \   00000016   0x.... 0x....      BL       GPIO_SetDir
     68            GPIO_SetDir(LED_GPRS_PORT  ,LED_GPRS_PIN  , LED_GPRS_MODE  );
   \   0000001A   0x2201             MOVS     R2,#+1
   \   0000001C   0xF05F 0x5100      MOVS     R1,#+536870912
   \   00000020   0x2003             MOVS     R0,#+3
   \   00000022   0x.... 0x....      BL       GPIO_SetDir
     69            GPIO_SetDir(LED_SENSOR_PORT,LED_SENSOR_PIN, LED_SENSOR_MODE);
   \   00000026   0x2201             MOVS     R2,#+1
   \   00000028   0xF05F 0x5180      MOVS     R1,#+268435456
   \   0000002C   0x2003             MOVS     R0,#+3
   \   0000002E   0x.... 0x....      BL       GPIO_SetDir
     70            GPIO_SetDir(LED_DATA1_PORT ,LED_DATA1_PIN , LED_DATA1_MODE );
   \   00000032   0x2201             MOVS     R2,#+1
   \   00000034   0xF05F 0x6100      MOVS     R1,#+134217728
   \   00000038   0x2003             MOVS     R0,#+3
   \   0000003A   0x.... 0x....      BL       GPIO_SetDir
     71            GPIO_SetDir(LED_DATA2_PORT ,LED_DATA2_PIN , LED_DATA2_MODE );
   \   0000003E   0x2201             MOVS     R2,#+1
   \   00000040   0xF45F 0x0100      MOVS     R1,#+8388608
   \   00000044   0x2003             MOVS     R0,#+3
   \   00000046   0x.... 0x....      BL       GPIO_SetDir
     72            
     73           
     74           
     75              
     76          }
   \   0000004A   0xBD01             POP      {R0,PC}          ;; return
     77          /************************************************************************
     78          ** Function Name: Board_LED_Control
     79          ** Parameters: portNum	Port number value, should be in range from 0 to 4
     80          **             bitValue	Value that contains all bits on GPIO to clear,in range from 0 to 0xFFFFFFFF.example: value 0x5 to clear bit 0 and bit 1.
     81          ** Return: none
     82          ** Description:  LED states Control
     83          ************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     84          void Board_LED_Control (uint8_t portNum, uint32_t bitMask, uint8_t value)
     85          {
   \                     Board_LED_Control:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
     86              GPIO_OutputValue(portNum, bitMask, value);
   \   00000008   0x0032             MOVS     R2,R6
   \   0000000A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000000C   0x0029             MOVS     R1,R5
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x.... 0x....      BL       GPIO_OutputValue
     87          }
   \   00000016   0xBD70             POP      {R4-R6,PC}       ;; return
     88          /************************************************************************
     89          ** Function Name: Board_Switch_Init
     90          ** Parameters: none
     91          ** Return: none
     92          ** Description: Init LED Control GPIO
     93          ************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     94          void Board_Switch_Init (void)
     95          {
   \                     Board_Switch_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
     96              GPIO_SetDir(BRD_POWER_SW_GPRS_PORT, BRD_POWER_SW_GPRS_MASK, GPIO_DIRECTION_OUTPUT);
   \   00000002   0x2201             MOVS     R2,#+1
   \   00000004   0xF05F 0x7180      MOVS     R1,#+16777216
   \   00000008   0x2003             MOVS     R0,#+3
   \   0000000A   0x.... 0x....      BL       GPIO_SetDir
     97              GPIO_SetDir(BRD_POWER_SW_TRRADIO_PORT, BRD_POWER_SW_TRRADIO_MASK, GPIO_DIRECTION_OUTPUT);
   \   0000000E   0x2201             MOVS     R2,#+1
   \   00000010   0x2108             MOVS     R1,#+8
   \   00000012   0x2002             MOVS     R0,#+2
   \   00000014   0x.... 0x....      BL       GPIO_SetDir
     98              //PINSEL_ConfigPin(3,8,0);
     99              GPIO_SetDir(BRD_POWER_SW_GPS_PORT, BRD_POWER_SW_GPS_MASK, GPIO_DIRECTION_OUTPUT);
   \   00000018   0x2201             MOVS     R2,#+1
   \   0000001A   0xF44F 0x7180      MOV      R1,#+256
   \   0000001E   0x2003             MOVS     R0,#+3
   \   00000020   0x.... 0x....      BL       GPIO_SetDir
    100              /***************2011-10-31 XULIANG*****************/
    101              GPIO_SetDir(BRD_CMD_TRRADIO_CONNECTED_PORT, BRD_CMD_TRRADIO_CONNECTED_MASK, GPIO_DIRECTION_OUTPUT);
   \   00000024   0x2201             MOVS     R2,#+1
   \   00000026   0x2104             MOVS     R1,#+4
   \   00000028   0x2005             MOVS     R0,#+5
   \   0000002A   0x.... 0x....      BL       GPIO_SetDir
    102              /***************2011-10-31 XULIANG*****************/
    103              GPIO_SetDir(BRD_POWER_SW_RRADIO_PORT, BRD_POWER_SW_RRADIO_MASK, GPIO_DIRECTION_OUTPUT);
   \   0000002E   0x2201             MOVS     R2,#+1
   \   00000030   0x2104             MOVS     R1,#+4
   \   00000032   0x2002             MOVS     R0,#+2
   \   00000034   0x.... 0x....      BL       GPIO_SetDir
    104              GPIO_SetDir(BRD_SW_GPRS_ON_PORT, BRD_SW_GPRS_ON_MASK, GPIO_DIRECTION_OUTPUT);
   \   00000038   0x2201             MOVS     R2,#+1
   \   0000003A   0xF05F 0x6180      MOVS     R1,#+67108864
   \   0000003E   0x2003             MOVS     R0,#+3
   \   00000040   0x.... 0x....      BL       GPIO_SetDir
    105              GPIO_SetDir(BRD_SW_GPRS_RST_PORT, BRD_SW_GPRS_RST_MASK, GPIO_DIRECTION_OUTPUT);
   \   00000044   0x2201             MOVS     R2,#+1
   \   00000046   0xF05F 0x7100      MOVS     R1,#+33554432
   \   0000004A   0x2003             MOVS     R0,#+3
   \   0000004C   0x.... 0x....      BL       GPIO_SetDir
    106              GPIO_SetDir(BRD_SW_GPS_RST_PORT, BRD_SW_GPS_RST_MASK, GPIO_DIRECTION_OUTPUT);
   \   00000050   0x2201             MOVS     R2,#+1
   \   00000052   0x2102             MOVS     R1,#+2
   \   00000054   0x2002             MOVS     R0,#+2
   \   00000056   0x.... 0x....      BL       GPIO_SetDir
    107              GPIO_SetDir(BRD_SW_BT_RST_PORT, BRD_SW_BT_RST_MASK, GPIO_DIRECTION_OUTPUT);
   \   0000005A   0x2201             MOVS     R2,#+1
   \   0000005C   0xF44F 0x4180      MOV      R1,#+16384
   \   00000060   0x2002             MOVS     R0,#+2
   \   00000062   0x.... 0x....      BL       GPIO_SetDir
    108              GPIO_SetDir(BRD_SW_GPS_DLINK_PORT, BRD_SW_GPS_DLINK_MASK, GPIO_DIRECTION_OUTPUT);
   \   00000066   0x2201             MOVS     R2,#+1
   \   00000068   0xF44F 0x4100      MOV      R1,#+32768
   \   0000006C   0x2002             MOVS     R0,#+2
   \   0000006E   0x.... 0x....      BL       GPIO_SetDir
    109          
    110              //edit 2012.12.06
    111              GPIO_SetDir(BRD_CLKDIVA_RADIO_CONNECTED_PORT, BRD_CLKDIVA_RADIO_CONNECTED_MASK, GPIO_DIRECTION_OUTPUT);
   \   00000072   0x2201             MOVS     R2,#+1
   \   00000074   0x2101             MOVS     R1,#+1
   \   00000076   0x2001             MOVS     R0,#+1
   \   00000078   0x.... 0x....      BL       GPIO_SetDir
    112              GPIO_SetDir(BRD_CLKDIVB_RADIO_CONNECTED_PORT, BRD_CLKDIVB_RADIO_CONNECTED_MASK, GPIO_DIRECTION_OUTPUT);
   \   0000007C   0x2201             MOVS     R2,#+1
   \   0000007E   0x2102             MOVS     R1,#+2
   \   00000080   0x2001             MOVS     R0,#+1
   \   00000082   0x.... 0x....      BL       GPIO_SetDir
    113          
    114              //add by xhz 2012.08.02
    115              GPIO_SetDir(GPRS_ANT_PORT, GPRS_ANT_MASK, GPIO_DIRECTION_OUTPUT);
   \   00000086   0x2201             MOVS     R2,#+1
   \   00000088   0xF45F 0x3100      MOVS     R1,#+131072
   \   0000008C   0x2004             MOVS     R0,#+4
   \   0000008E   0x.... 0x....      BL       GPIO_SetDir
    116              GPIO_SetDir(RADIO_ANT_PORT, RADIO_ANT_MASK, GPIO_DIRECTION_OUTPUT);
   \   00000092   0x2201             MOVS     R2,#+1
   \   00000094   0x2110             MOVS     R1,#+16
   \   00000096   0x2004             MOVS     R0,#+4
   \   00000098   0x.... 0x....      BL       GPIO_SetDir
    117          
    118              //power on/off
    119              GPIO_SetDir(BRD_POWER_SW_SYSTEM_PORT, BRD_POWER_SW_SYSTEM_MASK, GPIO_DIRECTION_OUTPUT);
   \   0000009C   0x2201             MOVS     R2,#+1
   \   0000009E   0x2101             MOVS     R1,#+1
   \   000000A0   0x2002             MOVS     R0,#+2
   \   000000A2   0x.... 0x....      BL       GPIO_SetDir
    120              GPIO_OutputValue(BRD_POWER_SW_SYSTEM_PORT, BRD_POWER_SW_SYSTEM_MASK, SWITCH_HIGH);
   \   000000A6   0x2201             MOVS     R2,#+1
   \   000000A8   0x2101             MOVS     R1,#+1
   \   000000AA   0x2002             MOVS     R0,#+2
   \   000000AC   0x.... 0x....      BL       GPIO_OutputValue
    121          
    122              GPIO_OutputValue(BRD_POWER_SW_GPS_PORT, BRD_POWER_SW_GPS_MASK, SWITCH_HIGH);
   \   000000B0   0x2201             MOVS     R2,#+1
   \   000000B2   0xF44F 0x7180      MOV      R1,#+256
   \   000000B6   0x2003             MOVS     R0,#+3
   \   000000B8   0x.... 0x....      BL       GPIO_OutputValue
    123          
    124              GPIO_OutputValue(BRD_POWER_SW_GPRS_PORT, BRD_POWER_SW_GPRS_MASK, SWITCH_LOW);
   \   000000BC   0x2200             MOVS     R2,#+0
   \   000000BE   0xF05F 0x7180      MOVS     R1,#+16777216
   \   000000C2   0x2003             MOVS     R0,#+3
   \   000000C4   0x.... 0x....      BL       GPIO_OutputValue
    125              GPIO_OutputValue(BRD_POWER_SW_TRRADIO_PORT, BRD_POWER_SW_TRRADIO_MASK, SWITCH_LOW);
   \   000000C8   0x2200             MOVS     R2,#+0
   \   000000CA   0x2108             MOVS     R1,#+8
   \   000000CC   0x2002             MOVS     R0,#+2
   \   000000CE   0x.... 0x....      BL       GPIO_OutputValue
    126              /******************2011-10-31 XULIANG****************/
    127              GPIO_OutputValue(BRD_CMD_TRRADIO_CONNECTED_PORT, BRD_CMD_TRRADIO_CONNECTED_MASK, SWITCH_HIGH);
   \   000000D2   0x2201             MOVS     R2,#+1
   \   000000D4   0x2104             MOVS     R1,#+4
   \   000000D6   0x2005             MOVS     R0,#+5
   \   000000D8   0x.... 0x....      BL       GPIO_OutputValue
    128              /******************2011-10-31 XULIANG***************/
    129              GPIO_OutputValue(BRD_POWER_SW_RRADIO_PORT, BRD_POWER_SW_RRADIO_MASK, SWITCH_LOW);
   \   000000DC   0x2200             MOVS     R2,#+0
   \   000000DE   0x2104             MOVS     R1,#+4
   \   000000E0   0x2002             MOVS     R0,#+2
   \   000000E2   0x.... 0x....      BL       GPIO_OutputValue
    130              GPIO_OutputValue(BRD_SW_GPRS_ON_PORT, BRD_SW_GPRS_ON_MASK, SWITCH_LOW);
   \   000000E6   0x2200             MOVS     R2,#+0
   \   000000E8   0xF05F 0x6180      MOVS     R1,#+67108864
   \   000000EC   0x2003             MOVS     R0,#+3
   \   000000EE   0x.... 0x....      BL       GPIO_OutputValue
    131              GPIO_OutputValue(BRD_SW_GPRS_RST_PORT, BRD_SW_GPRS_RST_MASK, SWITCH_HIGH);
   \   000000F2   0x2201             MOVS     R2,#+1
   \   000000F4   0xF05F 0x7100      MOVS     R1,#+33554432
   \   000000F8   0x2003             MOVS     R0,#+3
   \   000000FA   0x.... 0x....      BL       GPIO_OutputValue
    132              GPIO_OutputValue(BRD_SW_GPS_RST_PORT, BRD_SW_GPS_RST_MASK, SWITCH_HIGH);
   \   000000FE   0x2201             MOVS     R2,#+1
   \   00000100   0x2102             MOVS     R1,#+2
   \   00000102   0x2002             MOVS     R0,#+2
   \   00000104   0x.... 0x....      BL       GPIO_OutputValue
    133              GPIO_OutputValue(BRD_SW_BT_RST_PORT, BRD_SW_BT_RST_MASK, SWITCH_HIGH);
   \   00000108   0x2201             MOVS     R2,#+1
   \   0000010A   0xF44F 0x4180      MOV      R1,#+16384
   \   0000010E   0x2002             MOVS     R0,#+2
   \   00000110   0x.... 0x....      BL       GPIO_OutputValue
    134              GPIO_OutputValue(BRD_SW_GPS_DLINK_PORT, BRD_SW_GPS_DLINK_MASK, SWITCH_HIGH);
   \   00000114   0x2201             MOVS     R2,#+1
   \   00000116   0xF44F 0x4100      MOV      R1,#+32768
   \   0000011A   0x2002             MOVS     R0,#+2
   \   0000011C   0x.... 0x....      BL       GPIO_OutputValue
    135          
    136              //edit 2012.11.14 9600 baudrate
    137              GPIO_OutputValue(BRD_CLKDIVA_RADIO_CONNECTED_PORT, BRD_CLKDIVA_RADIO_CONNECTED_MASK, SWITCH_HIGH);
   \   00000120   0x2201             MOVS     R2,#+1
   \   00000122   0x2101             MOVS     R1,#+1
   \   00000124   0x2001             MOVS     R0,#+1
   \   00000126   0x.... 0x....      BL       GPIO_OutputValue
    138              GPIO_OutputValue(BRD_CLKDIVB_RADIO_CONNECTED_PORT, BRD_CLKDIVB_RADIO_CONNECTED_MASK, SWITCH_LOW);
   \   0000012A   0x2200             MOVS     R2,#+0
   \   0000012C   0x2102             MOVS     R1,#+2
   \   0000012E   0x2001             MOVS     R0,#+1
   \   00000130   0x.... 0x....      BL       GPIO_OutputValue
    139          }
   \   00000134   0xBD01             POP      {R0,PC}          ;; return
    140          
    141          /************************************************************************
    142          ** Function Name: Board_Switch_Control
    143          ** Parameters: portNum	Port number value, should be in range from 0 to 4
    144          **             bitValue	Value that contains all bits on GPIO to clear,in range from 0 to 0xFFFFFFFF.example: value 0x5 to clear bit 0 and bit 1.
    145          ** Return: none
    146          ** Description:  Switch states Control
    147          ************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    148          void Board_Switch_Control (uint8_t portNum, uint32_t bitMask, uint8_t value)
    149          {
   \                     Board_Switch_Control:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    150              GPIO_OutputValue(portNum, bitMask, value);
   \   00000008   0x0032             MOVS     R2,R6
   \   0000000A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000000C   0x0029             MOVS     R1,R5
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x.... 0x....      BL       GPIO_OutputValue
    151          }
   \   00000016   0xBD70             POP      {R4-R6,PC}       ;; return
    152          /************************************************************************
    153          ** Function Name: Board_RRADIO_Control_Init
    154          ** Parameters: none
    155          ** Return: none
    156          ** Description: Board_RRADIO_Control_Init
    157          ************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    158          void Board_RRADIO_Control_Init (void)
    159          {
   \                     Board_RRADIO_Control_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
    160              GPIO_SetDir(BRD_LE_RADIO_CONNECTED_PORT, BRD_LE_RADIO_CONNECTED_MASK, GPIO_DIRECTION_OUTPUT);
   \   00000002   0x2201             MOVS     R2,#+1
   \   00000004   0xF44F 0x7180      MOV      R1,#+256
   \   00000008   0x2002             MOVS     R0,#+2
   \   0000000A   0x.... 0x....      BL       GPIO_SetDir
    161              GPIO_SetDir(BRD_CLK_RADIO_CONNECTED_PORT, BRD_CLK_RADIO_CONNECTED_MASK, GPIO_DIRECTION_OUTPUT);
   \   0000000E   0x2201             MOVS     R2,#+1
   \   00000010   0x2180             MOVS     R1,#+128
   \   00000012   0x2002             MOVS     R0,#+2
   \   00000014   0x.... 0x....      BL       GPIO_SetDir
    162              GPIO_SetDir(BRD_DAT_RADIO_CONNECTED_PORT, BRD_DAT_RADIO_CONNECTED_MASK, GPIO_DIRECTION_OUTPUT);
   \   00000018   0x2201             MOVS     R2,#+1
   \   0000001A   0x2140             MOVS     R1,#+64
   \   0000001C   0x2002             MOVS     R0,#+2
   \   0000001E   0x.... 0x....      BL       GPIO_SetDir
    163              GPIO_SetDir(BRD_RXACQ_RADIO_CONNECTED_PORT, BRD_RXACQ_RADIO_CONNECTED_MASK, GPIO_DIRECTION_OUTPUT);
   \   00000022   0x2201             MOVS     R2,#+1
   \   00000024   0x2110             MOVS     R1,#+16
   \   00000026   0x2002             MOVS     R0,#+2
   \   00000028   0x.... 0x....      BL       GPIO_SetDir
    164              GPIO_SetDir(BRD_BT_RADIO_CONNECTED_PORT, BRD_BT_RADIO_CONNECTED_MASK, GPIO_DIRECTION_OUTPUT);
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x2120             MOVS     R1,#+32
   \   00000030   0x2002             MOVS     R0,#+2
   \   00000032   0x.... 0x....      BL       GPIO_SetDir
    165          
    166              GPIO_OutputValue(BRD_LE_RADIO_CONNECTED_PORT, BRD_LE_RADIO_CONNECTED_MASK, SWITCH_LOW);
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0xF44F 0x7180      MOV      R1,#+256
   \   0000003C   0x2002             MOVS     R0,#+2
   \   0000003E   0x.... 0x....      BL       GPIO_OutputValue
    167              GPIO_OutputValue(BRD_CLK_RADIO_CONNECTED_PORT,  BRD_CLK_RADIO_CONNECTED_MASK, SWITCH_LOW);
   \   00000042   0x2200             MOVS     R2,#+0
   \   00000044   0x2180             MOVS     R1,#+128
   \   00000046   0x2002             MOVS     R0,#+2
   \   00000048   0x.... 0x....      BL       GPIO_OutputValue
    168              GPIO_OutputValue(BRD_DAT_RADIO_CONNECTED_PORT, BRD_DAT_RADIO_CONNECTED_MASK, SWITCH_LOW);
   \   0000004C   0x2200             MOVS     R2,#+0
   \   0000004E   0x2140             MOVS     R1,#+64
   \   00000050   0x2002             MOVS     R0,#+2
   \   00000052   0x.... 0x....      BL       GPIO_OutputValue
    169              GPIO_OutputValue(BRD_RXACQ_RADIO_CONNECTED_PORT,  BRD_RXACQ_RADIO_CONNECTED_MASK, SWITCH_LOW);
   \   00000056   0x2200             MOVS     R2,#+0
   \   00000058   0x2110             MOVS     R1,#+16
   \   0000005A   0x2002             MOVS     R0,#+2
   \   0000005C   0x.... 0x....      BL       GPIO_OutputValue
    170              GPIO_OutputValue(BRD_BT_RADIO_CONNECTED_PORT, BRD_BT_RADIO_CONNECTED_MASK, SWITCH_LOW);
   \   00000060   0x2200             MOVS     R2,#+0
   \   00000062   0x2120             MOVS     R1,#+32
   \   00000064   0x2002             MOVS     R0,#+2
   \   00000066   0x.... 0x....      BL       GPIO_OutputValue
    171          }
   \   0000006A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     g_KeyPower
    172          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Board_Gpio_Init
         8   -> GPIO_SetDir
         8   -> PINSEL_ConfigPin
      16   Board_LED_Control
        16   -> GPIO_OutputValue
       8   Board_LED_Init
         8   -> GPIO_SetDir
       8   Board_RRADIO_Control_Init
         8   -> GPIO_OutputValue
         8   -> GPIO_SetDir
      16   Board_Switch_Control
        16   -> GPIO_OutputValue
       8   Board_Switch_Init
         8   -> GPIO_OutputValue
         8   -> GPIO_SetDir
       8   GPIO_IRQHandler
         8   -> GPIO_ClearInt
         8   -> GPIO_GetIntStatus


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
      98  Board_Gpio_Init
      24  Board_LED_Control
      76  Board_LED_Init
     108  Board_RRADIO_Control_Init
      24  Board_Switch_Control
     310  Board_Switch_Init
      34  GPIO_IRQHandler

 
 678 bytes in section .text
 
 678 bytes of CODE memory

Errors: none
Warnings: 1
