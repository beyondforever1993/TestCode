###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.6.4896/W32 for ARM      26/Mar/2017  12:36:44 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\wangfan2\桌面\RTU_1.2\bsp\adc\bsp_adc.c               #
#    Command line =  D:\wangfan2\桌面\RTU_1.2\bsp\adc\bsp_adc.c -lCN          #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\List\ -o      #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\Obj\          #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5_2\arm\INC\c\DLib_Config_F #
#                    ull.h" -I D:\wangfan2\桌面\RTU_1.2\project\iar\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\ADC\ -I   #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RTC\ -I   #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\TILT\ -I  #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RDLevel\  #
#                    -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RS232\ #
#                     -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\OS-v2 #
#                    \ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\Vibr #
#                    ationString\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\ #
#                    ..\ucos2\uCOS-II\Ports\ARM-Cortex-M3\Generic\IAR\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\ucos2\uCOS-II #
#                    \Source\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\u #
#                    cos2\uC-LIB\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\ #
#                    ..\ucos2\uC-CPU\ -I D:\wangfan2\桌面\RTU_1.2\project\iar #
#                    \..\..\ucos2\uC-CPU\ARM-Cortex-M3\IAR\ -I                #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\cmsis\Drivers #
#                    \source\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\c #
#                    msis\Drivers\include\ -I D:\wangfan2\桌面\RTU_1.2\projec #
#                    t\iar\..\..\app\ -I D:\wangfan2\桌面\RTU_1.2\project\iar #
#                    \..\..\uC-Probe\Target\Plugins\uCOS-II\ -I               #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Demos\Intro\Workspaces\ -I                            #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Demos\Intro\Source\ -I D:\wangfan2\桌面\RTU_1.2\proje #
#                    ct\iar\..\..\uC-Probe\Target\Communication\Generic\Sourc #
#                    e\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Prob #
#                    e\Target\Communication\Generic\RS-232\Source\ -I         #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Communication\Generic\RS-232\Ports\NXP\LPC17xx\ -I    #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Communication\Generic\RS-232\OS\uCOS-II\ -I           #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\cmsis\Core\CM #
#                    3\CoreSupport\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\. #
#                    .\..\cmsis\Core\CM3\DeviceSupport\NXP\LPC177x_8x\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\ -I  #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\DEVI #
#                    CE_BT\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\Hua #
#                    ceApp\DEVICE_COM\ -I D:\wangfan2\桌面\RTU_1.2\project\ia #
#                    r\..\..\HuaceApp\DEVICE_GPRS\ -I                         #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\DEVI #
#                    CE_GPS\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\Hu #
#                    aceApp\DEVICE_RADIO\ -I D:\wangfan2\桌面\RTU_1.2\project #
#                    \iar\..\..\HuaceApp\iap\ -I                              #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\FatFs\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\USB\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\bsp\spi_flash #
#                    \ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp #
#                    \LED\ -On --use_c++_inline                               #
#    List file    =  D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\List\bsp_adc. #
#                    lst                                                      #
#    Object file  =  D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\Obj\bsp_adc.o #
#                                                                             #
#                                                                             #
###############################################################################

D:\wangfan2\桌面\RTU_1.2\bsp\adc\bsp_adc.c
      1          #include "bsp_adc.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_EnableIRQ(IRQn_Type)
   \                     NVIC_EnableIRQ:
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000004   0x0941             LSRS     R1,R0,#+5
   \   00000006   0x.... 0x....      LDR.W    R2,??DataTable9  ;; 0xe000e100
   \   0000000A   0x2301             MOVS     R3,#+1
   \   0000000C   0xF010 0x041F      ANDS     R4,R0,#0x1F
   \   00000010   0x40A3             LSLS     R3,R3,R4
   \   00000012   0xF842 0x3021      STR      R3,[R2, R1, LSL #+2]
   \   00000016   0xBC10             POP      {R4}
   \   00000018   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_DisableIRQ(IRQn_Type)
   \                     NVIC_DisableIRQ:
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000004   0x0941             LSRS     R1,R0,#+5
   \   00000006   0x.... 0x....      LDR.W    R2,??DataTable9_1  ;; 0xe000e180
   \   0000000A   0x2301             MOVS     R3,#+1
   \   0000000C   0xF010 0x041F      ANDS     R4,R0,#0x1F
   \   00000010   0x40A3             LSLS     R3,R3,R4
   \   00000012   0xF842 0x3021      STR      R3,[R2, R1, LSL #+2]
   \   00000016   0xBC10             POP      {R4}
   \   00000018   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_SetPriority(IRQn_Type, uint32_t)
   \                     NVIC_SetPriority:
   \   00000000   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD509             BPL.N    ??NVIC_SetPriority_0
   \   00000006   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000008   0xF010 0x020F      ANDS     R2,R0,#0xF
   \   0000000C   0x.... 0x....      LDR.W    R3,??DataTable9_2  ;; 0xe000ed18
   \   00000010   0x18D2             ADDS     R2,R2,R3
   \   00000012   0x00CB             LSLS     R3,R1,#+3
   \   00000014   0xF802 0x3C04      STRB     R3,[R2, #-4]
   \   00000018   0xE004             B.N      ??NVIC_SetPriority_1
   \                     ??NVIC_SetPriority_0:
   \   0000001A   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000001C   0x.... 0x....      LDR.W    R2,??DataTable9_3  ;; 0xe000e400
   \   00000020   0x00CB             LSLS     R3,R1,#+3
   \   00000022   0x5483             STRB     R3,[R0, R2]
   \                     ??NVIC_SetPriority_1:
   \   00000024   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __intrinsic __nounwind __interwork __softfp void *memcpy(void *, void const *, size_t)
   \                     memcpy:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x0032             MOVS     R2,R6
   \   0000000A   0x0029             MOVS     R1,R5
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_memcpy
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xBD70             POP      {R4-R6,PC}       ;; return
      2          #include <stdlib.h>
      3          #include <string.h>
      4          #include "File.h"
      5          
      6          

   \                                 In section .bss, align 4
      7          static  volatile uint32_t adc_conv_value[ADC_CH_COUNT * ADC_SMP_TIME];
   \                     adc_conv_value:
   \   00000000                      DS8 160
      8          
      9          ///** ad值 -> 电压(V) **/
     10          //const float  adc_vol_ratio[]=
     11          //{
     12          //  5.475/4096,
     13          //  5.475/4096,
     14          //  5.475/4096,
     15          //  3.285*12/4096,
     16          //};
     17          //
     18          ///** ad值 -> 电流(mA) **/
     19          //
     20          //const float  adc_cur_ratio[]=
     21          //{
     22          //  21.9/4096,
     23          //  21.9/4096,
     24          //  21.9/4096,
     25          //  21.9/4096,
     26          //};
     27          
     28          /** ad值 -> 电压(V) **/

   \                                 In section .rodata, align 4
     29          const float  adc_vol_ratio[]=
   \                     adc_vol_ratio:
   \   00000000   0x3AB00000         DC32 3AB00000H, 3AB00000H, 3AB00000H, 3C1E6666H
   \              0x3AB00000   
   \              0x3AB00000   
   \              0x3C1E6666   
     30          {
     31            5.5/4096,
     32            5.5/4096,
     33            5.5/4096,
     34            3.3*12/4096,
     35          };
     36          
     37          /** ad值 -> 电流(mA) **/
     38          

   \                                 In section .rodata, align 4
     39          const float  adc_cur_ratio[]=
   \                     adc_cur_ratio:
   \   00000000   0x3BB00000         DC32 3BB00000H, 3BB00000H, 3BB00000H, 3BB00000H
   \              0x3BB00000   
   \              0x3BB00000   
   \              0x3BB00000   
     40          {
     41            22.0/4096,
     42            22.0/4096,
     43            22.0/4096,
     44            22.0/4096,
     45          };
     46          

   \                                 In section .rodata, align 4
     47          const uint8_t adc_map[]=
   \                     adc_map:
   \   00000000   0x00 0x03          DC8 0, 3, 2, 1, 4, 0, 0, 0
   \              0x02 0x01    
   \              0x04 0x00    
   \              0x00 0x00    
     48          {
     49            0,3,2,1,4
     50          };
     51          
     52          
     53          

   \                                 In section .bss, align 4
     54          static uint32_t adc0_time_out;// channel 0 
   \                     adc0_time_out:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     55          static uint32_t adc1_time_out;// channel 1
   \                     adc1_time_out:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     56          static uint32_t adc2_time_out;// channel 2
   \                     adc2_time_out:
   \   00000000                      DS8 4
     57          

   \                                 In section .bss, align 4
     58          adc_para_t adc0_para,adc1_para,adc2_para;
   \                     adc0_para:
   \   00000000                      DS8 56

   \                                 In section .bss, align 4
   \                     adc1_para:
   \   00000000                      DS8 56

   \                                 In section .bss, align 4
   \                     adc2_para:
   \   00000000                      DS8 56
     59          

   \                                 In section .bss, align 4
     60          uint32_t adc_dma_tc =0;
   \                     adc_dma_tc:
   \   00000000                      DS8 4
     61          

   \                                 In section .bss, align 4
     62          static GPDMA_Channel_CFG_Type ADC_GPDMACfg;
   \                     ADC_GPDMACfg:
   \   00000000                      DS8 36
     63          

   \                                 In section .text, align 2, keep-with-next
     64          void adc_init(void)
     65          {
   \                     adc_init:
   \   00000000   0xB580             PUSH     {R7,LR}
     66            
     67            /** 变量初始化 **/
     68            memcpy(&adc0_para,&g_Byte128[32+137],32);
   \   00000002   0x2220             MOVS     R2,#+32
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   0000000C   0x.... 0x....      BL       memcpy
     69            memcpy(&adc1_para,&g_Byte128[32+169],32);
   \   00000010   0x2220             MOVS     R2,#+32
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable9_6
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable9_7
   \   0000001A   0x.... 0x....      BL       memcpy
     70            memcpy(&adc2_para,&g_Byte128[32+201],32);
   \   0000001E   0x2220             MOVS     R2,#+32
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable9_8
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable9_9
   \   00000028   0x.... 0x....      BL       memcpy
     71            
     72            adc0_time_out = adc0_para.frq * 2400;
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   00000030   0x6840             LDR      R0,[R0, #+4]
   \   00000032   0xF44F 0x6116      MOV      R1,#+2400
   \   00000036   0x4348             MULS     R0,R1,R0
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable9_10
   \   0000003C   0x6008             STR      R0,[R1, #+0]
     73            adc1_time_out = adc1_para.frq * 2400;
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable9_7
   \   00000042   0x6840             LDR      R0,[R0, #+4]
   \   00000044   0xF44F 0x6116      MOV      R1,#+2400
   \   00000048   0x4348             MULS     R0,R1,R0
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable9_11
   \   0000004E   0x6008             STR      R0,[R1, #+0]
     74            adc2_time_out = adc2_para.frq * 2400;
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable9_9
   \   00000054   0x6840             LDR      R0,[R0, #+4]
   \   00000056   0xF44F 0x6116      MOV      R1,#+2400
   \   0000005A   0x4348             MULS     R0,R1,R0
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable9_12
   \   00000060   0x6008             STR      R0,[R1, #+0]
     75            
     76            /** GPIO 初始化 **/
     77            CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCGPIO, ENABLE);
   \   00000062   0x2101             MOVS     R1,#+1
   \   00000064   0xF44F 0x4000      MOV      R0,#+32768
   \   00000068   0x.... 0x....      BL       CLKPWR_ConfigPPWR
     78            
     79            
     80            /** ADC时钟及引脚初始化 ----------------------------------------------------*/
     81            
     82            //ADC_DeInit(LPC_ADC);
     83            
     84            /** ADC1 **/
     85            PINSEL_ConfigPin(BSP_ADC1_PORT, BSP_ADC1_PIN, BSP_ADC1_FUNC);
   \   0000006C   0x2201             MOVS     R2,#+1
   \   0000006E   0x2117             MOVS     R1,#+23
   \   00000070   0x2000             MOVS     R0,#+0
   \   00000072   0x.... 0x....      BL       PINSEL_ConfigPin
     86            
     87            PINSEL_SetAnalogPinMode(BSP_ADC1_PORT, BSP_ADC1_PIN,ENABLE);
   \   00000076   0x2201             MOVS     R2,#+1
   \   00000078   0x2117             MOVS     R1,#+23
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x.... 0x....      BL       PINSEL_SetAnalogPinMode
     88            
     89            /** ADC2 **/
     90            PINSEL_ConfigPin(BSP_ADC2_PORT, BSP_ADC2_PIN, BSP_ADC2_FUNC);
   \   00000080   0x2201             MOVS     R2,#+1
   \   00000082   0x2118             MOVS     R1,#+24
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0x.... 0x....      BL       PINSEL_ConfigPin
     91            
     92            PINSEL_SetAnalogPinMode(BSP_ADC2_PORT, BSP_ADC2_PIN, ENABLE);
   \   0000008A   0x2201             MOVS     R2,#+1
   \   0000008C   0x2118             MOVS     R1,#+24
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x.... 0x....      BL       PINSEL_SetAnalogPinMode
     93            
     94            /** ADC3 **/
     95            PINSEL_ConfigPin(BSP_ADC3_PORT, BSP_ADC3_PIN, BSP_ADC3_FUNC);
   \   00000094   0x2201             MOVS     R2,#+1
   \   00000096   0x2119             MOVS     R1,#+25
   \   00000098   0x2000             MOVS     R0,#+0
   \   0000009A   0x.... 0x....      BL       PINSEL_ConfigPin
     96            
     97            PINSEL_SetAnalogPinMode(BSP_ADC3_PORT, BSP_ADC3_PIN, ENABLE);
   \   0000009E   0x2201             MOVS     R2,#+1
   \   000000A0   0x2119             MOVS     R1,#+25
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x.... 0x....      BL       PINSEL_SetAnalogPinMode
     98            
     99            /** ADC4 **/
    100            PINSEL_ConfigPin(BSP_ADC4_PORT, BSP_ADC4_PIN, BSP_ADC4_FUNC);
   \   000000A8   0x2201             MOVS     R2,#+1
   \   000000AA   0x211A             MOVS     R1,#+26
   \   000000AC   0x2000             MOVS     R0,#+0
   \   000000AE   0x.... 0x....      BL       PINSEL_ConfigPin
    101            
    102            PINSEL_SetAnalogPinMode(BSP_ADC4_PORT, BSP_ADC4_PIN, ENABLE);
   \   000000B2   0x2201             MOVS     R2,#+1
   \   000000B4   0x211A             MOVS     R1,#+26
   \   000000B6   0x2000             MOVS     R0,#+0
   \   000000B8   0x.... 0x....      BL       PINSEL_SetAnalogPinMode
    103            
    104            PINSEL_ConfigPin(0, 23, 1);
   \   000000BC   0x2201             MOVS     R2,#+1
   \   000000BE   0x2117             MOVS     R1,#+23
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0x.... 0x....      BL       PINSEL_ConfigPin
    105            PINSEL_SetAnalogPinMode(0,23,ENABLE);
   \   000000C6   0x2201             MOVS     R2,#+1
   \   000000C8   0x2117             MOVS     R1,#+23
   \   000000CA   0x2000             MOVS     R0,#+0
   \   000000CC   0x.... 0x....      BL       PINSEL_SetAnalogPinMode
    106            
    107            PINSEL_ConfigPin(0, 24, 1);
   \   000000D0   0x2201             MOVS     R2,#+1
   \   000000D2   0x2118             MOVS     R1,#+24
   \   000000D4   0x2000             MOVS     R0,#+0
   \   000000D6   0x.... 0x....      BL       PINSEL_ConfigPin
    108            PINSEL_SetAnalogPinMode(0,24,ENABLE);
   \   000000DA   0x2201             MOVS     R2,#+1
   \   000000DC   0x2118             MOVS     R1,#+24
   \   000000DE   0x2000             MOVS     R0,#+0
   \   000000E0   0x.... 0x....      BL       PINSEL_SetAnalogPinMode
    109            
    110            PINSEL_ConfigPin(0, 25, 1);
   \   000000E4   0x2201             MOVS     R2,#+1
   \   000000E6   0x2119             MOVS     R1,#+25
   \   000000E8   0x2000             MOVS     R0,#+0
   \   000000EA   0x.... 0x....      BL       PINSEL_ConfigPin
    111            PINSEL_SetAnalogPinMode(0,25,ENABLE);
   \   000000EE   0x2201             MOVS     R2,#+1
   \   000000F0   0x2119             MOVS     R1,#+25
   \   000000F2   0x2000             MOVS     R0,#+0
   \   000000F4   0x.... 0x....      BL       PINSEL_SetAnalogPinMode
    112            //  
    113            PINSEL_ConfigPin(0, 26, 1);
   \   000000F8   0x2201             MOVS     R2,#+1
   \   000000FA   0x211A             MOVS     R1,#+26
   \   000000FC   0x2000             MOVS     R0,#+0
   \   000000FE   0x.... 0x....      BL       PINSEL_ConfigPin
    114            PINSEL_SetAnalogPinMode(0,26,ENABLE);
   \   00000102   0x2201             MOVS     R2,#+1
   \   00000104   0x211A             MOVS     R1,#+26
   \   00000106   0x2000             MOVS     R0,#+0
   \   00000108   0x.... 0x....      BL       PINSEL_SetAnalogPinMode
    115            
    116            /** ADC模块初始化 **/
    117            
    118            ADC_Init(LPC_ADC, 100000);
   \   0000010C   0x.... 0x....      LDR.W    R1,??DataTable9_13  ;; 0x186a0
   \   00000110   0x.... 0x....      LDR.W    R0,??DataTable9_14  ;; 0x40034000
   \   00000114   0x.... 0x....      BL       ADC_Init
    119            
    120            //  ADC_IntConfig(LPC_ADC, ADC_ADINTEN0, ENABLE);
    121            //  ADC_IntConfig(LPC_ADC, ADC_ADINTEN1, ENABLE);
    122            //  ADC_IntConfig(LPC_ADC, ADC_ADINTEN2, ENABLE);
    123            //  ADC_IntConfig(LPC_ADC, ADC_ADINTEN3, ENABLE);
    124            
    125            ADC_ChannelCmd(LPC_ADC, 0, ENABLE);
   \   00000118   0x2201             MOVS     R2,#+1
   \   0000011A   0x2100             MOVS     R1,#+0
   \   0000011C   0x.... 0x....      LDR.W    R0,??DataTable9_14  ;; 0x40034000
   \   00000120   0x.... 0x....      BL       ADC_ChannelCmd
    126            ADC_ChannelCmd(LPC_ADC, 1, ENABLE);
   \   00000124   0x2201             MOVS     R2,#+1
   \   00000126   0x2101             MOVS     R1,#+1
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable9_14  ;; 0x40034000
   \   0000012C   0x.... 0x....      BL       ADC_ChannelCmd
    127            ADC_ChannelCmd(LPC_ADC, 2, ENABLE);
   \   00000130   0x2201             MOVS     R2,#+1
   \   00000132   0x2102             MOVS     R1,#+2
   \   00000134   0x.... 0x....      LDR.W    R0,??DataTable9_14  ;; 0x40034000
   \   00000138   0x.... 0x....      BL       ADC_ChannelCmd
    128            ADC_ChannelCmd(LPC_ADC, 3, ENABLE);
   \   0000013C   0x2201             MOVS     R2,#+1
   \   0000013E   0x2103             MOVS     R1,#+3
   \   00000140   0x.... 0x....      LDR.W    R0,??DataTable9_14  ;; 0x40034000
   \   00000144   0x.... 0x....      BL       ADC_ChannelCmd
    129            
    130            /** GPDMA 初始化 ----------------------------------------------------------*/
    131            
    132            /* Disable GPDMA interrupt */
    133            NVIC_DisableIRQ(DMA_IRQn);
   \   00000148   0x201A             MOVS     R0,#+26
   \   0000014A   0x.... 0x....      BL       NVIC_DisableIRQ
    134            
    135            /* Initialize GPDMA controller */
    136            GPDMA_Init();
   \   0000014E   0x.... 0x....      BL       GPDMA_Init
    137           
    138            // channel 
    139            ADC_GPDMACfg.ChannelNum = ADC_DMA_CH;
   \   00000152   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   00000156   0x2102             MOVS     R1,#+2
   \   00000158   0x6001             STR      R1,[R0, #+0]
    140            // Source memory - unused
    141            ADC_GPDMACfg.SrcMemAddr = 0;
   \   0000015A   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   0000015E   0x2100             MOVS     R1,#+0
   \   00000160   0x60C1             STR      R1,[R0, #+12]
    142            // Destination memory
    143            ADC_GPDMACfg.DstMemAddr = (uint32_t) adc_conv_value;
   \   00000162   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   00000166   0x.... 0x....      LDR.W    R1,??DataTable9_16
   \   0000016A   0x6101             STR      R1,[R0, #+16]
    144            // Transfer size
    145            ADC_GPDMACfg.TransferSize = ADC_CH_COUNT * ADC_SMP_TIME;
   \   0000016C   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   00000170   0x2128             MOVS     R1,#+40
   \   00000172   0x6041             STR      R1,[R0, #+4]
    146            // Transfer width - unused
    147            ADC_GPDMACfg.TransferWidth = 0;
   \   00000174   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   00000178   0x2100             MOVS     R1,#+0
   \   0000017A   0x6081             STR      R1,[R0, #+8]
    148            // Transfer type
    149            ADC_GPDMACfg.TransferType = GPDMA_TRANSFERTYPE_P2M;
   \   0000017C   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   00000180   0x2102             MOVS     R1,#+2
   \   00000182   0x6141             STR      R1,[R0, #+20]
    150            // Source connection
    151            ADC_GPDMACfg.SrcConn = GPDMA_CONN_ADC;
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   00000188   0x2108             MOVS     R1,#+8
   \   0000018A   0x6181             STR      R1,[R0, #+24]
    152            // Destination connection - unused
    153            ADC_GPDMACfg.DstConn = 0;
   \   0000018C   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   00000190   0x2100             MOVS     R1,#+0
   \   00000192   0x61C1             STR      R1,[R0, #+28]
    154            // Linker List Item - unused
    155            ADC_GPDMACfg.DMALLI = 0;
   \   00000194   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   00000198   0x2100             MOVS     R1,#+0
   \   0000019A   0x6201             STR      R1,[R0, #+32]
    156            
    157            GPDMA_Setup(&ADC_GPDMACfg);
   \   0000019C   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   000001A0   0x.... 0x....      BL       GPDMA_Setup
    158            
    159            /** GPDMA 中断配置 **/
    160            /* preemption = 0, sub-priority = 1 */
    161            NVIC_SetPriority(DMA_IRQn, ((0x00<<3)|0x01));
   \   000001A4   0x2101             MOVS     R1,#+1
   \   000001A6   0x201A             MOVS     R0,#+26
   \   000001A8   0x.... 0x....      BL       NVIC_SetPriority
    162            
    163            /* Enable GPDMA interrupt */
    164            NVIC_EnableIRQ(DMA_IRQn);
   \   000001AC   0x201A             MOVS     R0,#+26
   \   000001AE   0x.... 0x....      BL       NVIC_EnableIRQ
    165            
    166            
    167            // Enable GPDMA channel 
    168            GPDMA_ChannelCmd(ADC_DMA_CH, ENABLE);
   \   000001B2   0x2101             MOVS     R1,#+1
   \   000001B4   0x2002             MOVS     R0,#+2
   \   000001B6   0x.... 0x....      BL       GPDMA_ChannelCmd
    169            
    170            /** ADC 启动 **/
    171            //ADC_StartCmd(LPC_ADC, ADC_START_CONTINUOUS);
    172            ADC_BurstCmd(LPC_ADC, ENABLE);
   \   000001BA   0x2101             MOVS     R1,#+1
   \   000001BC   0x.... 0x....      LDR.W    R0,??DataTable9_14  ;; 0x40034000
   \   000001C0   0x.... 0x....      BL       ADC_BurstCmd
    173            
    174          }
   \   000001C4   0xBD01             POP      {R0,PC}          ;; return
    175          /**
    176          通道取值1 2 3 4 
    177          **/

   \                                 In section .text, align 2, keep-with-next
    178          uint16_t adc_get_val(unsigned char ch)
    179          {
   \                     adc_get_val:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x0004             MOVS     R4,R0
    180            uint32_t temp ;
    181            uint8_t i;
    182            uint8_t valid_count = 0;
   \   00000006   0x2700             MOVS     R7,#+0
    183            
    184            uint32_t result = 0;
   \   00000008   0xF05F 0x0800      MOVS     R8,#+0
    185            
    186            
    187            if( (ch == 0)|| (ch > 4) )
   \   0000000C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000E   0x2C00             CMP      R4,#+0
   \   00000010   0xD002             BEQ.N    ??adc_get_val_0
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0x2C05             CMP      R4,#+5
   \   00000016   0xDB01             BLT.N    ??adc_get_val_1
    188            {
    189              return 0;//通道号错误
   \                     ??adc_get_val_0:
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0xE039             B.N      ??adc_get_val_2
    190            }
    191            
    192            adc_dma_tc = 0;
   \                     ??adc_get_val_1:
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable9_17
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x6001             STR      R1,[R0, #+0]
    193            
    194            GPDMA_Setup(&ADC_GPDMACfg);
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable9_15
   \   00000028   0x.... 0x....      BL       GPDMA_Setup
    195            
    196            GPDMA_ChannelCmd(ADC_DMA_CH, ENABLE);
   \   0000002C   0x2101             MOVS     R1,#+1
   \   0000002E   0x2002             MOVS     R0,#+2
   \   00000030   0x.... 0x....      BL       GPDMA_ChannelCmd
    197            
    198            /* Wait for GPDMA processing complete */
    199            while ((adc_dma_tc == 0));
   \                     ??adc_get_val_3:
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable9_17
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD0FA             BEQ.N    ??adc_get_val_3
    200            
    201            /** TODO:修改为使用信号量 **/
    202            
    203            GPDMA_ChannelCmd(ADC_DMA_CH, DISABLE);
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x2002             MOVS     R0,#+2
   \   00000042   0x.... 0x....      BL       GPDMA_ChannelCmd
    204            
    205            
    206            for( i = 0; i < ADC_CH_COUNT * ADC_SMP_TIME; i++)
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x0006             MOVS     R6,R0
   \                     ??adc_get_val_4:
   \   0000004A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000004C   0x2E28             CMP      R6,#+40
   \   0000004E   0xDA16             BGE.N    ??adc_get_val_5
    207            {
    208              temp = adc_conv_value[i];
   \   00000050   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable9_16
   \   00000056   0xF850 0x0026      LDR      R0,[R0, R6, LSL #+2]
   \   0000005A   0x0005             MOVS     R5,R0
    209              
    210              if( ADC_GDR_DONE_FLAG & temp)
   \   0000005C   0x2D00             CMP      R5,#+0
   \   0000005E   0xD50C             BPL.N    ??adc_get_val_6
    211              {
    212                if( (ADC_GDR_CH(temp) == (ch-1)) && !(ADC_GDR_OVERRUN_FLAG & temp) )
   \   00000060   0xF3C5 0x6002      UBFX     R0,R5,#+24,#+3
   \   00000064   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000066   0x1E61             SUBS     R1,R4,#+1
   \   00000068   0x4288             CMP      R0,R1
   \   0000006A   0xD106             BNE.N    ??adc_get_val_6
   \   0000006C   0x0068             LSLS     R0,R5,#+1
   \   0000006E   0xD404             BMI.N    ??adc_get_val_6
    213                {
    214                  valid_count++;
   \   00000070   0x1C7F             ADDS     R7,R7,#+1
    215                  
    216                  result += ADC_GDR_RESULT(temp);
   \   00000072   0xF3C5 0x100B      UBFX     R0,R5,#+4,#+12
   \   00000076   0xEB10 0x0808      ADDS     R8,R0,R8
    217                }
    218              }
    219            }
   \                     ??adc_get_val_6:
   \   0000007A   0x1C76             ADDS     R6,R6,#+1
   \   0000007C   0xE7E5             B.N      ??adc_get_val_4
    220            
    221            if( valid_count != 0)
   \                     ??adc_get_val_5:
   \   0000007E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000080   0x2F00             CMP      R7,#+0
   \   00000082   0xD004             BEQ.N    ??adc_get_val_7
    222            {
    223              return (uint16_t)(result/valid_count);
   \   00000084   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000086   0xFBB8 0xF0F7      UDIV     R0,R8,R7
   \   0000008A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000008C   0xE000             B.N      ??adc_get_val_2
    224            }
    225            
    226            return 0;
   \                     ??adc_get_val_7:
   \   0000008E   0x2000             MOVS     R0,#+0
   \                     ??adc_get_val_2:
   \   00000090   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    227            
    228          }
    229          
    230          /**
    231          获取电压值,单位: V(伏特)
    232          通道取值1 2 3 4 
    233          
    234          **/
    235          

   \                                 In section .text, align 2, keep-with-next
    236          float adc_get_voltage(unsigned char ch)
    237          {
   \                     adc_get_voltage:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    238            if( (ch == 0)|| (ch > 4) )
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD002             BEQ.N    ??adc_get_voltage_0
   \   0000000A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000C   0x2C05             CMP      R4,#+5
   \   0000000E   0xDB01             BLT.N    ??adc_get_voltage_1
    239            {
    240              return 0.0f;//通道号错误
   \                     ??adc_get_voltage_0:
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xE011             B.N      ??adc_get_voltage_2
    241            }
    242            
    243            return (float)(adc_get_val(adc_map[ch]) * adc_vol_ratio[ch - 1]);
   \                     ??adc_get_voltage_1:
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable9_18
   \   0000001A   0x5C20             LDRB     R0,[R4, R0]
   \   0000001C   0x.... 0x....      BL       adc_get_val
   \   00000020   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000022   0x.... 0x....      BL       __aeabi_ui2f
   \   00000026   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable9_19
   \   0000002C   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000030   0xF851 0x1C04      LDR      R1,[R1, #-4]
   \   00000034   0x.... 0x....      BL       __aeabi_fmul
   \                     ??adc_get_voltage_2:
   \   00000038   0xBD10             POP      {R4,PC}          ;; return
    244          }
    245          
    246          /**
    247          获取电流值,单位：mA
    248          
    249          通道取值1 2 3 4 
    250          
    251          **/

   \                                 In section .text, align 2, keep-with-next
    252          float adc_get_current(unsigned char ch)
    253          {
   \                     adc_get_current:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    254            if( (ch == 0)|| (ch > 4) )
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x2C00             CMP      R4,#+0
   \   00000008   0xD002             BEQ.N    ??adc_get_current_0
   \   0000000A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000C   0x2C05             CMP      R4,#+5
   \   0000000E   0xDB01             BLT.N    ??adc_get_current_1
    255            {
    256              return 0.0f;//通道号错误
   \                     ??adc_get_current_0:
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xE011             B.N      ??adc_get_current_2
    257            }
    258            
    259            return (float)(adc_get_val(adc_map[ch]) * adc_cur_ratio[ch - 1]);
   \                     ??adc_get_current_1:
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable9_18
   \   0000001A   0x5C20             LDRB     R0,[R4, R0]
   \   0000001C   0x.... 0x....      BL       adc_get_val
   \   00000020   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000022   0x.... 0x....      BL       __aeabi_ui2f
   \   00000026   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable9_20
   \   0000002C   0xEB11 0x0184      ADDS     R1,R1,R4, LSL #+2
   \   00000030   0xF851 0x1C04      LDR      R1,[R1, #-4]
   \   00000034   0x.... 0x....      BL       __aeabi_fmul
   \                     ??adc_get_current_2:
   \   00000038   0xBD10             POP      {R4,PC}          ;; return
    260          }
    261          
    262          

   \                                 In section .text, align 2, keep-with-next
    263          void adc_task(void)
    264          {
   \                     adc_task:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB095             SUB      SP,SP,#+84
    265            float adc_val;
    266            
    267            struct DATA_STRUCT dat;
    268            struct TIME_STRUCT time_now;
    269            
    270            if( adc0_para.frq_changed)
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   0000000A   0xF890 0x0035      LDRB     R0,[R0, #+53]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD00D             BEQ.N    ??adc_task_0
    271            {
    272              adc0_para.frq_changed = 0;
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0xF880 0x1035      STRB     R1,[R0, #+53]
    273              
    274              adc0_time_out = adc0_para.frq * 2400;
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   00000020   0x6840             LDR      R0,[R0, #+4]
   \   00000022   0xF44F 0x6116      MOV      R1,#+2400
   \   00000026   0x4348             MULS     R0,R1,R0
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable9_10
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    275            }
    276            
    277            if( adc1_para.frq_changed)
   \                     ??adc_task_0:
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable9_7
   \   00000032   0xF890 0x0035      LDRB     R0,[R0, #+53]
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD00D             BEQ.N    ??adc_task_1
    278            {
    279              adc1_para.frq_changed = 0;
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable9_7
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0xF880 0x1035      STRB     R1,[R0, #+53]
    280              
    281              adc1_time_out = adc1_para.frq * 2400;
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable9_7
   \   00000048   0x6840             LDR      R0,[R0, #+4]
   \   0000004A   0xF44F 0x6116      MOV      R1,#+2400
   \   0000004E   0x4348             MULS     R0,R1,R0
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable9_11
   \   00000054   0x6008             STR      R0,[R1, #+0]
    282            }
    283            
    284            if( adc2_para.frq_changed)
   \                     ??adc_task_1:
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable9_9
   \   0000005A   0xF890 0x0035      LDRB     R0,[R0, #+53]
   \   0000005E   0x2800             CMP      R0,#+0
   \   00000060   0xD00D             BEQ.N    ??adc_task_2
    285            {
    286              adc2_para.frq_changed = 0;
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable9_9
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0xF880 0x1035      STRB     R1,[R0, #+53]
    287              
    288              adc2_time_out = adc2_para.frq * 2400;
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable9_9
   \   00000070   0x6840             LDR      R0,[R0, #+4]
   \   00000072   0xF44F 0x6116      MOV      R1,#+2400
   \   00000076   0x4348             MULS     R0,R1,R0
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable9_12
   \   0000007C   0x6008             STR      R0,[R1, #+0]
    289            }
    290            
    291            /** ADC0 TASK -------------------------------------------------*/
    292            if( adc0_time_out == 0)
   \                     ??adc_task_2:
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable9_10
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0x2800             CMP      R0,#+0
   \   00000086   0xF040 0x80D1      BNE.W    ??adc_task_3
    293            {
    294              if( adc0_para.frq != 0)
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   0000008E   0x6840             LDR      R0,[R0, #+4]
   \   00000090   0x2800             CMP      R0,#+0
   \   00000092   0xF000 0x80CB      BEQ.W    ??adc_task_3
    295              {
    296                adc0_time_out = adc0_para.frq * 2400;
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   0000009A   0x6840             LDR      R0,[R0, #+4]
   \   0000009C   0xF44F 0x6116      MOV      R1,#+2400
   \   000000A0   0x4348             MULS     R0,R1,R0
   \   000000A2   0x.... 0x....      LDR.W    R1,??DataTable9_10
   \   000000A6   0x6008             STR      R0,[R1, #+0]
    297                if( adc0_para.type != 0)
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0x2800             CMP      R0,#+0
   \   000000B0   0xF000 0x80BC      BEQ.W    ??adc_task_3
    298                {
    299                  
    300                  rtc_get_time(&time_now);
   \   000000B4   0xA805             ADD      R0,SP,#+20
   \   000000B6   0x.... 0x....      BL       rtc_get_time
    301                  
    302                  if( (time_now.y < 2015) || (time_now.y > 2100))
   \   000000BA   0xF8BD 0x0014      LDRH     R0,[SP, #+20]
   \   000000BE   0xF240 0x71DF      MOVW     R1,#+2015
   \   000000C2   0x4288             CMP      R0,R1
   \   000000C4   0xDB05             BLT.N    ??adc_task_4
   \   000000C6   0xF8BD 0x0014      LDRH     R0,[SP, #+20]
   \   000000CA   0xF640 0x0135      MOVW     R1,#+2101
   \   000000CE   0x4288             CMP      R0,R1
   \   000000D0   0xDB00             BLT.N    ??adc_task_5
    303                  {
    304                    return;
   \                     ??adc_task_4:
   \   000000D2   0xE239             B.N      ??adc_task_6
    305                  }
    306                  
    307                  dat.y = time_now.y;
   \                     ??adc_task_5:
   \   000000D4   0xF8BD 0x0014      LDRH     R0,[SP, #+20]
   \   000000D8   0xF8AD 0x001C      STRH     R0,[SP, #+28]
    308                  dat.m = time_now.m;
   \   000000DC   0xF89D 0x0016      LDRB     R0,[SP, #+22]
   \   000000E0   0xF88D 0x001E      STRB     R0,[SP, #+30]
    309                  dat.d = time_now.d;
   \   000000E4   0xF89D 0x0017      LDRB     R0,[SP, #+23]
   \   000000E8   0xF88D 0x001F      STRB     R0,[SP, #+31]
    310                  dat.H = time_now.H;
   \   000000EC   0xF89D 0x0018      LDRB     R0,[SP, #+24]
   \   000000F0   0xF88D 0x0020      STRB     R0,[SP, #+32]
    311                  dat.M = time_now.M;
   \   000000F4   0xF89D 0x0019      LDRB     R0,[SP, #+25]
   \   000000F8   0xF88D 0x0021      STRB     R0,[SP, #+33]
    312                  dat.S = time_now.S;
   \   000000FC   0xF89D 0x001A      LDRB     R0,[SP, #+26]
   \   00000100   0xF88D 0x0022      STRB     R0,[SP, #+34]
    313                  
    314                  if( adc0_para.stype == 1)
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   00000108   0x6880             LDR      R0,[R0, #+8]
   \   0000010A   0x2801             CMP      R0,#+1
   \   0000010C   0xD104             BNE.N    ??adc_task_7
    315                  {//电压型
    316                    adc_val = adc_get_voltage(1);
   \   0000010E   0x2001             MOVS     R0,#+1
   \   00000110   0x.... 0x....      BL       adc_get_voltage
   \   00000114   0x0004             MOVS     R4,R0
   \   00000116   0xE00A             B.N      ??adc_task_8
    317                  }
    318                  else if( adc0_para.stype == 2)
   \                     ??adc_task_7:
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   0000011C   0x6880             LDR      R0,[R0, #+8]
   \   0000011E   0x2802             CMP      R0,#+2
   \   00000120   0xD104             BNE.N    ??adc_task_9
    319                  {//电流型
    320                    adc_val = adc_get_current(1);
   \   00000122   0x2001             MOVS     R0,#+1
   \   00000124   0x.... 0x....      BL       adc_get_current
   \   00000128   0x0004             MOVS     R4,R0
   \   0000012A   0xE000             B.N      ??adc_task_8
    321                  }
    322                  else
    323                  {
    324                    return;
   \                     ??adc_task_9:
   \   0000012C   0xE20C             B.N      ??adc_task_6
    325                  }
    326                  
    327                  if( ((uint32_t)(adc_val *1000)) < 1)
   \                     ??adc_task_8:
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable9_21  ;; 0x447a0000
   \   00000132   0x0021             MOVS     R1,R4
   \   00000134   0x.... 0x....      BL       __aeabi_fmul
   \   00000138   0x.... 0x....      BL       __aeabi_f2uiz
   \   0000013C   0x2800             CMP      R0,#+0
   \   0000013E   0xF000 0x8203      BEQ.W    ??adc_task_6
    328                  {//加入0.001V/0.001mA下限限制
    329                    return;
    330                  }
    331                  
    332                  dat.type = adc0_para.type;
   \                     ??adc_task_10:
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   00000146   0x6800             LDR      R0,[R0, #+0]
   \   00000148   0xF88D 0x0023      STRB     R0,[SP, #+35]
    333                  
    334                  if(adc0_para.type == 5)
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   00000150   0x6800             LDR      R0,[R0, #+0]
   \   00000152   0x2805             CMP      R0,#+5
   \   00000154   0xD11C             BNE.N    ??adc_task_11
    335                  {//土壤水分计
    336                    //sprintf(dat.data, "%s,0,%c%d.%03d",adc0_para.sname,(adc_val > 0?'+':'-'),abs(adc_val),abs(adc_val * 1000) % 1000);
    337                    sprintf(dat.data, "%s,0,%d.%03d,%c",adc0_para.sname,
    338                            abs(adc_val),
    339                             abs(adc_val*1000),
    340                             adc0_para.para0.c[0]);
   \   00000156   0x.... 0x....      LDR.W    R0,??DataTable9_21  ;; 0x447a0000
   \   0000015A   0x0021             MOVS     R1,R4
   \   0000015C   0x.... 0x....      BL       __aeabi_fmul
   \   00000160   0x.... 0x....      BL       __aeabi_f2iz
   \   00000164   0x.... 0x....      BL       abs
   \   00000168   0x0005             MOVS     R5,R0
   \   0000016A   0x0020             MOVS     R0,R4
   \   0000016C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000170   0x.... 0x....      BL       abs
   \   00000174   0x.... 0x....      LDR.W    R1,??DataTable9_5
   \   00000178   0x7B09             LDRB     R1,[R1, #+12]
   \   0000017A   0x9101             STR      R1,[SP, #+4]
   \   0000017C   0x9500             STR      R5,[SP, #+0]
   \   0000017E   0x0003             MOVS     R3,R0
   \   00000180   0x.... 0x....      LDR.W    R2,??DataTable9_22
   \   00000184   0x.... 0x....      LDR.W    R1,??DataTable9_23
   \   00000188   0xA809             ADD      R0,SP,#+36
   \   0000018A   0x.... 0x....      BL       sprintf
   \   0000018E   0xE045             B.N      ??adc_task_12
    341                  }
    342                  else
    343                  {
    344                    sprintf(dat.data, "%s,0,%d.%03d,%d.%03d,%d.%03d",adc0_para.sname,
    345                            abs(adc_val),
    346                            abs(adc_val*1000),
    347                            abs(adc0_para.para0.f),
    348                            abs(adc0_para.para0.f*1000),
    349                            abs(adc0_para.para1),
    350                            abs(adc0_para.para1*100));
   \                     ??adc_task_11:
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   00000194   0x6901             LDR      R1,[R0, #+16]
   \   00000196   0x.... 0x....      LDR.W    R0,??DataTable9_24  ;; 0x42c80000
   \   0000019A   0x.... 0x....      BL       __aeabi_fmul
   \   0000019E   0x.... 0x....      BL       __aeabi_f2iz
   \   000001A2   0x.... 0x....      BL       abs
   \   000001A6   0x0005             MOVS     R5,R0
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   000001AC   0x6900             LDR      R0,[R0, #+16]
   \   000001AE   0x.... 0x....      BL       __aeabi_f2iz
   \   000001B2   0x.... 0x....      BL       abs
   \   000001B6   0x0006             MOVS     R6,R0
   \   000001B8   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   000001BC   0x68C1             LDR      R1,[R0, #+12]
   \   000001BE   0x.... 0x....      LDR.W    R0,??DataTable9_21  ;; 0x447a0000
   \   000001C2   0x.... 0x....      BL       __aeabi_fmul
   \   000001C6   0x.... 0x....      BL       __aeabi_f2iz
   \   000001CA   0x.... 0x....      BL       abs
   \   000001CE   0x0007             MOVS     R7,R0
   \   000001D0   0x.... 0x....      LDR.W    R0,??DataTable9_5
   \   000001D4   0x68C0             LDR      R0,[R0, #+12]
   \   000001D6   0x.... 0x....      BL       __aeabi_f2iz
   \   000001DA   0x.... 0x....      BL       abs
   \   000001DE   0x4680             MOV      R8,R0
   \   000001E0   0x.... 0x....      LDR.W    R0,??DataTable9_21  ;; 0x447a0000
   \   000001E4   0x0021             MOVS     R1,R4
   \   000001E6   0x.... 0x....      BL       __aeabi_fmul
   \   000001EA   0x.... 0x....      BL       __aeabi_f2iz
   \   000001EE   0x.... 0x....      BL       abs
   \   000001F2   0x4681             MOV      R9,R0
   \   000001F4   0x0020             MOVS     R0,R4
   \   000001F6   0x.... 0x....      BL       __aeabi_f2iz
   \   000001FA   0x.... 0x....      BL       abs
   \   000001FE   0x0003             MOVS     R3,R0
   \   00000200   0x9504             STR      R5,[SP, #+16]
   \   00000202   0x9603             STR      R6,[SP, #+12]
   \   00000204   0x9702             STR      R7,[SP, #+8]
   \   00000206   0xF8CD 0x8004      STR      R8,[SP, #+4]
   \   0000020A   0xF8CD 0x9000      STR      R9,[SP, #+0]
   \   0000020E   0x.... 0x....      LDR.W    R2,??DataTable9_22
   \   00000212   0x.... 0x....      LDR.W    R1,??DataTable9_25
   \   00000216   0xA809             ADD      R0,SP,#+36
   \   00000218   0x.... 0x....      BL       sprintf
    351                  }
    352                  g_RtuStatus.led_dwload = 1;
   \                     ??adc_task_12:
   \   0000021C   0x.... 0x....      LDR.W    R0,??DataTable9_26
   \   00000220   0x2101             MOVS     R1,#+1
   \   00000222   0xF880 0x1037      STRB     R1,[R0, #+55]
    353                  file_write(&dat);
   \   00000226   0xA807             ADD      R0,SP,#+28
   \   00000228   0x.... 0x....      BL       file_write
    354                }
    355              }
    356            }
    357            
    358            /** ADC1 TASK -------------------------------------------------*/
    359            if( adc1_time_out == 0)
   \                     ??adc_task_3:
   \   0000022C   0x.... 0x....      LDR.W    R0,??DataTable9_11
   \   00000230   0x6800             LDR      R0,[R0, #+0]
   \   00000232   0x2800             CMP      R0,#+0
   \   00000234   0xF040 0x80BE      BNE.W    ??adc_task_13
    360            {
    361              if( adc1_para.frq != 0)
   \   00000238   0x.... 0x....      LDR.W    R0,??DataTable9_7
   \   0000023C   0x6840             LDR      R0,[R0, #+4]
   \   0000023E   0x2800             CMP      R0,#+0
   \   00000240   0xF000 0x80B8      BEQ.W    ??adc_task_13
    362              {
    363                adc1_time_out = adc1_para.frq * 2400;
   \   00000244   0x.... 0x....      LDR.W    R0,??DataTable9_7
   \   00000248   0x6840             LDR      R0,[R0, #+4]
   \   0000024A   0xF44F 0x6116      MOV      R1,#+2400
   \   0000024E   0x4348             MULS     R0,R1,R0
   \   00000250   0x.... 0x....      LDR.W    R1,??DataTable9_11
   \   00000254   0x6008             STR      R0,[R1, #+0]
    364                if( adc1_para.type != 0)
   \   00000256   0x.... 0x....      LDR.W    R0,??DataTable9_7
   \   0000025A   0x6800             LDR      R0,[R0, #+0]
   \   0000025C   0x2800             CMP      R0,#+0
   \   0000025E   0xF000 0x80A9      BEQ.W    ??adc_task_13
    365                {
    366                  
    367                  rtc_get_time(&time_now);
   \   00000262   0xA805             ADD      R0,SP,#+20
   \   00000264   0x.... 0x....      BL       rtc_get_time
    368                  
    369                  if( (time_now.y < 2015) || (time_now.y > 2100))
   \   00000268   0xF8BD 0x0014      LDRH     R0,[SP, #+20]
   \   0000026C   0xF240 0x71DF      MOVW     R1,#+2015
   \   00000270   0x4288             CMP      R0,R1
   \   00000272   0xDB05             BLT.N    ??adc_task_14
   \   00000274   0xF8BD 0x0014      LDRH     R0,[SP, #+20]
   \   00000278   0xF640 0x0135      MOVW     R1,#+2101
   \   0000027C   0x4288             CMP      R0,R1
   \   0000027E   0xDB00             BLT.N    ??adc_task_15
    370                  {
    371                    return;
   \                     ??adc_task_14:
   \   00000280   0xE162             B.N      ??adc_task_6
    372                  }
    373                  
    374                  dat.y = time_now.y;
   \                     ??adc_task_15:
   \   00000282   0xF8BD 0x0014      LDRH     R0,[SP, #+20]
   \   00000286   0xF8AD 0x001C      STRH     R0,[SP, #+28]
    375                  dat.m = time_now.m;
   \   0000028A   0xF89D 0x0016      LDRB     R0,[SP, #+22]
   \   0000028E   0xF88D 0x001E      STRB     R0,[SP, #+30]
    376                  dat.d = time_now.d;
   \   00000292   0xF89D 0x0017      LDRB     R0,[SP, #+23]
   \   00000296   0xF88D 0x001F      STRB     R0,[SP, #+31]
    377                  dat.H = time_now.H;
   \   0000029A   0xF89D 0x0018      LDRB     R0,[SP, #+24]
   \   0000029E   0xF88D 0x0020      STRB     R0,[SP, #+32]
    378                  dat.M = time_now.M;
   \   000002A2   0xF89D 0x0019      LDRB     R0,[SP, #+25]
   \   000002A6   0xF88D 0x0021      STRB     R0,[SP, #+33]
    379                  dat.S = time_now.S;
   \   000002AA   0xF89D 0x001A      LDRB     R0,[SP, #+26]
   \   000002AE   0xF88D 0x0022      STRB     R0,[SP, #+34]
    380                  
    381                  if( adc1_para.stype == 1)
   \   000002B2   0x....             LDR.N    R0,??DataTable9_7
   \   000002B4   0x6880             LDR      R0,[R0, #+8]
   \   000002B6   0x2801             CMP      R0,#+1
   \   000002B8   0xD104             BNE.N    ??adc_task_16
    382                  {//电压型
    383                    adc_val = adc_get_voltage(2);
   \   000002BA   0x2002             MOVS     R0,#+2
   \   000002BC   0x.... 0x....      BL       adc_get_voltage
   \   000002C0   0x0004             MOVS     R4,R0
   \   000002C2   0xE009             B.N      ??adc_task_17
    384                  }
    385                  else if( adc1_para.stype == 2)
   \                     ??adc_task_16:
   \   000002C4   0x....             LDR.N    R0,??DataTable9_7
   \   000002C6   0x6880             LDR      R0,[R0, #+8]
   \   000002C8   0x2802             CMP      R0,#+2
   \   000002CA   0xD104             BNE.N    ??adc_task_18
    386                  {//电流型
    387                    adc_val = adc_get_current(2);
   \   000002CC   0x2002             MOVS     R0,#+2
   \   000002CE   0x.... 0x....      BL       adc_get_current
   \   000002D2   0x0004             MOVS     R4,R0
   \   000002D4   0xE000             B.N      ??adc_task_17
    388                  }
    389                  else
    390                  {
    391                    return;
   \                     ??adc_task_18:
   \   000002D6   0xE137             B.N      ??adc_task_6
    392                  }
    393                  
    394                  if( ((uint32_t)(adc_val *1000)) < 1)
   \                     ??adc_task_17:
   \   000002D8   0x....             LDR.N    R0,??DataTable9_21  ;; 0x447a0000
   \   000002DA   0x0021             MOVS     R1,R4
   \   000002DC   0x.... 0x....      BL       __aeabi_fmul
   \   000002E0   0x.... 0x....      BL       __aeabi_f2uiz
   \   000002E4   0x2800             CMP      R0,#+0
   \   000002E6   0xF000 0x812F      BEQ.W    ??adc_task_6
    395                  {//加入0.001V/0.001mA下限限制
    396                    return;
    397                  }
    398                  
    399                  dat.type = adc1_para.type;
   \                     ??adc_task_19:
   \   000002EA   0x....             LDR.N    R0,??DataTable9_7
   \   000002EC   0x6800             LDR      R0,[R0, #+0]
   \   000002EE   0xF88D 0x0023      STRB     R0,[SP, #+35]
    400                  
    401                  if(adc1_para.type == 5)
   \   000002F2   0x....             LDR.N    R0,??DataTable9_7
   \   000002F4   0x6800             LDR      R0,[R0, #+0]
   \   000002F6   0x2805             CMP      R0,#+5
   \   000002F8   0xD118             BNE.N    ??adc_task_20
    402                  {//土壤水分计
    403                    //sprintf(dat.data, "%s,0,%c%d.%03d",adc1_para.sname,(adc_val > 0?'+':'-'),abs(adc_val),abs(adc_val * 1000) % 1000);
    404                          sprintf(dat.data, "%s,1,%d.%03d,%c",adc1_para.sname,
    405                            abs(adc_val),
    406                             abs(adc_val*1000),
    407                             adc1_para.para0.c[0]);
   \   000002FA   0x....             LDR.N    R0,??DataTable9_21  ;; 0x447a0000
   \   000002FC   0x0021             MOVS     R1,R4
   \   000002FE   0x.... 0x....      BL       __aeabi_fmul
   \   00000302   0x.... 0x....      BL       __aeabi_f2iz
   \   00000306   0x.... 0x....      BL       abs
   \   0000030A   0x0005             MOVS     R5,R0
   \   0000030C   0x0020             MOVS     R0,R4
   \   0000030E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000312   0x.... 0x....      BL       abs
   \   00000316   0x....             LDR.N    R1,??DataTable9_7
   \   00000318   0x7B09             LDRB     R1,[R1, #+12]
   \   0000031A   0x9101             STR      R1,[SP, #+4]
   \   0000031C   0x9500             STR      R5,[SP, #+0]
   \   0000031E   0x0003             MOVS     R3,R0
   \   00000320   0x....             LDR.N    R2,??DataTable9_27
   \   00000322   0x....             LDR.N    R1,??DataTable9_28
   \   00000324   0xA809             ADD      R0,SP,#+36
   \   00000326   0x.... 0x....      BL       sprintf
   \   0000032A   0xE03C             B.N      ??adc_task_21
    408                  }
    409                  else
    410                  {
    411                    sprintf(dat.data, "%s,1,%d.%03d,%d.%03d,%d.%03d",adc1_para.sname,
    412                            abs(adc_val),
    413                            abs(adc_val*1000),
    414                            abs(adc1_para.para0.f),
    415                            abs(adc1_para.para0.f*1000),
    416                            abs(adc1_para.para1),
    417                            abs(adc1_para.para1*100));
   \                     ??adc_task_20:
   \   0000032C   0x....             LDR.N    R0,??DataTable9_7
   \   0000032E   0x6901             LDR      R1,[R0, #+16]
   \   00000330   0x....             LDR.N    R0,??DataTable9_24  ;; 0x42c80000
   \   00000332   0x.... 0x....      BL       __aeabi_fmul
   \   00000336   0x.... 0x....      BL       __aeabi_f2iz
   \   0000033A   0x.... 0x....      BL       abs
   \   0000033E   0x0005             MOVS     R5,R0
   \   00000340   0x....             LDR.N    R0,??DataTable9_7
   \   00000342   0x6900             LDR      R0,[R0, #+16]
   \   00000344   0x.... 0x....      BL       __aeabi_f2iz
   \   00000348   0x.... 0x....      BL       abs
   \   0000034C   0x0006             MOVS     R6,R0
   \   0000034E   0x....             LDR.N    R0,??DataTable9_7
   \   00000350   0x68C1             LDR      R1,[R0, #+12]
   \   00000352   0x....             LDR.N    R0,??DataTable9_21  ;; 0x447a0000
   \   00000354   0x.... 0x....      BL       __aeabi_fmul
   \   00000358   0x.... 0x....      BL       __aeabi_f2iz
   \   0000035C   0x.... 0x....      BL       abs
   \   00000360   0x0007             MOVS     R7,R0
   \   00000362   0x....             LDR.N    R0,??DataTable9_7
   \   00000364   0x68C0             LDR      R0,[R0, #+12]
   \   00000366   0x.... 0x....      BL       __aeabi_f2iz
   \   0000036A   0x.... 0x....      BL       abs
   \   0000036E   0x4680             MOV      R8,R0
   \   00000370   0x....             LDR.N    R0,??DataTable9_21  ;; 0x447a0000
   \   00000372   0x0021             MOVS     R1,R4
   \   00000374   0x.... 0x....      BL       __aeabi_fmul
   \   00000378   0x.... 0x....      BL       __aeabi_f2iz
   \   0000037C   0x.... 0x....      BL       abs
   \   00000380   0x4681             MOV      R9,R0
   \   00000382   0x0020             MOVS     R0,R4
   \   00000384   0x.... 0x....      BL       __aeabi_f2iz
   \   00000388   0x.... 0x....      BL       abs
   \   0000038C   0x9504             STR      R5,[SP, #+16]
   \   0000038E   0x9603             STR      R6,[SP, #+12]
   \   00000390   0x9702             STR      R7,[SP, #+8]
   \   00000392   0xF8CD 0x8004      STR      R8,[SP, #+4]
   \   00000396   0xF8CD 0x9000      STR      R9,[SP, #+0]
   \   0000039A   0x0003             MOVS     R3,R0
   \   0000039C   0x....             LDR.N    R2,??DataTable9_27
   \   0000039E   0x....             LDR.N    R1,??DataTable9_29
   \   000003A0   0xA809             ADD      R0,SP,#+36
   \   000003A2   0x.... 0x....      BL       sprintf
    418                  }
    419                  
    420                  g_RtuStatus.led_dwload = 1;
   \                     ??adc_task_21:
   \   000003A6   0x....             LDR.N    R0,??DataTable9_26
   \   000003A8   0x2101             MOVS     R1,#+1
   \   000003AA   0xF880 0x1037      STRB     R1,[R0, #+55]
    421                  file_write(&dat);
   \   000003AE   0xA807             ADD      R0,SP,#+28
   \   000003B0   0x.... 0x....      BL       file_write
    422                }
    423              }
    424            }
    425            
    426            /** ADC2 TASK -------------------------------------------------*/
    427            if( adc2_time_out == 0)
   \                     ??adc_task_13:
   \   000003B4   0x....             LDR.N    R0,??DataTable9_12
   \   000003B6   0x6800             LDR      R0,[R0, #+0]
   \   000003B8   0x2800             CMP      R0,#+0
   \   000003BA   0xF040 0x80C5      BNE.W    ??adc_task_22
    428            {
    429              if( adc2_para.frq != 0)
   \   000003BE   0x....             LDR.N    R0,??DataTable9_9
   \   000003C0   0x6840             LDR      R0,[R0, #+4]
   \   000003C2   0x2800             CMP      R0,#+0
   \   000003C4   0xF000 0x80C0      BEQ.W    ??adc_task_22
    430              {
    431                adc2_time_out = adc2_para.frq * 2400;
   \   000003C8   0x....             LDR.N    R0,??DataTable9_9
   \   000003CA   0x6840             LDR      R0,[R0, #+4]
   \   000003CC   0xF44F 0x6116      MOV      R1,#+2400
   \   000003D0   0x4348             MULS     R0,R1,R0
   \   000003D2   0x....             LDR.N    R1,??DataTable9_12
   \   000003D4   0x6008             STR      R0,[R1, #+0]
    432                if( adc2_para.type != 0)
   \   000003D6   0x....             LDR.N    R0,??DataTable9_9
   \   000003D8   0x6800             LDR      R0,[R0, #+0]
   \   000003DA   0x2800             CMP      R0,#+0
   \   000003DC   0xF000 0x80B4      BEQ.W    ??adc_task_22
    433                {
    434                  rtc_get_time(&time_now);
   \   000003E0   0xA805             ADD      R0,SP,#+20
   \   000003E2   0x.... 0x....      BL       rtc_get_time
    435                  
    436                  if( (time_now.y < 2015) || (time_now.y > 2100))
   \   000003E6   0xF8BD 0x0014      LDRH     R0,[SP, #+20]
   \   000003EA   0xF240 0x71DF      MOVW     R1,#+2015
   \   000003EE   0x4288             CMP      R0,R1
   \   000003F0   0xDB05             BLT.N    ??adc_task_23
   \   000003F2   0xF8BD 0x0014      LDRH     R0,[SP, #+20]
   \   000003F6   0xF640 0x0135      MOVW     R1,#+2101
   \   000003FA   0x4288             CMP      R0,R1
   \   000003FC   0xDB00             BLT.N    ??adc_task_24
    437                  {
    438                    return;
   \                     ??adc_task_23:
   \   000003FE   0xE0A3             B.N      ??adc_task_6
    439                  }
    440                  
    441                  dat.y = time_now.y;
   \                     ??adc_task_24:
   \   00000400   0xF8BD 0x0014      LDRH     R0,[SP, #+20]
   \   00000404   0xF8AD 0x001C      STRH     R0,[SP, #+28]
    442                  dat.m = time_now.m;
   \   00000408   0xF89D 0x0016      LDRB     R0,[SP, #+22]
   \   0000040C   0xF88D 0x001E      STRB     R0,[SP, #+30]
    443                  dat.d = time_now.d;
   \   00000410   0xF89D 0x0017      LDRB     R0,[SP, #+23]
   \   00000414   0xF88D 0x001F      STRB     R0,[SP, #+31]
    444                  dat.H = time_now.H;
   \   00000418   0xF89D 0x0018      LDRB     R0,[SP, #+24]
   \   0000041C   0xF88D 0x0020      STRB     R0,[SP, #+32]
    445                  dat.M = time_now.M;
   \   00000420   0xF89D 0x0019      LDRB     R0,[SP, #+25]
   \   00000424   0xF88D 0x0021      STRB     R0,[SP, #+33]
    446                  dat.S = time_now.S;
   \   00000428   0xF89D 0x001A      LDRB     R0,[SP, #+26]
   \   0000042C   0xF88D 0x0022      STRB     R0,[SP, #+34]
    447                  
    448                  if( adc2_para.stype == 1)
   \   00000430   0x....             LDR.N    R0,??DataTable9_9
   \   00000432   0x6880             LDR      R0,[R0, #+8]
   \   00000434   0x2801             CMP      R0,#+1
   \   00000436   0xD104             BNE.N    ??adc_task_25
    449                  {//电压型
    450                    adc_val = adc_get_voltage(3);
   \   00000438   0x2003             MOVS     R0,#+3
   \   0000043A   0x.... 0x....      BL       adc_get_voltage
   \   0000043E   0x0004             MOVS     R4,R0
   \   00000440   0xE009             B.N      ??adc_task_26
    451                  }
    452                  else if( adc2_para.stype == 2)
   \                     ??adc_task_25:
   \   00000442   0x....             LDR.N    R0,??DataTable9_9
   \   00000444   0x6880             LDR      R0,[R0, #+8]
   \   00000446   0x2802             CMP      R0,#+2
   \   00000448   0xD104             BNE.N    ??adc_task_27
    453                  {//电流型
    454                    adc_val = adc_get_current(3);
   \   0000044A   0x2003             MOVS     R0,#+3
   \   0000044C   0x.... 0x....      BL       adc_get_current
   \   00000450   0x0004             MOVS     R4,R0
   \   00000452   0xE000             B.N      ??adc_task_26
    455                  }
    456                  else
    457                  {
    458                    return;
   \                     ??adc_task_27:
   \   00000454   0xE078             B.N      ??adc_task_6
    459                  }
    460                  
    461                  if( ((uint32_t)(adc_val *1000)) < 1)
   \                     ??adc_task_26:
   \   00000456   0x....             LDR.N    R0,??DataTable9_21  ;; 0x447a0000
   \   00000458   0x0021             MOVS     R1,R4
   \   0000045A   0x.... 0x....      BL       __aeabi_fmul
   \   0000045E   0x.... 0x....      BL       __aeabi_f2uiz
   \   00000462   0x2800             CMP      R0,#+0
   \   00000464   0xD070             BEQ.N    ??adc_task_6
    462                  {//加入0.001V/0.001mA下限限制
    463                    return;
    464                  }
    465                  
    466                  dat.type = adc2_para.type;
   \                     ??adc_task_28:
   \   00000466   0x....             LDR.N    R0,??DataTable9_9
   \   00000468   0x6800             LDR      R0,[R0, #+0]
   \   0000046A   0xF88D 0x0023      STRB     R0,[SP, #+35]
    467                  
    468                  if(adc2_para.type == 5)
   \   0000046E   0x....             LDR.N    R0,??DataTable9_9
   \   00000470   0x6800             LDR      R0,[R0, #+0]
   \   00000472   0x2805             CMP      R0,#+5
   \   00000474   0xD118             BNE.N    ??adc_task_29
    469                  {//土壤水分计
    470                    //sprintf(dat.data, "%s,0,%c%d.%03d",adc2_para.sname,(adc_val > 0?'+':'-'),abs(adc_val),abs(adc_val * 1000) % 1000);
    471                    sprintf(dat.data, "%s,2,%d.%03d,%c",adc2_para.sname,
    472                            abs(adc_val),
    473                             abs(adc_val*1000),
    474                             adc2_para.para0.c[0]);
   \   00000476   0x....             LDR.N    R0,??DataTable9_21  ;; 0x447a0000
   \   00000478   0x0021             MOVS     R1,R4
   \   0000047A   0x.... 0x....      BL       __aeabi_fmul
   \   0000047E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000482   0x.... 0x....      BL       abs
   \   00000486   0x0005             MOVS     R5,R0
   \   00000488   0x0020             MOVS     R0,R4
   \   0000048A   0x.... 0x....      BL       __aeabi_f2iz
   \   0000048E   0x.... 0x....      BL       abs
   \   00000492   0x....             LDR.N    R1,??DataTable9_9
   \   00000494   0x7B09             LDRB     R1,[R1, #+12]
   \   00000496   0x9101             STR      R1,[SP, #+4]
   \   00000498   0x9500             STR      R5,[SP, #+0]
   \   0000049A   0x0003             MOVS     R3,R0
   \   0000049C   0x....             LDR.N    R2,??DataTable9_30
   \   0000049E   0x....             LDR.N    R1,??DataTable9_31
   \   000004A0   0xA809             ADD      R0,SP,#+36
   \   000004A2   0x.... 0x....      BL       sprintf
   \   000004A6   0xE048             B.N      ??adc_task_30
    475                  }
    476                  else
    477                  {
    478                    sprintf(dat.data, "%s,2,%d.%03d,%d.%03d,%d.%03d",adc2_para.sname,
    479                            abs(adc_val),
    480                            abs(adc_val*1000),
    481                            abs(adc2_para.para0.f),
    482                            abs(adc2_para.para0.f*1000)%1000,
    483                            abs(adc2_para.para1),
    484                            abs(adc2_para.para1*1000)%1000);
   \                     ??adc_task_29:
   \   000004A8   0x....             LDR.N    R0,??DataTable9_9
   \   000004AA   0x6901             LDR      R1,[R0, #+16]
   \   000004AC   0x....             LDR.N    R0,??DataTable9_21  ;; 0x447a0000
   \   000004AE   0x.... 0x....      BL       __aeabi_fmul
   \   000004B2   0x.... 0x....      BL       __aeabi_f2iz
   \   000004B6   0x.... 0x....      BL       abs
   \   000004BA   0x0005             MOVS     R5,R0
   \   000004BC   0xF44F 0x767A      MOV      R6,#+1000
   \   000004C0   0x....             LDR.N    R0,??DataTable9_9
   \   000004C2   0x6900             LDR      R0,[R0, #+16]
   \   000004C4   0x.... 0x....      BL       __aeabi_f2iz
   \   000004C8   0x.... 0x....      BL       abs
   \   000004CC   0x0007             MOVS     R7,R0
   \   000004CE   0x....             LDR.N    R0,??DataTable9_9
   \   000004D0   0x68C1             LDR      R1,[R0, #+12]
   \   000004D2   0x....             LDR.N    R0,??DataTable9_21  ;; 0x447a0000
   \   000004D4   0x.... 0x....      BL       __aeabi_fmul
   \   000004D8   0x.... 0x....      BL       __aeabi_f2iz
   \   000004DC   0x.... 0x....      BL       abs
   \   000004E0   0x4680             MOV      R8,R0
   \   000004E2   0xF44F 0x797A      MOV      R9,#+1000
   \   000004E6   0x....             LDR.N    R0,??DataTable9_9
   \   000004E8   0x68C0             LDR      R0,[R0, #+12]
   \   000004EA   0x.... 0x....      BL       __aeabi_f2iz
   \   000004EE   0x.... 0x....      BL       abs
   \   000004F2   0x4682             MOV      R10,R0
   \   000004F4   0x....             LDR.N    R0,??DataTable9_21  ;; 0x447a0000
   \   000004F6   0x0021             MOVS     R1,R4
   \   000004F8   0x.... 0x....      BL       __aeabi_fmul
   \   000004FC   0x.... 0x....      BL       __aeabi_f2iz
   \   00000500   0x.... 0x....      BL       abs
   \   00000504   0x4683             MOV      R11,R0
   \   00000506   0x0020             MOVS     R0,R4
   \   00000508   0x.... 0x....      BL       __aeabi_f2iz
   \   0000050C   0x.... 0x....      BL       abs
   \   00000510   0xFB95 0xF1F6      SDIV     R1,R5,R6
   \   00000514   0xFB06 0x5111      MLS      R1,R6,R1,R5
   \   00000518   0x9104             STR      R1,[SP, #+16]
   \   0000051A   0x9703             STR      R7,[SP, #+12]
   \   0000051C   0xFB98 0xF1F9      SDIV     R1,R8,R9
   \   00000520   0xFB09 0x8111      MLS      R1,R9,R1,R8
   \   00000524   0x9102             STR      R1,[SP, #+8]
   \   00000526   0xF8CD 0xA004      STR      R10,[SP, #+4]
   \   0000052A   0xF8CD 0xB000      STR      R11,[SP, #+0]
   \   0000052E   0x0003             MOVS     R3,R0
   \   00000530   0x....             LDR.N    R2,??DataTable9_30
   \   00000532   0x....             LDR.N    R1,??DataTable9_32
   \   00000534   0xA809             ADD      R0,SP,#+36
   \   00000536   0x.... 0x....      BL       sprintf
    485                  }
    486                  
    487                  g_RtuStatus.led_dwload = 1;
   \                     ??adc_task_30:
   \   0000053A   0x....             LDR.N    R0,??DataTable9_26
   \   0000053C   0x2101             MOVS     R1,#+1
   \   0000053E   0xF880 0x1037      STRB     R1,[R0, #+55]
    488                  file_write(&dat);
   \   00000542   0xA807             ADD      R0,SP,#+28
   \   00000544   0x.... 0x....      BL       file_write
    489                }
    490              }
    491            }
    492            
    493            
    494            
    495          }
   \                     ??adc_task_22:
   \                     ??adc_task_6:
   \   00000548   0xB015             ADD      SP,SP,#+84
   \   0000054A   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    496          

   \                                 In section .text, align 2, keep-with-next
    497          void adc_time_handler(void)
    498          {//25ms 中断
    499            if( adc0_time_out > 0)
   \                     adc_time_handler:
   \   00000000   0x....             LDR.N    R0,??DataTable9_10
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD004             BEQ.N    ??adc_time_handler_0
    500              adc0_time_out--;
   \   00000008   0x....             LDR.N    R0,??DataTable9_10
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x1E40             SUBS     R0,R0,#+1
   \   0000000E   0x....             LDR.N    R1,??DataTable9_10
   \   00000010   0x6008             STR      R0,[R1, #+0]
    501            
    502            if( adc1_time_out > 0)
   \                     ??adc_time_handler_0:
   \   00000012   0x....             LDR.N    R0,??DataTable9_11
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD004             BEQ.N    ??adc_time_handler_1
    503              adc1_time_out--;
   \   0000001A   0x....             LDR.N    R0,??DataTable9_11
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0x1E40             SUBS     R0,R0,#+1
   \   00000020   0x....             LDR.N    R1,??DataTable9_11
   \   00000022   0x6008             STR      R0,[R1, #+0]
    504            
    505            if( adc2_time_out > 0)
   \                     ??adc_time_handler_1:
   \   00000024   0x....             LDR.N    R0,??DataTable9_12
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xD004             BEQ.N    ??adc_time_handler_2
    506              adc2_time_out--;
   \   0000002C   0x....             LDR.N    R0,??DataTable9_12
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x1E40             SUBS     R0,R0,#+1
   \   00000032   0x....             LDR.N    R1,??DataTable9_12
   \   00000034   0x6008             STR      R0,[R1, #+0]
    507          }
   \                     ??adc_time_handler_2:
   \   00000036   0x4770             BX       LR               ;; return
    508          
    509          

   \                                 In section .text, align 2, keep-with-next
    510          void ADC_DMA_IRQHandler (void)
    511          {
   \                     ADC_DMA_IRQHandler:
   \   00000000   0xB580             PUSH     {R7,LR}
    512            static uint32_t adc_dma_err;
    513            
    514            // Check counter terminal status
    515            if(GPDMA_IntGetStatus(GPDMA_STAT_INTTC, ADC_DMA_CH))
   \   00000002   0x2102             MOVS     R1,#+2
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x.... 0x....      BL       GPDMA_IntGetStatus
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD008             BEQ.N    ??ADC_DMA_IRQHandler_0
    516            {
    517              // Clear terminate counter Interrupt pending
    518              GPDMA_ClearIntPending (GPDMA_STATCLR_INTTC, ADC_DMA_CH);
   \   0000000E   0x2102             MOVS     R1,#+2
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       GPDMA_ClearIntPending
    519              
    520              adc_dma_tc++;
   \   00000016   0x....             LDR.N    R0,??DataTable9_17
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x1C40             ADDS     R0,R0,#+1
   \   0000001C   0x....             LDR.N    R1,??DataTable9_17
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    521            }
    522            
    523            // Check error terminal status
    524            if (GPDMA_IntGetStatus(GPDMA_STAT_INTERR, ADC_DMA_CH))
   \                     ??ADC_DMA_IRQHandler_0:
   \   00000020   0x2102             MOVS     R1,#+2
   \   00000022   0x2002             MOVS     R0,#+2
   \   00000024   0x.... 0x....      BL       GPDMA_IntGetStatus
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xD008             BEQ.N    ??ADC_DMA_IRQHandler_1
    525            {
    526              // Clear error counter Interrupt pending
    527              GPDMA_ClearIntPending (GPDMA_STATCLR_INTERR, ADC_DMA_CH);
   \   0000002C   0x2102             MOVS     R1,#+2
   \   0000002E   0x2001             MOVS     R0,#+1
   \   00000030   0x.... 0x....      BL       GPDMA_ClearIntPending
    528              
    529              adc_dma_err++;
   \   00000034   0x....             LDR.N    R0,??DataTable9_33
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0x1C40             ADDS     R0,R0,#+1
   \   0000003A   0x....             LDR.N    R1,??DataTable9_33
   \   0000003C   0x6008             STR      R0,[R1, #+0]
    530            }
    531          }
   \                     ??ADC_DMA_IRQHandler_1:
   \   0000003E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     ??adc_dma_err:
   \   00000000                      DS8 4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0xE000E180         DC32     0xe000e180

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0xE000ED18         DC32     0xe000ed18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0xE000E400         DC32     0xe000e400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x........         DC32     g_Byte128+0xA9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x........         DC32     adc0_para

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \   00000000   0x........         DC32     g_Byte128+0xC9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_7:
   \   00000000   0x........         DC32     adc1_para

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_8:
   \   00000000   0x........         DC32     g_Byte128+0xE9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_9:
   \   00000000   0x........         DC32     adc2_para

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_10:
   \   00000000   0x........         DC32     adc0_time_out

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_11:
   \   00000000   0x........         DC32     adc1_time_out

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_12:
   \   00000000   0x........         DC32     adc2_time_out

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_13:
   \   00000000   0x000186A0         DC32     0x186a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_14:
   \   00000000   0x40034000         DC32     0x40034000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_15:
   \   00000000   0x........         DC32     ADC_GPDMACfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_16:
   \   00000000   0x........         DC32     adc_conv_value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_17:
   \   00000000   0x........         DC32     adc_dma_tc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_18:
   \   00000000   0x........         DC32     adc_map

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_19:
   \   00000000   0x........         DC32     adc_vol_ratio

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_20:
   \   00000000   0x........         DC32     adc_cur_ratio

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_21:
   \   00000000   0x447A0000         DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_22:
   \   00000000   0x........         DC32     adc0_para+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_23:
   \   00000000   0x........         DC32     `?<Constant "%s,0,%d.%03d,%c">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_24:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_25:
   \   00000000   0x........         DC32     `?<Constant "%s,0,%d.%03d,%d.%03d,...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_26:
   \   00000000   0x........         DC32     g_RtuStatus

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_27:
   \   00000000   0x........         DC32     adc1_para+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_28:
   \   00000000   0x........         DC32     `?<Constant "%s,1,%d.%03d,%c">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_29:
   \   00000000   0x........         DC32     `?<Constant "%s,1,%d.%03d,%d.%03d,...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_30:
   \   00000000   0x........         DC32     adc2_para+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_31:
   \   00000000   0x........         DC32     `?<Constant "%s,2,%d.%03d,%c">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_32:
   \   00000000   0x........         DC32     `?<Constant "%s,2,%d.%03d,%d.%03d,...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_33:
   \   00000000   0x........         DC32     ??adc_dma_err

   \                                 In section .rodata, align 4
   \                     `?<Constant "%s,0,%d.%03d,%c">`:
   \   00000000   0x25 0x73          DC8 "%s,0,%d.%03d,%c"
   \              0x2C 0x30    
   \              0x2C 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x2C 0x25    
   \              0x63 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "%s,0,%d.%03d,%d.%03d,...">`:
   \   00000000   0x25 0x73          DC8 "%s,0,%d.%03d,%d.%03d,%d.%03d"
   \              0x2C 0x30    
   \              0x2C 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x2C 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x2C 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "%s,1,%d.%03d,%c">`:
   \   00000000   0x25 0x73          DC8 "%s,1,%d.%03d,%c"
   \              0x2C 0x31    
   \              0x2C 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x2C 0x25    
   \              0x63 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "%s,1,%d.%03d,%d.%03d,...">`:
   \   00000000   0x25 0x73          DC8 "%s,1,%d.%03d,%d.%03d,%d.%03d"
   \              0x2C 0x31    
   \              0x2C 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x2C 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x2C 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "%s,2,%d.%03d,%c">`:
   \   00000000   0x25 0x73          DC8 "%s,2,%d.%03d,%c"
   \              0x2C 0x32    
   \              0x2C 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x2C 0x25    
   \              0x63 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "%s,2,%d.%03d,%d.%03d,...">`:
   \   00000000   0x25 0x73          DC8 "%s,2,%d.%03d,%d.%03d,%d.%03d"
   \              0x2C 0x32    
   \              0x2C 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x2C 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x2C 0x25    
   \              0x64 0x2E    
   \              0x25 0x30    
   \              0x33 0x64    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   ADC_DMA_IRQHandler
         8   -> GPDMA_ClearIntPending
         8   -> GPDMA_IntGetStatus
       4   NVIC_DisableIRQ
       4   NVIC_EnableIRQ
       0   NVIC_SetPriority
       8   adc_get_current
         8   -> __aeabi_fmul
         8   -> __aeabi_ui2f
         8   -> adc_get_val
      24   adc_get_val
        24   -> GPDMA_ChannelCmd
        24   -> GPDMA_Setup
       8   adc_get_voltage
         8   -> __aeabi_fmul
         8   -> __aeabi_ui2f
         8   -> adc_get_val
       8   adc_init
         8   -> ADC_BurstCmd
         8   -> ADC_ChannelCmd
         8   -> ADC_Init
         8   -> CLKPWR_ConfigPPWR
         8   -> GPDMA_ChannelCmd
         8   -> GPDMA_Init
         8   -> GPDMA_Setup
         8   -> NVIC_DisableIRQ
         8   -> NVIC_EnableIRQ
         8   -> NVIC_SetPriority
         8   -> PINSEL_ConfigPin
         8   -> PINSEL_SetAnalogPinMode
         8   -> memcpy
     120   adc_task
       120   -> __aeabi_f2iz
       120   -> __aeabi_f2uiz
       120   -> __aeabi_fmul
       120   -> abs
       120   -> adc_get_current
       120   -> adc_get_voltage
       120   -> file_write
       120   -> rtc_get_time
       120   -> sprintf
       0   adc_time_handler
      16   memcpy
        16   -> __aeabi_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      16  ?<Constant "%s,0,%d.%03d,%c">
      32  ?<Constant "%s,0,%d.%03d,%d.%03d,...">
      16  ?<Constant "%s,1,%d.%03d,%c">
      32  ?<Constant "%s,1,%d.%03d,%d.%03d,...">
      16  ?<Constant "%s,2,%d.%03d,%c">
      32  ?<Constant "%s,2,%d.%03d,%d.%03d,...">
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_10
       4  ??DataTable9_11
       4  ??DataTable9_12
       4  ??DataTable9_13
       4  ??DataTable9_14
       4  ??DataTable9_15
       4  ??DataTable9_16
       4  ??DataTable9_17
       4  ??DataTable9_18
       4  ??DataTable9_19
       4  ??DataTable9_2
       4  ??DataTable9_20
       4  ??DataTable9_21
       4  ??DataTable9_22
       4  ??DataTable9_23
       4  ??DataTable9_24
       4  ??DataTable9_25
       4  ??DataTable9_26
       4  ??DataTable9_27
       4  ??DataTable9_28
       4  ??DataTable9_29
       4  ??DataTable9_3
       4  ??DataTable9_30
       4  ??DataTable9_31
       4  ??DataTable9_32
       4  ??DataTable9_33
       4  ??DataTable9_4
       4  ??DataTable9_5
       4  ??DataTable9_6
       4  ??DataTable9_7
       4  ??DataTable9_8
       4  ??DataTable9_9
      64  ADC_DMA_IRQHandler
      36  ADC_GPDMACfg
      26  NVIC_DisableIRQ
      26  NVIC_EnableIRQ
      38  NVIC_SetPriority
      56  adc0_para
       4  adc0_time_out
      56  adc1_para
       4  adc1_time_out
      56  adc2_para
       4  adc2_time_out
     160  adc_conv_value
      16  adc_cur_ratio
       4  adc_dma_err
       4  adc_dma_tc
      58  adc_get_current
     148  adc_get_val
      58  adc_get_voltage
     454  adc_init
       8  adc_map
    1358  adc_task
      56  adc_time_handler
      16  adc_vol_ratio
      22  memcpy

 
   384 bytes in section .bss
   184 bytes in section .rodata
 2 444 bytes in section .text
 
 2 422 bytes of CODE  memory (+ 22 bytes shared)
   184 bytes of CONST memory
   384 bytes of DATA  memory

Errors: none
Warnings: 30
