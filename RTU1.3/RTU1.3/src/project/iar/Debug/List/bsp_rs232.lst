###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.6.4896/W32 for ARM      26/Mar/2017  12:36:33 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\wangfan2\桌面\RTU_1.2\bsp\RS232\bsp_rs232.c           #
#    Command line =  D:\wangfan2\桌面\RTU_1.2\bsp\RS232\bsp_rs232.c -lCN      #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\List\ -o      #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\Obj\          #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5_2\arm\INC\c\DLib_Config_F #
#                    ull.h" -I D:\wangfan2\桌面\RTU_1.2\project\iar\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\ADC\ -I   #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RTC\ -I   #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\TILT\ -I  #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RDLevel\  #
#                    -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\RS232\ #
#                     -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\OS-v2 #
#                    \ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\BSP\Vibr #
#                    ationString\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\ #
#                    ..\ucos2\uCOS-II\Ports\ARM-Cortex-M3\Generic\IAR\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\ucos2\uCOS-II #
#                    \Source\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\u #
#                    cos2\uC-LIB\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\ #
#                    ..\ucos2\uC-CPU\ -I D:\wangfan2\桌面\RTU_1.2\project\iar #
#                    \..\..\ucos2\uC-CPU\ARM-Cortex-M3\IAR\ -I                #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\cmsis\Drivers #
#                    \source\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\c #
#                    msis\Drivers\include\ -I D:\wangfan2\桌面\RTU_1.2\projec #
#                    t\iar\..\..\app\ -I D:\wangfan2\桌面\RTU_1.2\project\iar #
#                    \..\..\uC-Probe\Target\Plugins\uCOS-II\ -I               #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Demos\Intro\Workspaces\ -I                            #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Demos\Intro\Source\ -I D:\wangfan2\桌面\RTU_1.2\proje #
#                    ct\iar\..\..\uC-Probe\Target\Communication\Generic\Sourc #
#                    e\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Prob #
#                    e\Target\Communication\Generic\RS-232\Source\ -I         #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Communication\Generic\RS-232\Ports\NXP\LPC17xx\ -I    #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\uC-Probe\Targ #
#                    et\Communication\Generic\RS-232\OS\uCOS-II\ -I           #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\cmsis\Core\CM #
#                    3\CoreSupport\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\. #
#                    .\..\cmsis\Core\CM3\DeviceSupport\NXP\LPC177x_8x\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\ -I  #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\DEVI #
#                    CE_BT\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\Hua #
#                    ceApp\DEVICE_COM\ -I D:\wangfan2\桌面\RTU_1.2\project\ia #
#                    r\..\..\HuaceApp\DEVICE_GPRS\ -I                         #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp\DEVI #
#                    CE_GPS\ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\Hu #
#                    aceApp\DEVICE_RADIO\ -I D:\wangfan2\桌面\RTU_1.2\project #
#                    \iar\..\..\HuaceApp\iap\ -I                              #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\FatFs\ -I     #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\USB\ -I       #
#                    D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\bsp\spi_flash #
#                    \ -I D:\wangfan2\桌面\RTU_1.2\project\iar\..\..\HuaceApp #
#                    \LED\ -On --use_c++_inline                               #
#    List file    =  D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\List\bsp_rs23 #
#                    2.lst                                                    #
#    Object file  =  D:\wangfan2\桌面\RTU_1.2\project\iar\Debug\Obj\bsp_rs232 #
#                    .o                                                       #
#                                                                             #
#                                                                             #
###############################################################################

D:\wangfan2\桌面\RTU_1.2\bsp\RS232\bsp_rs232.c
      1          #include "bsp_rs232.h"

   \                                 In section .text, align 2
   \   __intrinsic __nounwind __interwork __softfp void *memcpy(void *, void const *, size_t)
   \                     memcpy:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x0032             MOVS     R2,R6
   \   0000000A   0x0029             MOVS     R1,R5
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_memcpy
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xBD70             POP      {R4-R6,PC}       ;; return
      2          

   \                                 In section .bss, align 4
      3          rs232_para_t rs232_para;
   \                     rs232_para:
   \   00000000                      DS8 156
      4          
      5          //static uint8_t rs232_para.data[100];
      6          

   \                                 In section .bss, align 4
      7          static uint32_t rs232_timeout;
   \                     rs232_timeout:
   \   00000000                      DS8 4
      8          

   \                                 In section .bss, align 4
      9          static uint32_t rs232_data_cnt;
   \                     rs232_data_cnt:
   \   00000000                      DS8 4
     10          
     11          

   \                                 In section .text, align 2, keep-with-next
     12          void rs232_init(void)
     13          {
     14            /** 变量初始化 **/
     15            rs232_timeout = rs232_para.frq * 2400;
   \                     rs232_init:
   \   00000000   0x....             LDR.N    R0,??DataTable3
   \   00000002   0x6840             LDR      R0,[R0, #+4]
   \   00000004   0xF44F 0x6116      MOV      R1,#+2400
   \   00000008   0x4348             MULS     R0,R1,R0
   \   0000000A   0x....             LDR.N    R1,??DataTable3_1
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     16            rs232_data_cnt = 0;
   \   0000000E   0x....             LDR.N    R0,??DataTable3_2
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x6001             STR      R1,[R0, #+0]
     17            
     18            /** 端口初始化 **/
     19            
     20            /** 中断初始化 **/
     21          }
   \   00000014   0x4770             BX       LR               ;; return
     22          

   \                                 In section .text, align 2, keep-with-next
     23          void rs232_task(void)
     24          { 
   \                     rs232_task:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB090             SUB      SP,SP,#+64
     25            if( rs232_para.frq_changed)
   \   00000004   0x....             LDR.N    R0,??DataTable3
   \   00000006   0xF890 0x0099      LDRB     R0,[R0, #+153]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD00A             BEQ.N    ??rs232_task_0
     26            {
     27              rs232_para.frq_changed = 0;
   \   0000000E   0x....             LDR.N    R0,??DataTable3
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0xF880 0x1099      STRB     R1,[R0, #+153]
     28              
     29              rs232_timeout = rs232_para.frq * 2400;
   \   00000016   0x....             LDR.N    R0,??DataTable3
   \   00000018   0x6840             LDR      R0,[R0, #+4]
   \   0000001A   0xF44F 0x6116      MOV      R1,#+2400
   \   0000001E   0x4348             MULS     R0,R1,R0
   \   00000020   0x....             LDR.N    R1,??DataTable3_1
   \   00000022   0x6008             STR      R0,[R1, #+0]
     30            }
     31            if( rs232_para.frq != 0)
   \                     ??rs232_task_0:
   \   00000024   0x....             LDR.N    R0,??DataTable3
   \   00000026   0x6840             LDR      R0,[R0, #+4]
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xF000 0x808C      BEQ.W    ??rs232_task_1
     32            {
     33              if((rs232_timeout == 0)&&(rs232_data_cnt != 0))
   \   0000002E   0x....             LDR.N    R0,??DataTable3_1
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xF040 0x8087      BNE.W    ??rs232_task_1
   \   00000038   0x....             LDR.N    R0,??DataTable3_2
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xF000 0x8082      BEQ.W    ??rs232_task_1
     34              {
     35                rs232_timeout = rs232_para.frq * 2400;
   \   00000042   0x....             LDR.N    R0,??DataTable3
   \   00000044   0x6840             LDR      R0,[R0, #+4]
   \   00000046   0xF44F 0x6116      MOV      R1,#+2400
   \   0000004A   0x4348             MULS     R0,R1,R0
   \   0000004C   0x....             LDR.N    R1,??DataTable3_1
   \   0000004E   0x6008             STR      R0,[R1, #+0]
     36                
     37                if( rs232_data_cnt > 0)
   \   00000050   0x....             LDR.N    R0,??DataTable3_2
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0x2800             CMP      R0,#+0
   \   00000056   0xD010             BEQ.N    ??rs232_task_2
     38                    rs232_data_cnt = 0;
   \   00000058   0x....             LDR.N    R0,??DataTable3_2
   \   0000005A   0x2100             MOVS     R1,#+0
   \   0000005C   0x6001             STR      R1,[R0, #+0]
     39                else
     40                  return;
     41                
     42                //保存数据
     43                struct DATA_STRUCT dat;
     44                
     45                struct TIME_STRUCT time_now;
     46                
     47                dat.type = rs232_para.type;
   \   0000005E   0x....             LDR.N    R0,??DataTable3
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0xF88D 0x000F      STRB     R0,[SP, #+15]
     48                
     49                rtc_get_time(&time_now);
   \   00000066   0xA800             ADD      R0,SP,#+0
   \   00000068   0x.... 0x....      BL       rtc_get_time
     50                
     51                if((time_now.y < 2015) || (time_now.y > 2100))
   \   0000006C   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000070   0xF240 0x71DF      MOVW     R1,#+2015
   \   00000074   0x4288             CMP      R0,R1
   \   00000076   0xDB07             BLT.N    ??rs232_task_3
   \   00000078   0xE000             B.N      ??rs232_task_4
   \                     ??rs232_task_2:
   \   0000007A   0xE064             B.N      ??rs232_task_5
   \                     ??rs232_task_4:
   \   0000007C   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000080   0xF640 0x0135      MOVW     R1,#+2101
   \   00000084   0x4288             CMP      R0,R1
   \   00000086   0xDB00             BLT.N    ??rs232_task_6
     52                {
     53                  return;
   \                     ??rs232_task_3:
   \   00000088   0xE05D             B.N      ??rs232_task_5
     54                }
     55                
     56                g_RtuStatus.led_dwload = 1;
   \                     ??rs232_task_6:
   \   0000008A   0x....             LDR.N    R0,??DataTable3_3
   \   0000008C   0x2101             MOVS     R1,#+1
   \   0000008E   0xF880 0x1037      STRB     R1,[R0, #+55]
     57                
     58                dat.y = time_now.y;
   \   00000092   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000096   0xF8AD 0x0008      STRH     R0,[SP, #+8]
     59                dat.m = time_now.m;
   \   0000009A   0xF89D 0x0002      LDRB     R0,[SP, #+2]
   \   0000009E   0xF88D 0x000A      STRB     R0,[SP, #+10]
     60                dat.d = time_now.d;
   \   000000A2   0xF89D 0x0003      LDRB     R0,[SP, #+3]
   \   000000A6   0xF88D 0x000B      STRB     R0,[SP, #+11]
     61                dat.H = time_now.H;
   \   000000AA   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   000000AE   0xF88D 0x000C      STRB     R0,[SP, #+12]
     62                dat.M = time_now.M;
   \   000000B2   0xF89D 0x0005      LDRB     R0,[SP, #+5]
   \   000000B6   0xF88D 0x000D      STRB     R0,[SP, #+13]
     63                dat.S = time_now.S;
   \   000000BA   0xF89D 0x0006      LDRB     R0,[SP, #+6]
   \   000000BE   0xF88D 0x000E      STRB     R0,[SP, #+14]
     64                
     65                uint16_t i;
     66                
     67                i = strlen(rs232_para.data);
   \   000000C2   0x....             LDR.N    R0,??DataTable3_4
   \   000000C4   0x.... 0x....      BL       strlen
   \   000000C8   0x0004             MOVS     R4,R0
     68          
     69                if( (i != 0))
   \   000000CA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000CC   0x2C00             CMP      R4,#+0
   \   000000CE   0xD013             BEQ.N    ??rs232_task_7
     70                {
     71                  if( (rs232_para.data[i-1] =='\r') || (rs232_para.data[i-1] =='\n'))
   \   000000D0   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000D2   0x....             LDR.N    R0,??DataTable3
   \   000000D4   0x1820             ADDS     R0,R4,R0
   \   000000D6   0xF890 0x0034      LDRB     R0,[R0, #+52]
   \   000000DA   0x280D             CMP      R0,#+13
   \   000000DC   0xD006             BEQ.N    ??rs232_task_8
   \   000000DE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000E0   0x....             LDR.N    R0,??DataTable3
   \   000000E2   0x1820             ADDS     R0,R4,R0
   \   000000E4   0xF890 0x0034      LDRB     R0,[R0, #+52]
   \   000000E8   0x280A             CMP      R0,#+10
   \   000000EA   0xD105             BNE.N    ??rs232_task_7
     72                  {
     73                    rs232_para.data[i-1] ='\0';
   \                     ??rs232_task_8:
   \   000000EC   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000EE   0x....             LDR.N    R0,??DataTable3
   \   000000F0   0x1820             ADDS     R0,R4,R0
   \   000000F2   0x2100             MOVS     R1,#+0
   \   000000F4   0xF880 0x1034      STRB     R1,[R0, #+52]
     74                  }
     75                }
     76                
     77                if( (i > 1))
   \                     ??rs232_task_7:
   \   000000F8   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000FA   0x2C02             CMP      R4,#+2
   \   000000FC   0xDB13             BLT.N    ??rs232_task_9
     78                {
     79                  if( (rs232_para.data[i-2] =='\r') || (rs232_para.data[i-2] =='\n'))
   \   000000FE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000100   0x....             LDR.N    R0,??DataTable3
   \   00000102   0x1820             ADDS     R0,R4,R0
   \   00000104   0xF890 0x0033      LDRB     R0,[R0, #+51]
   \   00000108   0x280D             CMP      R0,#+13
   \   0000010A   0xD006             BEQ.N    ??rs232_task_10
   \   0000010C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000010E   0x....             LDR.N    R0,??DataTable3
   \   00000110   0x1820             ADDS     R0,R4,R0
   \   00000112   0xF890 0x0033      LDRB     R0,[R0, #+51]
   \   00000116   0x280A             CMP      R0,#+10
   \   00000118   0xD105             BNE.N    ??rs232_task_9
     80                  {
     81                    rs232_para.data[i-2] ='\0';
   \                     ??rs232_task_10:
   \   0000011A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000011C   0x....             LDR.N    R0,??DataTable3
   \   0000011E   0x1820             ADDS     R0,R4,R0
   \   00000120   0x2100             MOVS     R1,#+0
   \   00000122   0xF880 0x1033      STRB     R1,[R0, #+51]
     82                  }
     83                }
     84                
     85                rs232_para.data[41] = 0;
   \                     ??rs232_task_9:
   \   00000126   0x....             LDR.N    R0,??DataTable3
   \   00000128   0x2100             MOVS     R1,#+0
   \   0000012A   0xF880 0x105E      STRB     R1,[R0, #+94]
     86                
     87                memcpy(dat.data,rs232_para.data,42);
   \   0000012E   0x222A             MOVS     R2,#+42
   \   00000130   0x....             LDR.N    R1,??DataTable3_4
   \   00000132   0xA804             ADD      R0,SP,#+16
   \   00000134   0x.... 0x....      BL       memcpy
     88                
     89                g_RtuStatus.led_dwload = 1;
   \   00000138   0x....             LDR.N    R0,??DataTable3_3
   \   0000013A   0x2101             MOVS     R1,#+1
   \   0000013C   0xF880 0x1037      STRB     R1,[R0, #+55]
     90                file_write(&dat); 
   \   00000140   0xA802             ADD      R0,SP,#+8
   \   00000142   0x.... 0x....      BL       file_write
     91              }
     92            }
     93          }
   \                     ??rs232_task_1:
   \                     ??rs232_task_5:
   \   00000146   0xB010             ADD      SP,SP,#+64
   \   00000148   0xBD10             POP      {R4,PC}          ;; return
     94          

   \                                 In section .text, align 2, keep-with-next
     95          void rs232_data_put(uint8_t * p_pkg,uint16_t len)
     96          {
   \                     rs232_data_put:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     97            if( len < 42)
   \   00000006   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000008   0x2D2A             CMP      R5,#+42
   \   0000000A   0xDA0A             BGE.N    ??rs232_data_put_0
     98            {
     99              
    100              sprintf(rs232_para.data,"%s,30,%s",rs232_para.sname,p_pkg);
   \   0000000C   0x0023             MOVS     R3,R4
   \   0000000E   0x....             LDR.N    R2,??DataTable3_5
   \   00000010   0x....             LDR.N    R1,??DataTable3_6
   \   00000012   0x....             LDR.N    R0,??DataTable3_4
   \   00000014   0x.... 0x....      BL       sprintf
    101                 
    102              
    103              rs232_data_cnt++;
   \   00000018   0x....             LDR.N    R0,??DataTable3_2
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x1C40             ADDS     R0,R0,#+1
   \   0000001E   0x....             LDR.N    R1,??DataTable3_2
   \   00000020   0x6008             STR      R0,[R1, #+0]
    104            }
    105          }
   \                     ??rs232_data_put_0:
   \   00000022   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    106          

   \                                 In section .text, align 2, keep-with-next
    107          void rs232_time_handler(void)
    108          {//25ms中断
    109           if( rs232_timeout > 0)
   \                     rs232_time_handler:
   \   00000000   0x....             LDR.N    R0,??DataTable3_1
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD004             BEQ.N    ??rs232_time_handler_0
    110             rs232_timeout--;
   \   00000008   0x....             LDR.N    R0,??DataTable3_1
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x1E40             SUBS     R0,R0,#+1
   \   0000000E   0x....             LDR.N    R1,??DataTable3_1
   \   00000010   0x6008             STR      R0,[R1, #+0]
    111          }
   \                     ??rs232_time_handler_0:
   \   00000012   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     rs232_para

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     rs232_timeout

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     rs232_data_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     g_RtuStatus

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     rs232_para+0x35

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     rs232_para+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     `?<Constant "%s,30,%s">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "%s,30,%s">`:
   \   00000000   0x25 0x73          DC8 "%s,30,%s"
   \              0x2C 0x33    
   \              0x30 0x2C    
   \              0x25 0x73    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   memcpy
        16   -> __aeabi_memcpy
      16   rs232_data_put
        16   -> sprintf
       0   rs232_init
      72   rs232_task
        72   -> file_write
        72   -> memcpy
        72   -> rtc_get_time
        72   -> strlen
       0   rs232_time_handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant "%s,30,%s">
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
      22  memcpy
       4  rs232_data_cnt
      36  rs232_data_put
      22  rs232_init
     156  rs232_para
     330  rs232_task
      20  rs232_time_handler
       4  rs232_timeout

 
 164 bytes in section .bss
  12 bytes in section .rodata
 458 bytes in section .text
 
 436 bytes of CODE  memory (+ 22 bytes shared)
  12 bytes of CONST memory
 164 bytes of DATA  memory

Errors: none
Warnings: 2
