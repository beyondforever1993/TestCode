###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.6.4896/W32 for ARM      11/Mar/2017  15:34:40 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\cmsis\Dri #
#                    vers\source\lpc177x_8x_emc.c                             #
#    Command line =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\cmsis\Dri #
#                    vers\source\lpc177x_8x_emc.c -lCN                        #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\Debug\List\ -o D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë #
#                    \RTU_1.2\project\iar\Debug\Obj\ --no_cse --no_unroll     #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5_2\arm\INC\c\DLib_Config_F #
#                    ull.h" -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2 #
#                    \project\iar\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\ #
#                    RTU_1.2\project\iar\..\..\BSP\ -I                        #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\ADC\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´ #
#                    úÂë\RTU_1.2\project\iar\..\..\BSP\RTC\ -I                #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\TILT\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\ #
#                    ´úÂë\RTU_1.2\project\iar\..\..\BSP\RDLevel\ -I           #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\RS232\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU #
#                    \´úÂë\RTU_1.2\project\iar\..\..\BSP\OS-v2\ -I            #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\VibrationString\ -I                         #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\ucos2\uCOS-II\Ports\ARM-Cortex-M3\Generic\IAR\  #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\ucos2\uCOS-II\Source\ -I                     #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\ucos2\uC-LIB\ -I D:\wangfan2\×ÀÃæ\receiverfirm\ #
#                    RTU\´úÂë\RTU_1.2\project\iar\..\..\ucos2\uC-CPU\ -I      #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\ucos2\uC-CPU\ARM-Cortex-M3\IAR\ -I              #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\cmsis\Drivers\source\ -I                        #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\cmsis\Drivers\include\ -I                       #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\app\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\ #
#                    RTU_1.2\project\iar\..\..\uC-Probe\Target\Plugins\uCOS-I #
#                    I\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\pro #
#                    ject\iar\..\..\uC-Probe\Target\Demos\Intro\Workspaces\   #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\uC-Probe\Target\Demos\Intro\Source\ -I       #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\uC-Probe\Target\Communication\Generic\Source\   #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\uC-Probe\Target\Communication\Generic\RS-232 #
#                    \Source\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1 #
#                    .2\project\iar\..\..\uC-Probe\Target\Communication\Gener #
#                    ic\RS-232\Ports\NXP\LPC17xx\ -I                          #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\uC-Probe\Target\Communication\Generic\RS-232\OS #
#                    \uCOS-II\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_ #
#                    1.2\project\iar\..\..\cmsis\Core\CM3\CoreSupport\ -I     #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\cmsis\Core\CM3\DeviceSupport\NXP\LPC177x_8x\    #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\HuaceApp\ -I D:\wangfan2\×ÀÃæ\receiverfirm\R #
#                    TU\´úÂë\RTU_1.2\project\iar\..\..\HuaceApp\DEVICE_BT\    #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\HuaceApp\DEVICE_COM\ -I                      #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\DEVICE_GPRS\ -I                        #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\DEVICE_GPS\ -I                         #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\DEVICE_RADIO\ -I                       #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\iap\ -I D:\wangfan2\×ÀÃæ\receiverfirm\ #
#                    RTU\´úÂë\RTU_1.2\project\iar\..\..\FatFs\ -I             #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\USB\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\ #
#                    RTU_1.2\project\iar\..\..\bsp\spi_flash\ -I              #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\LED\ -On --use_c++_inline              #
#    List file    =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\Debug\List\lpc177x_8x_emc.lst                         #
#    Object file  =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\Debug\Obj\lpc177x_8x_emc.o                            #
#                                                                             #
#                                                                             #
###############################################################################

D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\cmsis\Drivers\source\lpc177x_8x_emc.c
      1          /**********************************************************************
      2          * $Id$		lpc177x_8x_emc.c			2011-06-02
      3          *//**
      4          * @file		lpc177x_8x_emc.c
      5          * @brief	Contains all functions support for EMC firmware library
      6          *			on LPC177x_8x
      7          * @version	1.0
      8          * @date		02. June. 2011
      9          * @author	NXP MCU SW Application Team
     10          * 
     11          * Copyright(C) 2011, NXP Semiconductor
     12          * All rights reserved.
     13          *
     14          ***********************************************************************
     15          * Software that is described herein is for illustrative purposes only
     16          * which provides customers with programming information regarding the
     17          * products. This software is supplied "AS IS" without any warranties.
     18          * NXP Semiconductors assumes no responsibility or liability for the
     19          * use of the software, conveys no license or title under any patent,
     20          * copyright, or mask work right to the product. NXP Semiconductors
     21          * reserves the right to make changes in the software without
     22          * notification. NXP Semiconductors also make no representation or
     23          * warranty that such application will be suitable for the specified
     24          * use without further testing or modification.
     25          **********************************************************************/
     26          
     27          #include "lpc177x_8x_emc.h"
     28          #include "lpc177x_8x_clkpwr.h"
     29          #include "lpc177x_8x_pinsel.h"
     30          
     31          
     32          /*********************************************************************//**
     33           * @brief 		EMC initialize
     34           * @param[in]	None
     35           * @return 		None
     36           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     37          void EMC_Init(void)
     38          {
   \                     EMC_Init:
   \   00000000   0xB510             PUSH     {R4,LR}
     39          	uint8_t i;
     40          
     41          	/* Enable clock for EMC */
     42          //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
     43          //	LPC_EMC->Control 	= 0x00000001;
     44          // 	LPC_EMC->Config  	= 0x00000000;
     45          
     46          	  LPC_SC->PCONP   	|= 0x00000800;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable23  ;; 0x400fc0c4
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable23  ;; 0x400fc0c4
   \   00000010   0x6008             STR      R0,[R1, #+0]
     47          	  LPC_SC->EMCDLYCTL   = 0x00001010;
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable23_1  ;; 0x400fc1dc
   \   00000016   0xF241 0x0110      MOVW     R1,#+4112
   \   0000001A   0x6001             STR      R1,[R0, #+0]
     48          	  LPC_EMC->Control 	= 0x00000001;
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable23_2  ;; 0x2009c000
   \   00000020   0x2101             MOVS     R1,#+1
   \   00000022   0x6001             STR      R1,[R0, #+0]
     49          	  LPC_EMC->Config  	= 0x00000000;
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable23_3  ;; 0x2009c008
   \   00000028   0x2100             MOVS     R1,#+0
   \   0000002A   0x6001             STR      R1,[R0, #+0]
     50          
     51            /* Pin configuration:
     52             * P2.14 - /EMC_CS2
     53             * P2.15 - /EMC_CS3
     54             *
     55             * P2.16 - /EMC_CAS
     56             * P2.17 - /EMC_RAS
     57             * P2.18 - EMC_CLK[0]
     58             * P2.19 - EMC_CLK[1]
     59             *
     60             * P2.20 - EMC_DYCS0
     61             * P2.21 - EMC_DYCS1
     62             * P2.22 - EMC_DYCS2
     63             * P2.23 - EMC_DYCS3
     64             *
     65             * P2.24 - EMC_CKE0
     66             * P2.25 - EMC_CKE1
     67             * P2.26 - EMC_CKE2
     68             * P2.27 - EMC_CKE3
     69             *
     70             * P2.28 - EMC_DQM0
     71             * P2.29 - EMC_DQM1
     72             * P2.30 - EMC_DQM2
     73             * P2.31 - EMC_DQM3
     74             *
     75             * P3.0-P3.31 - EMC_D[0-31]
     76             * P4.0-P4.23 - EMC_A[0-23]
     77             *
     78             * P4.24 - /EMC_OE
     79             * P4.25 - /EMC_WE
     80             *
     81             * P4.30 - /EMC_CS0
     82             * P4.31 - /EMC_CS1
     83             */
     84          	PINSEL_ConfigPin(2,14,1);
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x210E             MOVS     R1,#+14
   \   00000030   0x2002             MOVS     R0,#+2
   \   00000032   0x.... 0x....      BL       PINSEL_ConfigPin
     85          	PINSEL_ConfigPin(2,15,1);
   \   00000036   0x2201             MOVS     R2,#+1
   \   00000038   0x210F             MOVS     R1,#+15
   \   0000003A   0x2002             MOVS     R0,#+2
   \   0000003C   0x.... 0x....      BL       PINSEL_ConfigPin
     86          	PINSEL_ConfigPin(2,16,1);
   \   00000040   0x2201             MOVS     R2,#+1
   \   00000042   0x2110             MOVS     R1,#+16
   \   00000044   0x2002             MOVS     R0,#+2
   \   00000046   0x.... 0x....      BL       PINSEL_ConfigPin
     87          	PINSEL_ConfigPin(2,17,1);
   \   0000004A   0x2201             MOVS     R2,#+1
   \   0000004C   0x2111             MOVS     R1,#+17
   \   0000004E   0x2002             MOVS     R0,#+2
   \   00000050   0x.... 0x....      BL       PINSEL_ConfigPin
     88          	PINSEL_ConfigPin(2,18,1);
   \   00000054   0x2201             MOVS     R2,#+1
   \   00000056   0x2112             MOVS     R1,#+18
   \   00000058   0x2002             MOVS     R0,#+2
   \   0000005A   0x.... 0x....      BL       PINSEL_ConfigPin
     89          	PINSEL_ConfigPin(2,19,1);
   \   0000005E   0x2201             MOVS     R2,#+1
   \   00000060   0x2113             MOVS     R1,#+19
   \   00000062   0x2002             MOVS     R0,#+2
   \   00000064   0x.... 0x....      BL       PINSEL_ConfigPin
     90          	PINSEL_ConfigPin(2,20,1);
   \   00000068   0x2201             MOVS     R2,#+1
   \   0000006A   0x2114             MOVS     R1,#+20
   \   0000006C   0x2002             MOVS     R0,#+2
   \   0000006E   0x.... 0x....      BL       PINSEL_ConfigPin
     91          	PINSEL_ConfigPin(2,21,1);
   \   00000072   0x2201             MOVS     R2,#+1
   \   00000074   0x2115             MOVS     R1,#+21
   \   00000076   0x2002             MOVS     R0,#+2
   \   00000078   0x.... 0x....      BL       PINSEL_ConfigPin
     92             	PINSEL_ConfigPin(2,22,1);
   \   0000007C   0x2201             MOVS     R2,#+1
   \   0000007E   0x2116             MOVS     R1,#+22
   \   00000080   0x2002             MOVS     R0,#+2
   \   00000082   0x.... 0x....      BL       PINSEL_ConfigPin
     93          	PINSEL_ConfigPin(2,23,1);
   \   00000086   0x2201             MOVS     R2,#+1
   \   00000088   0x2117             MOVS     R1,#+23
   \   0000008A   0x2002             MOVS     R0,#+2
   \   0000008C   0x.... 0x....      BL       PINSEL_ConfigPin
     94          	PINSEL_ConfigPin(2,24,1);
   \   00000090   0x2201             MOVS     R2,#+1
   \   00000092   0x2118             MOVS     R1,#+24
   \   00000094   0x2002             MOVS     R0,#+2
   \   00000096   0x.... 0x....      BL       PINSEL_ConfigPin
     95          	PINSEL_ConfigPin(2,25,1);
   \   0000009A   0x2201             MOVS     R2,#+1
   \   0000009C   0x2119             MOVS     R1,#+25
   \   0000009E   0x2002             MOVS     R0,#+2
   \   000000A0   0x.... 0x....      BL       PINSEL_ConfigPin
     96          	PINSEL_ConfigPin(2,26,1);
   \   000000A4   0x2201             MOVS     R2,#+1
   \   000000A6   0x211A             MOVS     R1,#+26
   \   000000A8   0x2002             MOVS     R0,#+2
   \   000000AA   0x.... 0x....      BL       PINSEL_ConfigPin
     97          	PINSEL_ConfigPin(2,27,1);
   \   000000AE   0x2201             MOVS     R2,#+1
   \   000000B0   0x211B             MOVS     R1,#+27
   \   000000B2   0x2002             MOVS     R0,#+2
   \   000000B4   0x.... 0x....      BL       PINSEL_ConfigPin
     98          	PINSEL_ConfigPin(2,28,1);
   \   000000B8   0x2201             MOVS     R2,#+1
   \   000000BA   0x211C             MOVS     R1,#+28
   \   000000BC   0x2002             MOVS     R0,#+2
   \   000000BE   0x.... 0x....      BL       PINSEL_ConfigPin
     99          	PINSEL_ConfigPin(2,29,1);
   \   000000C2   0x2201             MOVS     R2,#+1
   \   000000C4   0x211D             MOVS     R1,#+29
   \   000000C6   0x2002             MOVS     R0,#+2
   \   000000C8   0x.... 0x....      BL       PINSEL_ConfigPin
    100          	PINSEL_ConfigPin(2,30,1);
   \   000000CC   0x2201             MOVS     R2,#+1
   \   000000CE   0x211E             MOVS     R1,#+30
   \   000000D0   0x2002             MOVS     R0,#+2
   \   000000D2   0x.... 0x....      BL       PINSEL_ConfigPin
    101          	PINSEL_ConfigPin(2,31,1);
   \   000000D6   0x2201             MOVS     R2,#+1
   \   000000D8   0x211F             MOVS     R1,#+31
   \   000000DA   0x2002             MOVS     R0,#+2
   \   000000DC   0x.... 0x....      BL       PINSEL_ConfigPin
    102          
    103          	for(i = 0; i < 32; i++)
   \   000000E0   0x2000             MOVS     R0,#+0
   \   000000E2   0x0004             MOVS     R4,R0
   \                     ??EMC_Init_0:
   \   000000E4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000E6   0x2C20             CMP      R4,#+32
   \   000000E8   0xDA10             BGE.N    ??EMC_Init_1
    104          	{
    105          		PINSEL_ConfigPin(3,i,1);
   \   000000EA   0x2201             MOVS     R2,#+1
   \   000000EC   0x0021             MOVS     R1,R4
   \   000000EE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000F0   0x2003             MOVS     R0,#+3
   \   000000F2   0x.... 0x....      BL       PINSEL_ConfigPin
    106                  
    107                  if(i != 22)
   \   000000F6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000F8   0x2C16             CMP      R4,#+22
   \   000000FA   0xD005             BEQ.N    ??EMC_Init_2
    108              		PINSEL_ConfigPin(4,i,1);
   \   000000FC   0x2201             MOVS     R2,#+1
   \   000000FE   0x0021             MOVS     R1,R4
   \   00000100   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000102   0x2004             MOVS     R0,#+4
   \   00000104   0x.... 0x....      BL       PINSEL_ConfigPin
    109          	}
   \                     ??EMC_Init_2:
   \   00000108   0x1C64             ADDS     R4,R4,#+1
   \   0000010A   0xE7EB             B.N      ??EMC_Init_0
    110          }
   \                     ??EMC_Init_1:
   \   0000010C   0xBD10             POP      {R4,PC}          ;; return
    111          /*********************************************************************//**
    112           * @brief 		Configure Little Endian/Big Endian mode for EMC
    113           * @param[in]	endia_mode	Endian mode, should be:
    114           * 				- EMC_LITTLE_ENDIAN_MODE:	Little-endian mode
    115           * 				- EMC_BIG_ENDIAN_MODE	:	Big-endian mode
    116           * @return 		None
    117           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    118          void EMC_ConfigEndianMode(uint32_t endian_mode)
    119          {
    120             LPC_EMC->Config = ((LPC_EMC->Config & 0x01)|endian_mode) & EMC_Config_MASK;
   \                     EMC_ConfigEndianMode:
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable23_3  ;; 0x2009c008
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0xF011 0x0101      ANDS     R1,R1,#0x1
   \   0000000A   0x4301             ORRS     R1,R0,R1
   \   0000000C   0xF240 0x1201      MOVW     R2,#+257
   \   00000010   0x4011             ANDS     R1,R2,R1
   \   00000012   0x.... 0x....      LDR.W    R2,??DataTable23_3  ;; 0x2009c008
   \   00000016   0x6011             STR      R1,[R2, #+0]
    121          }
   \   00000018   0x4770             BX       LR               ;; return
    122          
    123          /****************** Group of Dynamic control functions************************/
    124          /*********************************************************************//**
    125           * @brief 		Set the value for dynamic clock enable bit
    126           * @param[in]	clock_enable	clock enable mode, should be:
    127           * 					- 0: Clock enable of idle devices are deasserted to
    128           * 						save power
    129           * 					- 1: All clock enables are driven HIGH continuously
    130           * @return 		None
    131           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    132          void EMC_DynCtrlClockEnable(uint32_t clock_enable)
    133          {
    134             LPC_EMC->DynamicControl = ((LPC_EMC->DynamicControl) |clock_enable);
   \                     EMC_DynCtrlClockEnable:
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable23_4  ;; 0x2009c020
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0x4301             ORRS     R1,R0,R1
   \   00000008   0x.... 0x....      LDR.W    R2,??DataTable23_4  ;; 0x2009c020
   \   0000000C   0x6011             STR      R1,[R2, #+0]
    135          }
   \   0000000E   0x4770             BX       LR               ;; return
    136          
    137          /*********************************************************************//**
    138           * @brief 		Set the value for dynamic memory clock control:
    139           * 				stops or runs continuously
    140           * @param[in]	clock_control	clock control mode, should be:
    141           * 					- 0: CLKOUT stops when all SDRAMs are idle and
    142           * 						during self-refresh mode
    143           * 					- 1: CLKOUT runs continuously
    144           * @return 		None
    145           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    146          void EMC_DynCtrlClockControl(int32_t clock_control)
    147          {
    148             uint32_t mask = ~(uint32_t)(2);
   \                     EMC_DynCtrlClockControl:
   \   00000000   0xF07F 0x0102      MVNS     R1,#+2
    149             LPC_EMC->DynamicControl = ((LPC_EMC->DynamicControl & mask) |clock_control);
   \   00000004   0x.... 0x....      LDR.W    R2,??DataTable23_4  ;; 0x2009c020
   \   00000008   0x6812             LDR      R2,[R2, #+0]
   \   0000000A   0x400A             ANDS     R2,R1,R2
   \   0000000C   0x4302             ORRS     R2,R0,R2
   \   0000000E   0x.... 0x....      LDR.W    R3,??DataTable23_4  ;; 0x2009c020
   \   00000012   0x601A             STR      R2,[R3, #+0]
    150          }
   \   00000014   0x4770             BX       LR               ;; return
    151          
    152          /*********************************************************************//**
    153           * @brief 		Switch the Self-refresh mode between normal and self-refresh mode
    154           * @param[in]	self_refresh_mode	self refresh mode, should be:
    155           * 					- 0: Normal mode
    156           * 					- 1: Enter self-refresh mode
    157           * @return 		None
    158           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    159          void EMC_DynCtrlSelfRefresh(uint32_t self_refresh_mode)
    160          {
    161             uint32_t mask = ~(uint32_t)(4);
   \                     EMC_DynCtrlSelfRefresh:
   \   00000000   0xF07F 0x0104      MVNS     R1,#+4
    162             LPC_EMC->DynamicControl = ((LPC_EMC->DynamicControl & mask) |self_refresh_mode);
   \   00000004   0x.... 0x....      LDR.W    R2,??DataTable23_4  ;; 0x2009c020
   \   00000008   0x6812             LDR      R2,[R2, #+0]
   \   0000000A   0x400A             ANDS     R2,R1,R2
   \   0000000C   0x4302             ORRS     R2,R0,R2
   \   0000000E   0x.... 0x....      LDR.W    R3,??DataTable23_4  ;; 0x2009c020
   \   00000012   0x601A             STR      R2,[R3, #+0]
    163          }
   \   00000014   0x4770             BX       LR               ;; return
    164          
    165          /*********************************************************************//**
    166           * @brief 		Enable/disable CLKOUT
    167           * @param[in]	MMC_val	Memory clock control mode, should be:
    168           * 					- 0: CLKOUT enabled
    169           * 					- 1: CLKOUT disabled
    170           * @return 		None
    171           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    172          void EMC_DynCtrlMMC(uint32_t MMC_val)
    173          {
    174             uint32_t mask = ~(uint32_t)(_BIT(5));
   \                     EMC_DynCtrlMMC:
   \   00000000   0xF07F 0x0120      MVNS     R1,#+32
    175             LPC_EMC->DynamicControl = ((LPC_EMC->DynamicControl & mask) |MMC_val);
   \   00000004   0x.... 0x....      LDR.W    R2,??DataTable23_4  ;; 0x2009c020
   \   00000008   0x6812             LDR      R2,[R2, #+0]
   \   0000000A   0x400A             ANDS     R2,R1,R2
   \   0000000C   0x4302             ORRS     R2,R0,R2
   \   0000000E   0x.... 0x....      LDR.W    R3,??DataTable23_4  ;; 0x2009c020
   \   00000012   0x601A             STR      R2,[R3, #+0]
    176          }
   \   00000014   0x4770             BX       LR               ;; return
    177          
    178          /*********************************************************************//**
    179           * @brief 		Issue SDRAM command
    180           * @param[in]	SDRAM_command	Command mode, should be:
    181           * 					- 0x00: Issue SDRAM NORMAL operation command
    182           * 					- 0x01: Issue SDRAM MODE command
    183           * 					- 0x02: Issue SDRAM PALL (precharge all) command
    184           * 					- 0x03: Issue SRAM NOP (no operation) command
    185           * @return 		None
    186           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    187          void EMC_DynCtrlSDRAMInit(uint32_t SDRAM_command)
    188          {
    189             uint32_t mask = ~(uint32_t)(_SBF(7,0x03));
   \                     EMC_DynCtrlSDRAMInit:
   \   00000000   0xF47F 0x71C0      MVNS     R1,#+384
    190             LPC_EMC->DynamicControl = ((LPC_EMC->DynamicControl & mask)|SDRAM_command);
   \   00000004   0x.... 0x....      LDR.W    R2,??DataTable23_4  ;; 0x2009c020
   \   00000008   0x6812             LDR      R2,[R2, #+0]
   \   0000000A   0x400A             ANDS     R2,R1,R2
   \   0000000C   0x4302             ORRS     R2,R0,R2
   \   0000000E   0x.... 0x....      LDR.W    R3,??DataTable23_4  ;; 0x2009c020
   \   00000012   0x601A             STR      R2,[R3, #+0]
    191          }
   \   00000014   0x4770             BX       LR               ;; return
    192          
    193          /*********************************************************************//**
    194           * @brief 		Switch between Normal operation and deep sleep power mode
    195           * @param[in]	Power_command	Low-power SDRAM deep-sleep mode, should be:
    196           *					- 0: Normal operation
    197           *					- 1: Enter deep-sleep mode
    198           * @return 		None
    199           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    200          void EMC_DynCtrlPowerDownMode(uint32_t Power_command)
    201          {
    202             uint32_t mask = ~(uint32_t)(_BIT(13));
   \                     EMC_DynCtrlPowerDownMode:
   \   00000000   0xF47F 0x5100      MVNS     R1,#+8192
    203             LPC_EMC->DynamicControl = ((LPC_EMC->DynamicControl & mask)|Power_command);
   \   00000004   0x.... 0x....      LDR.W    R2,??DataTable23_4  ;; 0x2009c020
   \   00000008   0x6812             LDR      R2,[R2, #+0]
   \   0000000A   0x400A             ANDS     R2,R1,R2
   \   0000000C   0x4302             ORRS     R2,R0,R2
   \   0000000E   0x.... 0x....      LDR.W    R3,??DataTable23_4  ;; 0x2009c020
   \   00000012   0x601A             STR      R2,[R3, #+0]
    204          }
   \   00000014   0x4770             BX       LR               ;; return
    205          
    206          /*********************************************************************//**
    207           * @brief 		Set the value of EMC dynamic memory registers
    208           * @param[in]	par	EMC register that will set value, should be:
    209           *					- EMC_DYN_MEM_REFRESH_TIMER: Dynamic Refresh register
    210           *					- EMC_DYN_MEM_READ_CONFIG: Dynamic Read Config register
    211           *					- EMC_DYN_MEM_TRP: Dynamic RP register
    212           *					- EMC_DYN_MEM_TRAS: Dynamic RAS register
    213           *					- EMC_DYN_MEM_TSREX: Dynamic SREX register
    214           *					- EMC_DYN_MEM_TAPR: Dynamic APR register
    215           *					- EMC_DYN_MEM_TDAL: Dynamic DAL register
    216           *					- EMC_DYN_MEM_TWR: Dynamic WR register
    217           *					- EMC_DYN_MEM_TRC: Dynamic RC register
    218           *					- EMC_DYN_MEM_TRFC: Dynamic RFC register
    219           *					- EMC_DYN_MEM_TXSR: Dynamic XSR register
    220           *					- EMC_DYN_MEM_TRRD: Dynamic RRD register
    221           *					- EMC_DYN_MEM_TMRD: Dynamic MRD register
    222           * @return 		None
    223           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    224          void EMC_SetDynMemoryParameter(EMC_DYN_MEM_PAR par, uint32_t val)
    225          {
    226             switch ( par)
   \                     EMC_SetDynMemoryParameter:
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD012             BEQ.N    ??EMC_SetDynMemoryParameter_0
   \   00000006   0x2802             CMP      R0,#+2
   \   00000008   0xD018             BEQ.N    ??EMC_SetDynMemoryParameter_1
   \   0000000A   0xD313             BCC.N    ??EMC_SetDynMemoryParameter_2
   \   0000000C   0x2804             CMP      R0,#+4
   \   0000000E   0xD01D             BEQ.N    ??EMC_SetDynMemoryParameter_3
   \   00000010   0xD318             BCC.N    ??EMC_SetDynMemoryParameter_4
   \   00000012   0x2806             CMP      R0,#+6
   \   00000014   0xD022             BEQ.N    ??EMC_SetDynMemoryParameter_5
   \   00000016   0xD31D             BCC.N    ??EMC_SetDynMemoryParameter_6
   \   00000018   0x2808             CMP      R0,#+8
   \   0000001A   0xD027             BEQ.N    ??EMC_SetDynMemoryParameter_7
   \   0000001C   0xD322             BCC.N    ??EMC_SetDynMemoryParameter_8
   \   0000001E   0x280A             CMP      R0,#+10
   \   00000020   0xD02C             BEQ.N    ??EMC_SetDynMemoryParameter_9
   \   00000022   0xD327             BCC.N    ??EMC_SetDynMemoryParameter_10
   \   00000024   0x280C             CMP      R0,#+12
   \   00000026   0xD031             BEQ.N    ??EMC_SetDynMemoryParameter_11
   \   00000028   0xD32C             BCC.N    ??EMC_SetDynMemoryParameter_12
   \   0000002A   0xE032             B.N      ??EMC_SetDynMemoryParameter_13
    227             {
    228                case EMC_DYN_MEM_REFRESH_TIMER:
    229                   LPC_EMC->DynamicRefresh = val;
   \                     ??EMC_SetDynMemoryParameter_0:
   \   0000002C   0x.... 0x....      LDR.W    R2,??DataTable23_5  ;; 0x2009c024
   \   00000030   0x6011             STR      R1,[R2, #+0]
    230                   break;
   \   00000032   0xE02E             B.N      ??EMC_SetDynMemoryParameter_13
    231                case EMC_DYN_MEM_READ_CONFIG:
    232                   LPC_EMC->DynamicReadConfig = val;
   \                     ??EMC_SetDynMemoryParameter_2:
   \   00000034   0x.... 0x....      LDR.W    R2,??DataTable23_6  ;; 0x2009c028
   \   00000038   0x6011             STR      R1,[R2, #+0]
    233                   break;
   \   0000003A   0xE02A             B.N      ??EMC_SetDynMemoryParameter_13
    234                case EMC_DYN_MEM_TRP:
    235                   LPC_EMC->DynamicRP = val;
   \                     ??EMC_SetDynMemoryParameter_1:
   \   0000003C   0x.... 0x....      LDR.W    R2,??DataTable23_7  ;; 0x2009c030
   \   00000040   0x6011             STR      R1,[R2, #+0]
    236                   break;
   \   00000042   0xE026             B.N      ??EMC_SetDynMemoryParameter_13
    237                case EMC_DYN_MEM_TRAS:
    238                   LPC_EMC->DynamicRAS = val;
   \                     ??EMC_SetDynMemoryParameter_4:
   \   00000044   0x.... 0x....      LDR.W    R2,??DataTable23_8  ;; 0x2009c034
   \   00000048   0x6011             STR      R1,[R2, #+0]
    239                   break;
   \   0000004A   0xE022             B.N      ??EMC_SetDynMemoryParameter_13
    240                case EMC_DYN_MEM_TSREX:
    241                   LPC_EMC->DynamicSREX = val;
   \                     ??EMC_SetDynMemoryParameter_3:
   \   0000004C   0x.... 0x....      LDR.W    R2,??DataTable23_9  ;; 0x2009c038
   \   00000050   0x6011             STR      R1,[R2, #+0]
    242                   break;
   \   00000052   0xE01E             B.N      ??EMC_SetDynMemoryParameter_13
    243                case EMC_DYN_MEM_TAPR:
    244                   LPC_EMC->DynamicAPR = val;
   \                     ??EMC_SetDynMemoryParameter_6:
   \   00000054   0x.... 0x....      LDR.W    R2,??DataTable23_10  ;; 0x2009c03c
   \   00000058   0x6011             STR      R1,[R2, #+0]
    245                   break;
   \   0000005A   0xE01A             B.N      ??EMC_SetDynMemoryParameter_13
    246                case EMC_DYN_MEM_TDAL:
    247                   LPC_EMC->DynamicDAL = val;
   \                     ??EMC_SetDynMemoryParameter_5:
   \   0000005C   0x.... 0x....      LDR.W    R2,??DataTable23_11  ;; 0x2009c040
   \   00000060   0x6011             STR      R1,[R2, #+0]
    248                   break;
   \   00000062   0xE016             B.N      ??EMC_SetDynMemoryParameter_13
    249                case EMC_DYN_MEM_TWR:
    250                   LPC_EMC->DynamicWR = val;
   \                     ??EMC_SetDynMemoryParameter_8:
   \   00000064   0x.... 0x....      LDR.W    R2,??DataTable23_12  ;; 0x2009c044
   \   00000068   0x6011             STR      R1,[R2, #+0]
    251                   break;
   \   0000006A   0xE012             B.N      ??EMC_SetDynMemoryParameter_13
    252                case EMC_DYN_MEM_TRC:
    253                   LPC_EMC->DynamicRC = val;
   \                     ??EMC_SetDynMemoryParameter_7:
   \   0000006C   0x.... 0x....      LDR.W    R2,??DataTable23_13  ;; 0x2009c048
   \   00000070   0x6011             STR      R1,[R2, #+0]
    254                   break;
   \   00000072   0xE00E             B.N      ??EMC_SetDynMemoryParameter_13
    255                case EMC_DYN_MEM_TRFC:
    256                   LPC_EMC->DynamicRFC = val;
   \                     ??EMC_SetDynMemoryParameter_10:
   \   00000074   0x.... 0x....      LDR.W    R2,??DataTable23_14  ;; 0x2009c04c
   \   00000078   0x6011             STR      R1,[R2, #+0]
    257                   break;
   \   0000007A   0xE00A             B.N      ??EMC_SetDynMemoryParameter_13
    258                case EMC_DYN_MEM_TXSR:
    259                   LPC_EMC->DynamicXSR = val;
   \                     ??EMC_SetDynMemoryParameter_9:
   \   0000007C   0x.... 0x....      LDR.W    R2,??DataTable23_15  ;; 0x2009c050
   \   00000080   0x6011             STR      R1,[R2, #+0]
    260                   break;
   \   00000082   0xE006             B.N      ??EMC_SetDynMemoryParameter_13
    261                case EMC_DYN_MEM_TRRD:
    262                   LPC_EMC->DynamicRRD = val;
   \                     ??EMC_SetDynMemoryParameter_12:
   \   00000084   0x.... 0x....      LDR.W    R2,??DataTable23_16  ;; 0x2009c054
   \   00000088   0x6011             STR      R1,[R2, #+0]
    263                   break;
   \   0000008A   0xE002             B.N      ??EMC_SetDynMemoryParameter_13
    264                case EMC_DYN_MEM_TMRD:
    265                   LPC_EMC->DynamicMRD = val;
   \                     ??EMC_SetDynMemoryParameter_11:
   \   0000008C   0x.... 0x....      LDR.W    R2,??DataTable23_17  ;; 0x2009c058
   \   00000090   0x6011             STR      R1,[R2, #+0]
    266                   break;
    267             }
    268          }
   \                     ??EMC_SetDynMemoryParameter_13:
   \   00000092   0x4770             BX       LR               ;; return
    269          
    270          /*********************************************************************//**
    271           * @brief 		Set extended wait time out for accessing static memory
    272           * @param[in]	Extended_wait_time_out timeout value that will be set
    273           * @return 		None
    274           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    275          void EMC_StaticExtendedWait(uint32_t Extended_wait_time_out)
    276          {
    277             LPC_EMC->StaticExtendedWait = Extended_wait_time_out;
   \                     EMC_StaticExtendedWait:
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable23_18  ;; 0x2009c080
   \   00000004   0x6008             STR      R0,[R1, #+0]
    278          }
   \   00000006   0x4770             BX       LR               ;; return
    279          
    280          /*********************************************************************//**
    281           * @brief 		Configure the memory device
    282           * @param[in]	index index number, should be from 0 to 3
    283           * @param[in]	mem_dev Memory device, should be:
    284           *					- 0x00: SDRAM
    285           *					- 0x01: Low-power SDRAM
    286           *					- 0x02: Micron Syncflash
    287           * @return 		None
    288           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    289          void EMC_DynMemConfigMD(uint32_t index , uint32_t mem_dev)
    290          {
   \                     EMC_DynMemConfigMD:
   \   00000000   0xB410             PUSH     {R4}
    291             uint32_t mask = ~(uint32_t)(_SBF(3, 0x03));
   \   00000002   0xF07F 0x0218      MVNS     R2,#+24
    292             switch ( index)
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD005             BEQ.N    ??EMC_DynMemConfigMD_0
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xD015             BEQ.N    ??EMC_DynMemConfigMD_1
   \   0000000E   0xD30B             BCC.N    ??EMC_DynMemConfigMD_2
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD01B             BEQ.N    ??EMC_DynMemConfigMD_3
   \   00000014   0xE022             B.N      ??EMC_DynMemConfigMD_4
    293             {
    294                case 0:
    295                   LPC_EMC->DynamicConfig0 = (LPC_EMC->DynamicConfig0 & mask) | mem_dev;
   \                     ??EMC_DynMemConfigMD_0:
   \   00000016   0x.... 0x....      LDR.W    R3,??DataTable23_19  ;; 0x2009c100
   \   0000001A   0x681B             LDR      R3,[R3, #+0]
   \   0000001C   0x4013             ANDS     R3,R2,R3
   \   0000001E   0x430B             ORRS     R3,R1,R3
   \   00000020   0x.... 0x....      LDR.W    R4,??DataTable23_19  ;; 0x2009c100
   \   00000024   0x6023             STR      R3,[R4, #+0]
    296          	   break;
   \   00000026   0xE019             B.N      ??EMC_DynMemConfigMD_4
    297                case 1:
    298                   LPC_EMC->DynamicConfig1 = (LPC_EMC->DynamicConfig1 & mask) | mem_dev;
   \                     ??EMC_DynMemConfigMD_2:
   \   00000028   0x.... 0x....      LDR.W    R3,??DataTable23_20  ;; 0x2009c120
   \   0000002C   0x681B             LDR      R3,[R3, #+0]
   \   0000002E   0x4013             ANDS     R3,R2,R3
   \   00000030   0x430B             ORRS     R3,R1,R3
   \   00000032   0x.... 0x....      LDR.W    R4,??DataTable23_20  ;; 0x2009c120
   \   00000036   0x6023             STR      R3,[R4, #+0]
    299          	   break;
   \   00000038   0xE010             B.N      ??EMC_DynMemConfigMD_4
    300                case 2:
    301                   LPC_EMC->DynamicConfig2 =(LPC_EMC->DynamicConfig2 & mask) | mem_dev;
   \                     ??EMC_DynMemConfigMD_1:
   \   0000003A   0x.... 0x....      LDR.W    R3,??DataTable23_21  ;; 0x2009c140
   \   0000003E   0x681B             LDR      R3,[R3, #+0]
   \   00000040   0x4013             ANDS     R3,R2,R3
   \   00000042   0x430B             ORRS     R3,R1,R3
   \   00000044   0x.... 0x....      LDR.W    R4,??DataTable23_21  ;; 0x2009c140
   \   00000048   0x6023             STR      R3,[R4, #+0]
    302          	   break;
   \   0000004A   0xE007             B.N      ??EMC_DynMemConfigMD_4
    303                case 3:
    304                   LPC_EMC->DynamicConfig3 = (LPC_EMC->DynamicConfig3 & mask) | mem_dev;
   \                     ??EMC_DynMemConfigMD_3:
   \   0000004C   0x.... 0x....      LDR.W    R3,??DataTable23_22  ;; 0x2009c160
   \   00000050   0x681B             LDR      R3,[R3, #+0]
   \   00000052   0x4013             ANDS     R3,R2,R3
   \   00000054   0x430B             ORRS     R3,R1,R3
   \   00000056   0x.... 0x....      LDR.W    R4,??DataTable23_22  ;; 0x2009c160
   \   0000005A   0x6023             STR      R3,[R4, #+0]
    305          	   break;
    306             }
    307          }
   \                     ??EMC_DynMemConfigMD_4:
   \   0000005C   0xBC10             POP      {R4}
   \   0000005E   0x4770             BX       LR               ;; return
    308          
    309          /*********************************************************************//**
    310           * @brief 		Map the address for the memory device
    311           * @param[in]	index index number, should be from 0 to 3
    312           * @param[in] 	add_mapped address where the memory will be mapped
    313           * @return 		None
    314           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    315          void EMC_DynMemConfigAM(uint32_t index , uint32_t add_mapped)
    316          {
   \                     EMC_DynMemConfigAM:
   \   00000000   0xB410             PUSH     {R4}
    317             uint32_t mask = ~(uint32_t)(_SBF(7, 0x3f)) | ~(uint32_t)(_BIT(14))  ;
   \   00000002   0xF05F 0x32FF      MOVS     R2,#-1
    318          
    319             switch ( index)
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD005             BEQ.N    ??EMC_DynMemConfigAM_0
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xD015             BEQ.N    ??EMC_DynMemConfigAM_1
   \   0000000E   0xD30B             BCC.N    ??EMC_DynMemConfigAM_2
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD01B             BEQ.N    ??EMC_DynMemConfigAM_3
   \   00000014   0xE022             B.N      ??EMC_DynMemConfigAM_4
    320             {
    321                case 0:
    322                   LPC_EMC->DynamicConfig0 = ( LPC_EMC->DynamicConfig0 & mask) | add_mapped;
   \                     ??EMC_DynMemConfigAM_0:
   \   00000016   0x.... 0x....      LDR.W    R3,??DataTable23_19  ;; 0x2009c100
   \   0000001A   0x681B             LDR      R3,[R3, #+0]
   \   0000001C   0x4013             ANDS     R3,R2,R3
   \   0000001E   0x430B             ORRS     R3,R1,R3
   \   00000020   0x.... 0x....      LDR.W    R4,??DataTable23_19  ;; 0x2009c100
   \   00000024   0x6023             STR      R3,[R4, #+0]
    323          	   break;
   \   00000026   0xE019             B.N      ??EMC_DynMemConfigAM_4
    324                case 1:
    325                   LPC_EMC->DynamicConfig1 = (LPC_EMC->DynamicConfig1 & mask) | add_mapped;
   \                     ??EMC_DynMemConfigAM_2:
   \   00000028   0x.... 0x....      LDR.W    R3,??DataTable23_20  ;; 0x2009c120
   \   0000002C   0x681B             LDR      R3,[R3, #+0]
   \   0000002E   0x4013             ANDS     R3,R2,R3
   \   00000030   0x430B             ORRS     R3,R1,R3
   \   00000032   0x.... 0x....      LDR.W    R4,??DataTable23_20  ;; 0x2009c120
   \   00000036   0x6023             STR      R3,[R4, #+0]
    326          	   break;
   \   00000038   0xE010             B.N      ??EMC_DynMemConfigAM_4
    327                case 2:
    328                   LPC_EMC->DynamicConfig2 = (LPC_EMC->DynamicConfig2 & mask) | add_mapped;
   \                     ??EMC_DynMemConfigAM_1:
   \   0000003A   0x.... 0x....      LDR.W    R3,??DataTable23_21  ;; 0x2009c140
   \   0000003E   0x681B             LDR      R3,[R3, #+0]
   \   00000040   0x4013             ANDS     R3,R2,R3
   \   00000042   0x430B             ORRS     R3,R1,R3
   \   00000044   0x.... 0x....      LDR.W    R4,??DataTable23_21  ;; 0x2009c140
   \   00000048   0x6023             STR      R3,[R4, #+0]
    329          	   break;
   \   0000004A   0xE007             B.N      ??EMC_DynMemConfigAM_4
    330                case 3:
    331                   LPC_EMC->DynamicConfig3 = (LPC_EMC->DynamicConfig3 & mask) | add_mapped;
   \                     ??EMC_DynMemConfigAM_3:
   \   0000004C   0x.... 0x....      LDR.W    R3,??DataTable23_22  ;; 0x2009c160
   \   00000050   0x681B             LDR      R3,[R3, #+0]
   \   00000052   0x4013             ANDS     R3,R2,R3
   \   00000054   0x430B             ORRS     R3,R1,R3
   \   00000056   0x.... 0x....      LDR.W    R4,??DataTable23_22  ;; 0x2009c160
   \   0000005A   0x6023             STR      R3,[R4, #+0]
    332          	   break;
    333             }
    334          }
   \                     ??EMC_DynMemConfigAM_4:
   \   0000005C   0xBC10             POP      {R4}
   \   0000005E   0x4770             BX       LR               ;; return
    335          
    336          /*********************************************************************//**
    337           * @brief 		Enable/disable the buffer
    338           * @param[in]	index index number, should be from 0 to 3
    339           * @param[in] 	buff_control buffer control mode, should be:
    340           * 					- ENABLE
    341           * 					- DISABLE
    342           * @return 		None
    343           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    344          void EMC_DynMemConfigB(uint32_t index , uint32_t buff_control)
    345          {
   \                     EMC_DynMemConfigB:
   \   00000000   0xB410             PUSH     {R4}
    346             uint32_t mask =  ~(uint32_t)(_BIT(19))  ;
   \   00000002   0xF47F 0x2200      MVNS     R2,#+524288
    347             switch ( index)
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD005             BEQ.N    ??EMC_DynMemConfigB_0
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xD015             BEQ.N    ??EMC_DynMemConfigB_1
   \   0000000E   0xD30B             BCC.N    ??EMC_DynMemConfigB_2
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD01B             BEQ.N    ??EMC_DynMemConfigB_3
   \   00000014   0xE022             B.N      ??EMC_DynMemConfigB_4
    348             {
    349                case 0:
    350                   LPC_EMC->DynamicConfig0 = (LPC_EMC->DynamicConfig0 & mask) | buff_control;
   \                     ??EMC_DynMemConfigB_0:
   \   00000016   0x.... 0x....      LDR.W    R3,??DataTable23_19  ;; 0x2009c100
   \   0000001A   0x681B             LDR      R3,[R3, #+0]
   \   0000001C   0x4013             ANDS     R3,R2,R3
   \   0000001E   0x430B             ORRS     R3,R1,R3
   \   00000020   0x.... 0x....      LDR.W    R4,??DataTable23_19  ;; 0x2009c100
   \   00000024   0x6023             STR      R3,[R4, #+0]
    351          	   break;
   \   00000026   0xE019             B.N      ??EMC_DynMemConfigB_4
    352                case 1:
    353                   LPC_EMC->DynamicConfig1 = ( LPC_EMC->DynamicConfig1 & mask) | buff_control;
   \                     ??EMC_DynMemConfigB_2:
   \   00000028   0x.... 0x....      LDR.W    R3,??DataTable23_20  ;; 0x2009c120
   \   0000002C   0x681B             LDR      R3,[R3, #+0]
   \   0000002E   0x4013             ANDS     R3,R2,R3
   \   00000030   0x430B             ORRS     R3,R1,R3
   \   00000032   0x.... 0x....      LDR.W    R4,??DataTable23_20  ;; 0x2009c120
   \   00000036   0x6023             STR      R3,[R4, #+0]
    354          	   break;
   \   00000038   0xE010             B.N      ??EMC_DynMemConfigB_4
    355                case 2:
    356                   LPC_EMC->DynamicConfig2 = (LPC_EMC->DynamicConfig2 & mask)| buff_control;
   \                     ??EMC_DynMemConfigB_1:
   \   0000003A   0x.... 0x....      LDR.W    R3,??DataTable23_21  ;; 0x2009c140
   \   0000003E   0x681B             LDR      R3,[R3, #+0]
   \   00000040   0x4013             ANDS     R3,R2,R3
   \   00000042   0x430B             ORRS     R3,R1,R3
   \   00000044   0x.... 0x....      LDR.W    R4,??DataTable23_21  ;; 0x2009c140
   \   00000048   0x6023             STR      R3,[R4, #+0]
    357          	   break;
   \   0000004A   0xE007             B.N      ??EMC_DynMemConfigB_4
    358                case 3:
    359                   LPC_EMC->DynamicConfig3 = (LPC_EMC->DynamicConfig3 & mask) | buff_control;
   \                     ??EMC_DynMemConfigB_3:
   \   0000004C   0x.... 0x....      LDR.W    R3,??DataTable23_22  ;; 0x2009c160
   \   00000050   0x681B             LDR      R3,[R3, #+0]
   \   00000052   0x4013             ANDS     R3,R2,R3
   \   00000054   0x430B             ORRS     R3,R1,R3
   \   00000056   0x.... 0x....      LDR.W    R4,??DataTable23_22  ;; 0x2009c160
   \   0000005A   0x6023             STR      R3,[R4, #+0]
    360          	   break;
    361             }
    362          }
   \                     ??EMC_DynMemConfigB_4:
   \   0000005C   0xBC10             POP      {R4}
   \   0000005E   0x4770             BX       LR               ;; return
    363          
    364          
    365          /*********************************************************************//**
    366           * @brief 		Configure write permission: protect or not
    367           * @param[in]	index index number, should be from 0 to 3
    368           * @param[in] 	permission  permission mode, should be:
    369           * 					- ENABLE: protect
    370           * 					- DISABLE: not protect
    371           * @return 		None
    372           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    373          void EMC_DynMemConfigP(uint32_t index , uint32_t permission)
    374          {
   \                     EMC_DynMemConfigP:
   \   00000000   0xB410             PUSH     {R4}
    375             uint32_t mask =  ~(uint32_t)(_BIT(20))  ;
   \   00000002   0xF47F 0x1280      MVNS     R2,#+1048576
    376             switch ( index)
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD005             BEQ.N    ??EMC_DynMemConfigP_0
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xD015             BEQ.N    ??EMC_DynMemConfigP_1
   \   0000000E   0xD30B             BCC.N    ??EMC_DynMemConfigP_2
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD01B             BEQ.N    ??EMC_DynMemConfigP_3
   \   00000014   0xE022             B.N      ??EMC_DynMemConfigP_4
    377             {
    378                case 0:
    379                   LPC_EMC->DynamicConfig0 = (LPC_EMC->DynamicConfig0 & mask) | permission;
   \                     ??EMC_DynMemConfigP_0:
   \   00000016   0x.... 0x....      LDR.W    R3,??DataTable23_19  ;; 0x2009c100
   \   0000001A   0x681B             LDR      R3,[R3, #+0]
   \   0000001C   0x4013             ANDS     R3,R2,R3
   \   0000001E   0x430B             ORRS     R3,R1,R3
   \   00000020   0x.... 0x....      LDR.W    R4,??DataTable23_19  ;; 0x2009c100
   \   00000024   0x6023             STR      R3,[R4, #+0]
    380          	   break;
   \   00000026   0xE019             B.N      ??EMC_DynMemConfigP_4
    381                case 1:
    382                   LPC_EMC->DynamicConfig1 = (LPC_EMC->DynamicConfig1 & mask) | permission;
   \                     ??EMC_DynMemConfigP_2:
   \   00000028   0x.... 0x....      LDR.W    R3,??DataTable23_20  ;; 0x2009c120
   \   0000002C   0x681B             LDR      R3,[R3, #+0]
   \   0000002E   0x4013             ANDS     R3,R2,R3
   \   00000030   0x430B             ORRS     R3,R1,R3
   \   00000032   0x.... 0x....      LDR.W    R4,??DataTable23_20  ;; 0x2009c120
   \   00000036   0x6023             STR      R3,[R4, #+0]
    383          	   break;
   \   00000038   0xE010             B.N      ??EMC_DynMemConfigP_4
    384                case 2:
    385                   LPC_EMC->DynamicConfig2 = ( LPC_EMC->DynamicConfig2 & mask) | permission;
   \                     ??EMC_DynMemConfigP_1:
   \   0000003A   0x.... 0x....      LDR.W    R3,??DataTable23_21  ;; 0x2009c140
   \   0000003E   0x681B             LDR      R3,[R3, #+0]
   \   00000040   0x4013             ANDS     R3,R2,R3
   \   00000042   0x430B             ORRS     R3,R1,R3
   \   00000044   0x.... 0x....      LDR.W    R4,??DataTable23_21  ;; 0x2009c140
   \   00000048   0x6023             STR      R3,[R4, #+0]
    386          	   break;
   \   0000004A   0xE007             B.N      ??EMC_DynMemConfigP_4
    387                case 3:
    388                   LPC_EMC->DynamicConfig3 = (LPC_EMC->DynamicConfig3 & mask) | permission;
   \                     ??EMC_DynMemConfigP_3:
   \   0000004C   0x.... 0x....      LDR.W    R3,??DataTable23_22  ;; 0x2009c160
   \   00000050   0x681B             LDR      R3,[R3, #+0]
   \   00000052   0x4013             ANDS     R3,R2,R3
   \   00000054   0x430B             ORRS     R3,R1,R3
   \   00000056   0x.... 0x....      LDR.W    R4,??DataTable23_22  ;; 0x2009c160
   \   0000005A   0x6023             STR      R3,[R4, #+0]
    389          	   break;
    390             }
    391          }
   \                     ??EMC_DynMemConfigP_4:
   \   0000005C   0xBC10             POP      {R4}
   \   0000005E   0x4770             BX       LR               ;; return
    392          
    393          /*********************************************************************//**
    394           * @brief 		Set value for RAS latency
    395           * @param[in]	index index number, should be from 0 to 3
    396           * @param[in] 	ras_val  RAS value should be in range: 0..3
    397           * @return 		None
    398           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    399          void EMC_DynMemRAS(uint32_t index , uint32_t ras_val)
    400          {
   \                     EMC_DynMemRAS:
   \   00000000   0xB410             PUSH     {R4}
    401             uint32_t mask =  ~(uint32_t)(0x03)  ;
   \   00000002   0xF07F 0x0203      MVNS     R2,#+3
    402          
    403             switch ( index)
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD005             BEQ.N    ??EMC_DynMemRAS_0
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xD015             BEQ.N    ??EMC_DynMemRAS_1
   \   0000000E   0xD30B             BCC.N    ??EMC_DynMemRAS_2
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD01B             BEQ.N    ??EMC_DynMemRAS_3
   \   00000014   0xE022             B.N      ??EMC_DynMemRAS_4
    404             {
    405                case 0:
    406                   LPC_EMC->DynamicRasCas0 = (LPC_EMC->DynamicRasCas0 & mask) | ras_val;
   \                     ??EMC_DynMemRAS_0:
   \   00000016   0x.... 0x....      LDR.W    R3,??DataTable23_23  ;; 0x2009c104
   \   0000001A   0x681B             LDR      R3,[R3, #+0]
   \   0000001C   0x4013             ANDS     R3,R2,R3
   \   0000001E   0x430B             ORRS     R3,R1,R3
   \   00000020   0x.... 0x....      LDR.W    R4,??DataTable23_23  ;; 0x2009c104
   \   00000024   0x6023             STR      R3,[R4, #+0]
    407          	   break;
   \   00000026   0xE019             B.N      ??EMC_DynMemRAS_4
    408                case 1:
    409                   LPC_EMC->DynamicRasCas1 = (LPC_EMC->DynamicRasCas1 & mask) | ras_val;
   \                     ??EMC_DynMemRAS_2:
   \   00000028   0x.... 0x....      LDR.W    R3,??DataTable23_24  ;; 0x2009c124
   \   0000002C   0x681B             LDR      R3,[R3, #+0]
   \   0000002E   0x4013             ANDS     R3,R2,R3
   \   00000030   0x430B             ORRS     R3,R1,R3
   \   00000032   0x.... 0x....      LDR.W    R4,??DataTable23_24  ;; 0x2009c124
   \   00000036   0x6023             STR      R3,[R4, #+0]
    410          	   break;
   \   00000038   0xE010             B.N      ??EMC_DynMemRAS_4
    411                case 2:
    412                   LPC_EMC->DynamicRasCas2 = (LPC_EMC->DynamicRasCas2 & mask) | ras_val;
   \                     ??EMC_DynMemRAS_1:
   \   0000003A   0x.... 0x....      LDR.W    R3,??DataTable23_25  ;; 0x2009c144
   \   0000003E   0x681B             LDR      R3,[R3, #+0]
   \   00000040   0x4013             ANDS     R3,R2,R3
   \   00000042   0x430B             ORRS     R3,R1,R3
   \   00000044   0x.... 0x....      LDR.W    R4,??DataTable23_25  ;; 0x2009c144
   \   00000048   0x6023             STR      R3,[R4, #+0]
    413          	   break;
   \   0000004A   0xE007             B.N      ??EMC_DynMemRAS_4
    414                case 3:
    415                   LPC_EMC->DynamicRasCas3 = (LPC_EMC->DynamicRasCas3 & mask) | ras_val;
   \                     ??EMC_DynMemRAS_3:
   \   0000004C   0x.... 0x....      LDR.W    R3,??DataTable23_26  ;; 0x2009c164
   \   00000050   0x681B             LDR      R3,[R3, #+0]
   \   00000052   0x4013             ANDS     R3,R2,R3
   \   00000054   0x430B             ORRS     R3,R1,R3
   \   00000056   0x.... 0x....      LDR.W    R4,??DataTable23_26  ;; 0x2009c164
   \   0000005A   0x6023             STR      R3,[R4, #+0]
    416          	   break;
    417             }
    418          }
   \                     ??EMC_DynMemRAS_4:
   \   0000005C   0xBC10             POP      {R4}
   \   0000005E   0x4770             BX       LR               ;; return
    419          
    420          /*********************************************************************//**
    421           * @brief 		Set value for CAS latency
    422           * @param[in]	index index number, should be from 0 to 3
    423           * @param[in] 	ras_val  CAS value should be in range: 0..3
    424           * @return 		None
    425           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    426          void EMC_DynMemCAS(uint32_t index , uint32_t cas_val)
    427          {
   \                     EMC_DynMemCAS:
   \   00000000   0xB410             PUSH     {R4}
    428             uint32_t mask =  ~(uint32_t)(_SBF(8, 0x03))  ;
   \   00000002   0xF47F 0x7240      MVNS     R2,#+768
    429             switch ( index)
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD005             BEQ.N    ??EMC_DynMemCAS_0
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xD015             BEQ.N    ??EMC_DynMemCAS_1
   \   0000000E   0xD30B             BCC.N    ??EMC_DynMemCAS_2
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD01B             BEQ.N    ??EMC_DynMemCAS_3
   \   00000014   0xE022             B.N      ??EMC_DynMemCAS_4
    430             {
    431                case 0:
    432                   LPC_EMC->DynamicRasCas0 = (LPC_EMC->DynamicRasCas0 & mask) | cas_val;
   \                     ??EMC_DynMemCAS_0:
   \   00000016   0x.... 0x....      LDR.W    R3,??DataTable23_23  ;; 0x2009c104
   \   0000001A   0x681B             LDR      R3,[R3, #+0]
   \   0000001C   0x4013             ANDS     R3,R2,R3
   \   0000001E   0x430B             ORRS     R3,R1,R3
   \   00000020   0x.... 0x....      LDR.W    R4,??DataTable23_23  ;; 0x2009c104
   \   00000024   0x6023             STR      R3,[R4, #+0]
    433          	   break;
   \   00000026   0xE019             B.N      ??EMC_DynMemCAS_4
    434                case 1:
    435                   LPC_EMC->DynamicRasCas1 = (LPC_EMC->DynamicRasCas1 & mask) | cas_val;
   \                     ??EMC_DynMemCAS_2:
   \   00000028   0x.... 0x....      LDR.W    R3,??DataTable23_24  ;; 0x2009c124
   \   0000002C   0x681B             LDR      R3,[R3, #+0]
   \   0000002E   0x4013             ANDS     R3,R2,R3
   \   00000030   0x430B             ORRS     R3,R1,R3
   \   00000032   0x.... 0x....      LDR.W    R4,??DataTable23_24  ;; 0x2009c124
   \   00000036   0x6023             STR      R3,[R4, #+0]
    436          	   break;
   \   00000038   0xE010             B.N      ??EMC_DynMemCAS_4
    437                case 2:
    438                   LPC_EMC->DynamicRasCas2 = (LPC_EMC->DynamicRasCas2 & mask )| cas_val;
   \                     ??EMC_DynMemCAS_1:
   \   0000003A   0x.... 0x....      LDR.W    R3,??DataTable23_25  ;; 0x2009c144
   \   0000003E   0x681B             LDR      R3,[R3, #+0]
   \   00000040   0x4013             ANDS     R3,R2,R3
   \   00000042   0x430B             ORRS     R3,R1,R3
   \   00000044   0x.... 0x....      LDR.W    R4,??DataTable23_25  ;; 0x2009c144
   \   00000048   0x6023             STR      R3,[R4, #+0]
    439          	   break;
   \   0000004A   0xE007             B.N      ??EMC_DynMemCAS_4
    440                case 3:
    441                   LPC_EMC->DynamicRasCas3 = ( LPC_EMC->DynamicRasCas3 & mask) | cas_val;
   \                     ??EMC_DynMemCAS_3:
   \   0000004C   0x.... 0x....      LDR.W    R3,??DataTable23_26  ;; 0x2009c164
   \   00000050   0x681B             LDR      R3,[R3, #+0]
   \   00000052   0x4013             ANDS     R3,R2,R3
   \   00000054   0x430B             ORRS     R3,R1,R3
   \   00000056   0x.... 0x....      LDR.W    R4,??DataTable23_26  ;; 0x2009c164
   \   0000005A   0x6023             STR      R3,[R4, #+0]
    442          	   break;
    443             }
    444          }
   \                     ??EMC_DynMemCAS_4:
   \   0000005C   0xBC10             POP      {R4}
   \   0000005E   0x4770             BX       LR               ;; return
    445          /*********************************************************************//**
    446           * @brief 		Configure the memory width
    447           * @param[in]	index index number, should be from 0 to 3
    448           * @param[in] 	mem_width  memory width, should be:
    449           * 					- 0x00: 8-bits
    450           * 					- 0x01: 16-bits
    451           * 					- 0x02: 32-bits
    452           * @return 		None
    453           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    454          void EMC_StaMemConfigMW(uint32_t index , uint32_t mem_width)
    455          {
   \                     EMC_StaMemConfigMW:
   \   00000000   0xB410             PUSH     {R4}
    456             uint32_t mask =  ~(uint32_t)(0x03)  ;
   \   00000002   0xF07F 0x0203      MVNS     R2,#+3
    457             switch ( index)
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD005             BEQ.N    ??EMC_StaMemConfigMW_0
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xD015             BEQ.N    ??EMC_StaMemConfigMW_1
   \   0000000E   0xD30B             BCC.N    ??EMC_StaMemConfigMW_2
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD01B             BEQ.N    ??EMC_StaMemConfigMW_3
   \   00000014   0xE022             B.N      ??EMC_StaMemConfigMW_4
    458             {
    459                case 0:
    460                   LPC_EMC->StaticConfig0 = (LPC_EMC->StaticConfig0 & mask) | mem_width;
   \                     ??EMC_StaMemConfigMW_0:
   \   00000016   0x.... 0x....      LDR.W    R3,??DataTable23_27  ;; 0x2009c200
   \   0000001A   0x681B             LDR      R3,[R3, #+0]
   \   0000001C   0x4013             ANDS     R3,R2,R3
   \   0000001E   0x430B             ORRS     R3,R1,R3
   \   00000020   0x.... 0x....      LDR.W    R4,??DataTable23_27  ;; 0x2009c200
   \   00000024   0x6023             STR      R3,[R4, #+0]
    461          	   break;
   \   00000026   0xE019             B.N      ??EMC_StaMemConfigMW_4
    462                case 1:
    463                   LPC_EMC->StaticConfig1 = (LPC_EMC->StaticConfig1 & mask) | mem_width;
   \                     ??EMC_StaMemConfigMW_2:
   \   00000028   0x.... 0x....      LDR.W    R3,??DataTable23_28  ;; 0x2009c220
   \   0000002C   0x681B             LDR      R3,[R3, #+0]
   \   0000002E   0x4013             ANDS     R3,R2,R3
   \   00000030   0x430B             ORRS     R3,R1,R3
   \   00000032   0x.... 0x....      LDR.W    R4,??DataTable23_28  ;; 0x2009c220
   \   00000036   0x6023             STR      R3,[R4, #+0]
    464          	   break;
   \   00000038   0xE010             B.N      ??EMC_StaMemConfigMW_4
    465                case 2:
    466                   LPC_EMC->StaticConfig2 = (LPC_EMC->StaticConfig2 & mask)| mem_width;
   \                     ??EMC_StaMemConfigMW_1:
   \   0000003A   0x.... 0x....      LDR.W    R3,??DataTable23_29  ;; 0x2009c240
   \   0000003E   0x681B             LDR      R3,[R3, #+0]
   \   00000040   0x4013             ANDS     R3,R2,R3
   \   00000042   0x430B             ORRS     R3,R1,R3
   \   00000044   0x.... 0x....      LDR.W    R4,??DataTable23_29  ;; 0x2009c240
   \   00000048   0x6023             STR      R3,[R4, #+0]
    467          	   break;
   \   0000004A   0xE007             B.N      ??EMC_StaMemConfigMW_4
    468                case 3:
    469                   LPC_EMC->StaticConfig3 = (LPC_EMC->StaticConfig3 & mask) | mem_width;
   \                     ??EMC_StaMemConfigMW_3:
   \   0000004C   0x.... 0x....      LDR.W    R3,??DataTable23_30  ;; 0x2009c260
   \   00000050   0x681B             LDR      R3,[R3, #+0]
   \   00000052   0x4013             ANDS     R3,R2,R3
   \   00000054   0x430B             ORRS     R3,R1,R3
   \   00000056   0x.... 0x....      LDR.W    R4,??DataTable23_30  ;; 0x2009c260
   \   0000005A   0x6023             STR      R3,[R4, #+0]
    470          	   break;
    471             }
    472          }
   \                     ??EMC_StaMemConfigMW_4:
   \   0000005C   0xBC10             POP      {R4}
   \   0000005E   0x4770             BX       LR               ;; return
    473          /*********************************************************************//**
    474           * @brief 		Configure the page mode
    475           * @param[in]	index index number, should be from 0 to 3
    476           * @param[in] 	page_mode  page mode, should be:
    477           * 					- 0: disable
    478           * 					- 1: asynchronous page mode enable
    479           * @return 		None
    480           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    481          void EMC_StaMemConfigPM(uint32_t index , uint32_t page_mode)
    482          {
   \                     EMC_StaMemConfigPM:
   \   00000000   0xB410             PUSH     {R4}
    483             uint32_t mask =  ~(uint32_t)(_BIT(3))  ;
   \   00000002   0xF07F 0x0208      MVNS     R2,#+8
    484             switch ( index)
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD005             BEQ.N    ??EMC_StaMemConfigPM_0
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xD015             BEQ.N    ??EMC_StaMemConfigPM_1
   \   0000000E   0xD30B             BCC.N    ??EMC_StaMemConfigPM_2
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD01B             BEQ.N    ??EMC_StaMemConfigPM_3
   \   00000014   0xE022             B.N      ??EMC_StaMemConfigPM_4
    485             {
    486                case 0:
    487                   LPC_EMC->StaticConfig0 = (LPC_EMC->StaticConfig0 & mask) | page_mode;
   \                     ??EMC_StaMemConfigPM_0:
   \   00000016   0x.... 0x....      LDR.W    R3,??DataTable23_27  ;; 0x2009c200
   \   0000001A   0x681B             LDR      R3,[R3, #+0]
   \   0000001C   0x4013             ANDS     R3,R2,R3
   \   0000001E   0x430B             ORRS     R3,R1,R3
   \   00000020   0x.... 0x....      LDR.W    R4,??DataTable23_27  ;; 0x2009c200
   \   00000024   0x6023             STR      R3,[R4, #+0]
    488          	   break;
   \   00000026   0xE019             B.N      ??EMC_StaMemConfigPM_4
    489                case 1:
    490                   LPC_EMC->StaticConfig1 = (LPC_EMC->StaticConfig1 & mask) | page_mode;
   \                     ??EMC_StaMemConfigPM_2:
   \   00000028   0x.... 0x....      LDR.W    R3,??DataTable23_28  ;; 0x2009c220
   \   0000002C   0x681B             LDR      R3,[R3, #+0]
   \   0000002E   0x4013             ANDS     R3,R2,R3
   \   00000030   0x430B             ORRS     R3,R1,R3
   \   00000032   0x.... 0x....      LDR.W    R4,??DataTable23_28  ;; 0x2009c220
   \   00000036   0x6023             STR      R3,[R4, #+0]
    491          	   break;
   \   00000038   0xE010             B.N      ??EMC_StaMemConfigPM_4
    492                case 2:
    493                   LPC_EMC->StaticConfig2 = (LPC_EMC->StaticConfig2  & mask)| page_mode;
   \                     ??EMC_StaMemConfigPM_1:
   \   0000003A   0x.... 0x....      LDR.W    R3,??DataTable23_29  ;; 0x2009c240
   \   0000003E   0x681B             LDR      R3,[R3, #+0]
   \   00000040   0x4013             ANDS     R3,R2,R3
   \   00000042   0x430B             ORRS     R3,R1,R3
   \   00000044   0x.... 0x....      LDR.W    R4,??DataTable23_29  ;; 0x2009c240
   \   00000048   0x6023             STR      R3,[R4, #+0]
    494          	   break;
   \   0000004A   0xE007             B.N      ??EMC_StaMemConfigPM_4
    495                case 3:
    496                   LPC_EMC->StaticConfig3 = (LPC_EMC->StaticConfig3  & mask)| page_mode;
   \                     ??EMC_StaMemConfigPM_3:
   \   0000004C   0x.... 0x....      LDR.W    R3,??DataTable23_30  ;; 0x2009c260
   \   00000050   0x681B             LDR      R3,[R3, #+0]
   \   00000052   0x4013             ANDS     R3,R2,R3
   \   00000054   0x430B             ORRS     R3,R1,R3
   \   00000056   0x.... 0x....      LDR.W    R4,??DataTable23_30  ;; 0x2009c260
   \   0000005A   0x6023             STR      R3,[R4, #+0]
    497          	   break;
    498             }
    499          }
   \                     ??EMC_StaMemConfigPM_4:
   \   0000005C   0xBC10             POP      {R4}
   \   0000005E   0x4770             BX       LR               ;; return
    500          /*********************************************************************//**
    501           * @brief 		Configure the chip select polarity
    502           * @param[in]	index index number, should be from 0 to 3
    503           * @param[in] 	pagepol_val_mode  page mode, should be:
    504           * 					- 0: Active LOW ship select
    505           * 					- 1: Active HIGH chip select
    506           * @return 		None
    507           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    508          void EMC_StaMemConfigPC(uint32_t index , uint32_t pol_val)
    509          {
   \                     EMC_StaMemConfigPC:
   \   00000000   0xB410             PUSH     {R4}
    510             uint32_t mask =  ~(uint32_t)(_BIT(6))  ;
   \   00000002   0xF07F 0x0240      MVNS     R2,#+64
    511             switch ( index)
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD005             BEQ.N    ??EMC_StaMemConfigPC_0
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xD015             BEQ.N    ??EMC_StaMemConfigPC_1
   \   0000000E   0xD30B             BCC.N    ??EMC_StaMemConfigPC_2
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD01B             BEQ.N    ??EMC_StaMemConfigPC_3
   \   00000014   0xE020             B.N      ??EMC_StaMemConfigPC_4
    512             {
    513                case 0:
    514                   LPC_EMC->StaticConfig0 = (LPC_EMC->StaticConfig0 & mask) | pol_val;
   \                     ??EMC_StaMemConfigPC_0:
   \   00000016   0x.... 0x....      LDR.W    R3,??DataTable23_27  ;; 0x2009c200
   \   0000001A   0x681B             LDR      R3,[R3, #+0]
   \   0000001C   0x4013             ANDS     R3,R2,R3
   \   0000001E   0x430B             ORRS     R3,R1,R3
   \   00000020   0x.... 0x....      LDR.W    R4,??DataTable23_27  ;; 0x2009c200
   \   00000024   0x6023             STR      R3,[R4, #+0]
    515          	   break;
   \   00000026   0xE017             B.N      ??EMC_StaMemConfigPC_4
    516                case 1:
    517                   LPC_EMC->StaticConfig1 = (LPC_EMC->StaticConfig1  & mask)| pol_val;
   \                     ??EMC_StaMemConfigPC_2:
   \   00000028   0x.... 0x....      LDR.W    R3,??DataTable23_28  ;; 0x2009c220
   \   0000002C   0x681B             LDR      R3,[R3, #+0]
   \   0000002E   0x4013             ANDS     R3,R2,R3
   \   00000030   0x430B             ORRS     R3,R1,R3
   \   00000032   0x.... 0x....      LDR.W    R4,??DataTable23_28  ;; 0x2009c220
   \   00000036   0x6023             STR      R3,[R4, #+0]
    518          	   break;
   \   00000038   0xE00E             B.N      ??EMC_StaMemConfigPC_4
    519                case 2:
    520                   LPC_EMC->StaticConfig2 = (LPC_EMC->StaticConfig2 & mask) | pol_val;
   \                     ??EMC_StaMemConfigPC_1:
   \   0000003A   0x.... 0x....      LDR.W    R3,??DataTable23_29  ;; 0x2009c240
   \   0000003E   0x681B             LDR      R3,[R3, #+0]
   \   00000040   0x4013             ANDS     R3,R2,R3
   \   00000042   0x430B             ORRS     R3,R1,R3
   \   00000044   0x.... 0x....      LDR.W    R4,??DataTable23_29  ;; 0x2009c240
   \   00000048   0x6023             STR      R3,[R4, #+0]
    521          	   break;
   \   0000004A   0xE005             B.N      ??EMC_StaMemConfigPC_4
    522                case 3:
    523                   LPC_EMC->StaticConfig3 = (LPC_EMC->StaticConfig3 & mask) | pol_val;
   \                     ??EMC_StaMemConfigPC_3:
   \   0000004C   0x....             LDR.N    R3,??DataTable23_30  ;; 0x2009c260
   \   0000004E   0x681B             LDR      R3,[R3, #+0]
   \   00000050   0x4013             ANDS     R3,R2,R3
   \   00000052   0x430B             ORRS     R3,R1,R3
   \   00000054   0x....             LDR.N    R4,??DataTable23_30  ;; 0x2009c260
   \   00000056   0x6023             STR      R3,[R4, #+0]
    524          	   break;
    525             }
    526          }
   \                     ??EMC_StaMemConfigPC_4:
   \   00000058   0xBC10             POP      {R4}
   \   0000005A   0x4770             BX       LR               ;; return
    527          
    528          /*********************************************************************//**
    529           * @brief 		Configure the byte lane state
    530           * @param[in]	index index number, should be from 0 to 3
    531           * @param[in] 	pb_val  Byte lane state, should be:
    532           * 					- 0: For reads all bits in BLSn[3:0] are HIGH.
    533           * 					- 1: For reads all bits in BLSn[3:0] are LOW.
    534           * @return 		None
    535           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    536          void EMC_StaMemConfigPB(uint32_t index , uint32_t pb_val)
    537          {
   \                     EMC_StaMemConfigPB:
   \   00000000   0xB410             PUSH     {R4}
    538             uint32_t mask =  ~(uint32_t)(_BIT(7))  ;
   \   00000002   0xF07F 0x0280      MVNS     R2,#+128
    539             switch ( index)
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD005             BEQ.N    ??EMC_StaMemConfigPB_0
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xD011             BEQ.N    ??EMC_StaMemConfigPB_1
   \   0000000E   0xD309             BCC.N    ??EMC_StaMemConfigPB_2
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD015             BEQ.N    ??EMC_StaMemConfigPB_3
   \   00000014   0xE01A             B.N      ??EMC_StaMemConfigPB_4
    540             {
    541                case 0:
    542                   LPC_EMC->StaticConfig0 = (LPC_EMC->StaticConfig0  & mask)| pb_val;
   \                     ??EMC_StaMemConfigPB_0:
   \   00000016   0x....             LDR.N    R3,??DataTable23_27  ;; 0x2009c200
   \   00000018   0x681B             LDR      R3,[R3, #+0]
   \   0000001A   0x4013             ANDS     R3,R2,R3
   \   0000001C   0x430B             ORRS     R3,R1,R3
   \   0000001E   0x....             LDR.N    R4,??DataTable23_27  ;; 0x2009c200
   \   00000020   0x6023             STR      R3,[R4, #+0]
    543          	   break;
   \   00000022   0xE013             B.N      ??EMC_StaMemConfigPB_4
    544                case 1:
    545                   LPC_EMC->StaticConfig1 = (LPC_EMC->StaticConfig1  & mask)| pb_val;
   \                     ??EMC_StaMemConfigPB_2:
   \   00000024   0x....             LDR.N    R3,??DataTable23_28  ;; 0x2009c220
   \   00000026   0x681B             LDR      R3,[R3, #+0]
   \   00000028   0x4013             ANDS     R3,R2,R3
   \   0000002A   0x430B             ORRS     R3,R1,R3
   \   0000002C   0x....             LDR.N    R4,??DataTable23_28  ;; 0x2009c220
   \   0000002E   0x6023             STR      R3,[R4, #+0]
    546          	   break;
   \   00000030   0xE00C             B.N      ??EMC_StaMemConfigPB_4
    547                case 2:
    548                   LPC_EMC->StaticConfig2 =( LPC_EMC->StaticConfig2  & mask)| pb_val;
   \                     ??EMC_StaMemConfigPB_1:
   \   00000032   0x....             LDR.N    R3,??DataTable23_29  ;; 0x2009c240
   \   00000034   0x681B             LDR      R3,[R3, #+0]
   \   00000036   0x4013             ANDS     R3,R2,R3
   \   00000038   0x430B             ORRS     R3,R1,R3
   \   0000003A   0x....             LDR.N    R4,??DataTable23_29  ;; 0x2009c240
   \   0000003C   0x6023             STR      R3,[R4, #+0]
    549          	   break;
   \   0000003E   0xE005             B.N      ??EMC_StaMemConfigPB_4
    550                case 3:
    551                   LPC_EMC->StaticConfig3 = (LPC_EMC->StaticConfig3  & mask)| pb_val;
   \                     ??EMC_StaMemConfigPB_3:
   \   00000040   0x....             LDR.N    R3,??DataTable23_30  ;; 0x2009c260
   \   00000042   0x681B             LDR      R3,[R3, #+0]
   \   00000044   0x4013             ANDS     R3,R2,R3
   \   00000046   0x430B             ORRS     R3,R1,R3
   \   00000048   0x....             LDR.N    R4,??DataTable23_30  ;; 0x2009c260
   \   0000004A   0x6023             STR      R3,[R4, #+0]
    552          	   break;
    553             }
    554          }
   \                     ??EMC_StaMemConfigPB_4:
   \   0000004C   0xBC10             POP      {R4}
   \   0000004E   0x4770             BX       LR               ;; return
    555          
    556          /*********************************************************************//**
    557           * @brief 		Configure the extended wait value
    558           * @param[in]	index index number, should be from 0 to 3
    559           * @param[in] 	ex_wait  Extended wait mode, should be:
    560           * 					- 0: Extended wait disabled.
    561           * 					- 1: Extended wait enabled.
    562           * @return 		None
    563           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    564          void EMC_StaMemConfigEW(uint32_t index , uint32_t ex_wait)
    565          {
   \                     EMC_StaMemConfigEW:
   \   00000000   0xB410             PUSH     {R4}
    566             uint32_t mask =  ~(uint32_t)(_BIT(8))  ;
   \   00000002   0xF47F 0x7280      MVNS     R2,#+256
    567             switch ( index)
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD005             BEQ.N    ??EMC_StaMemConfigEW_0
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xD011             BEQ.N    ??EMC_StaMemConfigEW_1
   \   0000000E   0xD309             BCC.N    ??EMC_StaMemConfigEW_2
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD015             BEQ.N    ??EMC_StaMemConfigEW_3
   \   00000014   0xE01A             B.N      ??EMC_StaMemConfigEW_4
    568             {
    569                case 0:
    570                   LPC_EMC->StaticConfig0 = (LPC_EMC->StaticConfig0 & mask) | ex_wait;
   \                     ??EMC_StaMemConfigEW_0:
   \   00000016   0x....             LDR.N    R3,??DataTable23_27  ;; 0x2009c200
   \   00000018   0x681B             LDR      R3,[R3, #+0]
   \   0000001A   0x4013             ANDS     R3,R2,R3
   \   0000001C   0x430B             ORRS     R3,R1,R3
   \   0000001E   0x....             LDR.N    R4,??DataTable23_27  ;; 0x2009c200
   \   00000020   0x6023             STR      R3,[R4, #+0]
    571          	   break;
   \   00000022   0xE013             B.N      ??EMC_StaMemConfigEW_4
    572                case 1:
    573                   LPC_EMC->StaticConfig1 = (LPC_EMC->StaticConfig1 & mask) | ex_wait;
   \                     ??EMC_StaMemConfigEW_2:
   \   00000024   0x....             LDR.N    R3,??DataTable23_28  ;; 0x2009c220
   \   00000026   0x681B             LDR      R3,[R3, #+0]
   \   00000028   0x4013             ANDS     R3,R2,R3
   \   0000002A   0x430B             ORRS     R3,R1,R3
   \   0000002C   0x....             LDR.N    R4,??DataTable23_28  ;; 0x2009c220
   \   0000002E   0x6023             STR      R3,[R4, #+0]
    574          	   break;
   \   00000030   0xE00C             B.N      ??EMC_StaMemConfigEW_4
    575                case 2:
    576                   LPC_EMC->StaticConfig2 = (LPC_EMC->StaticConfig2 & mask) | ex_wait;
   \                     ??EMC_StaMemConfigEW_1:
   \   00000032   0x....             LDR.N    R3,??DataTable23_29  ;; 0x2009c240
   \   00000034   0x681B             LDR      R3,[R3, #+0]
   \   00000036   0x4013             ANDS     R3,R2,R3
   \   00000038   0x430B             ORRS     R3,R1,R3
   \   0000003A   0x....             LDR.N    R4,??DataTable23_29  ;; 0x2009c240
   \   0000003C   0x6023             STR      R3,[R4, #+0]
    577          	   break;
   \   0000003E   0xE005             B.N      ??EMC_StaMemConfigEW_4
    578                case 3:
    579                   LPC_EMC->StaticConfig3 =( LPC_EMC->StaticConfig3 & mask) | ex_wait;
   \                     ??EMC_StaMemConfigEW_3:
   \   00000040   0x....             LDR.N    R3,??DataTable23_30  ;; 0x2009c260
   \   00000042   0x681B             LDR      R3,[R3, #+0]
   \   00000044   0x4013             ANDS     R3,R2,R3
   \   00000046   0x430B             ORRS     R3,R1,R3
   \   00000048   0x....             LDR.N    R4,??DataTable23_30  ;; 0x2009c260
   \   0000004A   0x6023             STR      R3,[R4, #+0]
    580          	   break;
    581             }
    582          }
   \                     ??EMC_StaMemConfigEW_4:
   \   0000004C   0xBC10             POP      {R4}
   \   0000004E   0x4770             BX       LR               ;; return
    583          
    584          /*********************************************************************//**
    585           * @brief 		Configure the buffer enable value
    586           * @param[in]	index index number, should be from 0 to 3
    587           * @param[in] 	buf_val  Buffer mode, should be:
    588           * 					- 0: Buffer disabled.
    589           * 					- 1: Buffer enabled.
    590           * @return 		None
    591           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    592          void EMC_StaMemConfigB(uint32_t index , uint32_t buf_val)
    593          {
   \                     EMC_StaMemConfigB:
   \   00000000   0xB410             PUSH     {R4}
    594             uint32_t mask =  ~(uint32_t)(_BIT(19))  ;
   \   00000002   0xF47F 0x2200      MVNS     R2,#+524288
    595             switch ( index)
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD005             BEQ.N    ??EMC_StaMemConfigB_0
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xD011             BEQ.N    ??EMC_StaMemConfigB_1
   \   0000000E   0xD309             BCC.N    ??EMC_StaMemConfigB_2
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD015             BEQ.N    ??EMC_StaMemConfigB_3
   \   00000014   0xE01A             B.N      ??EMC_StaMemConfigB_4
    596             {
    597                case 0:
    598                   LPC_EMC->StaticConfig0 = (LPC_EMC->StaticConfig0 & mask) | buf_val;
   \                     ??EMC_StaMemConfigB_0:
   \   00000016   0x....             LDR.N    R3,??DataTable23_27  ;; 0x2009c200
   \   00000018   0x681B             LDR      R3,[R3, #+0]
   \   0000001A   0x4013             ANDS     R3,R2,R3
   \   0000001C   0x430B             ORRS     R3,R1,R3
   \   0000001E   0x....             LDR.N    R4,??DataTable23_27  ;; 0x2009c200
   \   00000020   0x6023             STR      R3,[R4, #+0]
    599          	   break;
   \   00000022   0xE013             B.N      ??EMC_StaMemConfigB_4
    600                case 1:
    601                   LPC_EMC->StaticConfig1 = (LPC_EMC->StaticConfig1 & mask) | buf_val;
   \                     ??EMC_StaMemConfigB_2:
   \   00000024   0x....             LDR.N    R3,??DataTable23_28  ;; 0x2009c220
   \   00000026   0x681B             LDR      R3,[R3, #+0]
   \   00000028   0x4013             ANDS     R3,R2,R3
   \   0000002A   0x430B             ORRS     R3,R1,R3
   \   0000002C   0x....             LDR.N    R4,??DataTable23_28  ;; 0x2009c220
   \   0000002E   0x6023             STR      R3,[R4, #+0]
    602          	   break;
   \   00000030   0xE00C             B.N      ??EMC_StaMemConfigB_4
    603                case 2:
    604                   LPC_EMC->StaticConfig2 = (LPC_EMC->StaticConfig2 & mask) | buf_val;
   \                     ??EMC_StaMemConfigB_1:
   \   00000032   0x....             LDR.N    R3,??DataTable23_29  ;; 0x2009c240
   \   00000034   0x681B             LDR      R3,[R3, #+0]
   \   00000036   0x4013             ANDS     R3,R2,R3
   \   00000038   0x430B             ORRS     R3,R1,R3
   \   0000003A   0x....             LDR.N    R4,??DataTable23_29  ;; 0x2009c240
   \   0000003C   0x6023             STR      R3,[R4, #+0]
    605          	   break;
   \   0000003E   0xE005             B.N      ??EMC_StaMemConfigB_4
    606                case 3:
    607                   LPC_EMC->StaticConfig3 = (LPC_EMC->StaticConfig3 & mask) | buf_val;
   \                     ??EMC_StaMemConfigB_3:
   \   00000040   0x....             LDR.N    R3,??DataTable23_30  ;; 0x2009c260
   \   00000042   0x681B             LDR      R3,[R3, #+0]
   \   00000044   0x4013             ANDS     R3,R2,R3
   \   00000046   0x430B             ORRS     R3,R1,R3
   \   00000048   0x....             LDR.N    R4,??DataTable23_30  ;; 0x2009c260
   \   0000004A   0x6023             STR      R3,[R4, #+0]
    608          	   break;
    609             }
    610          }
   \                     ??EMC_StaMemConfigB_4:
   \   0000004C   0xBC10             POP      {R4}
   \   0000004E   0x4770             BX       LR               ;; return
    611          
    612          /*********************************************************************//**
    613           * @brief 		Configure the write permission
    614           * @param[in]	index index number, should be from 0 to 3
    615           * @param[in] 	per_val  Permission mode, should be:
    616           * 					- 0: Write not protected.
    617           * 					- 1: Write protected.
    618           * @return 		None
    619           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    620          void EMC_StaMemConfigpP(uint32_t index , uint32_t per_val)
    621          {
   \                     EMC_StaMemConfigpP:
   \   00000000   0xB410             PUSH     {R4}
    622             uint32_t mask =  ~(uint32_t)(_BIT(20))  ;
   \   00000002   0xF47F 0x1280      MVNS     R2,#+1048576
    623             switch ( index)
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD005             BEQ.N    ??EMC_StaMemConfigpP_0
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xD011             BEQ.N    ??EMC_StaMemConfigpP_1
   \   0000000E   0xD309             BCC.N    ??EMC_StaMemConfigpP_2
   \   00000010   0x2803             CMP      R0,#+3
   \   00000012   0xD015             BEQ.N    ??EMC_StaMemConfigpP_3
   \   00000014   0xE01A             B.N      ??EMC_StaMemConfigpP_4
    624             {
    625                case 0:
    626                   LPC_EMC->StaticConfig0 = (LPC_EMC->StaticConfig0 & mask)  | per_val;
   \                     ??EMC_StaMemConfigpP_0:
   \   00000016   0x....             LDR.N    R3,??DataTable23_27  ;; 0x2009c200
   \   00000018   0x681B             LDR      R3,[R3, #+0]
   \   0000001A   0x4013             ANDS     R3,R2,R3
   \   0000001C   0x430B             ORRS     R3,R1,R3
   \   0000001E   0x....             LDR.N    R4,??DataTable23_27  ;; 0x2009c200
   \   00000020   0x6023             STR      R3,[R4, #+0]
    627          	   break;
   \   00000022   0xE013             B.N      ??EMC_StaMemConfigpP_4
    628                case 1:
    629                   LPC_EMC->StaticConfig1 = (LPC_EMC->StaticConfig1 & mask)  | per_val;
   \                     ??EMC_StaMemConfigpP_2:
   \   00000024   0x....             LDR.N    R3,??DataTable23_28  ;; 0x2009c220
   \   00000026   0x681B             LDR      R3,[R3, #+0]
   \   00000028   0x4013             ANDS     R3,R2,R3
   \   0000002A   0x430B             ORRS     R3,R1,R3
   \   0000002C   0x....             LDR.N    R4,??DataTable23_28  ;; 0x2009c220
   \   0000002E   0x6023             STR      R3,[R4, #+0]
    630          	   break;
   \   00000030   0xE00C             B.N      ??EMC_StaMemConfigpP_4
    631                case 2:
    632                   LPC_EMC->StaticConfig2 = (LPC_EMC->StaticConfig2 & mask)  | per_val;
   \                     ??EMC_StaMemConfigpP_1:
   \   00000032   0x....             LDR.N    R3,??DataTable23_29  ;; 0x2009c240
   \   00000034   0x681B             LDR      R3,[R3, #+0]
   \   00000036   0x4013             ANDS     R3,R2,R3
   \   00000038   0x430B             ORRS     R3,R1,R3
   \   0000003A   0x....             LDR.N    R4,??DataTable23_29  ;; 0x2009c240
   \   0000003C   0x6023             STR      R3,[R4, #+0]
    633          	   break;
   \   0000003E   0xE005             B.N      ??EMC_StaMemConfigpP_4
    634                case 3:
    635                   LPC_EMC->StaticConfig3 = (LPC_EMC->StaticConfig3 & mask)  | per_val;
   \                     ??EMC_StaMemConfigpP_3:
   \   00000040   0x....             LDR.N    R3,??DataTable23_30  ;; 0x2009c260
   \   00000042   0x681B             LDR      R3,[R3, #+0]
   \   00000044   0x4013             ANDS     R3,R2,R3
   \   00000046   0x430B             ORRS     R3,R1,R3
   \   00000048   0x....             LDR.N    R4,??DataTable23_30  ;; 0x2009c260
   \   0000004A   0x6023             STR      R3,[R4, #+0]
    636          	   break;
    637             }
    638          }
   \                     ??EMC_StaMemConfigpP_4:
   \   0000004C   0xBC10             POP      {R4}
   \   0000004E   0x4770             BX       LR               ;; return
    639          
    640          /*********************************************************************//**
    641           * @brief 		Set the value of LPC_EMC static memory registers
    642           * @param[in]	index index number, should be from 0 to 3
    643           * @param[in] 	EMC_STA_MEM_PAR  Static register, should be:
    644           * 					- EMC_STA_MEM_WAITWEN: StaticWaitWen0 register
    645           * 					- EMC_STA_MEM_WAITOEN: StaticWaitOen0 register
    646           * 					- EMC_STA_MEM_WAITRD: StaticWaitRd0 register
    647           * 					- EMC_STA_MEM_WAITPAGE: StaticWaitPage0 register
    648           * 					- EMC_STA_MEM_WAITWR: StaticWaitWr0 register
    649           * 					- EMC_STA_MEM_WAITTURN: StaticWaitTurn0 register
    650           * @return 		None
    651           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    652          void EMC_SetStaMemoryParameter(uint32_t index ,EMC_STA_MEM_PAR par, uint32_t val)
    653          {
    654             switch (index)
   \                     EMC_SetStaMemoryParameter:
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD005             BEQ.N    ??EMC_SetStaMemoryParameter_0
   \   00000004   0x2802             CMP      R0,#+2
   \   00000006   0xD03F             BEQ.N    ??EMC_SetStaMemoryParameter_1
   \   00000008   0xD320             BCC.N    ??EMC_SetStaMemoryParameter_2
   \   0000000A   0x2803             CMP      R0,#+3
   \   0000000C   0xD05A             BEQ.N    ??EMC_SetStaMemoryParameter_3
   \   0000000E   0xE076             B.N      ??EMC_SetStaMemoryParameter_4
    655             {
    656             	case 0:
    657                   switch ( par)
   \                     ??EMC_SetStaMemoryParameter_0:
   \   00000010   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000012   0x2900             CMP      R1,#+0
   \   00000014   0xD008             BEQ.N    ??EMC_SetStaMemoryParameter_5
   \   00000016   0x2902             CMP      R1,#+2
   \   00000018   0xD00C             BEQ.N    ??EMC_SetStaMemoryParameter_6
   \   0000001A   0xD308             BCC.N    ??EMC_SetStaMemoryParameter_7
   \   0000001C   0x2904             CMP      R1,#+4
   \   0000001E   0xD00F             BEQ.N    ??EMC_SetStaMemoryParameter_8
   \   00000020   0xD30B             BCC.N    ??EMC_SetStaMemoryParameter_9
   \   00000022   0x2905             CMP      R1,#+5
   \   00000024   0xD00F             BEQ.N    ??EMC_SetStaMemoryParameter_10
   \   00000026   0xE010             B.N      ??EMC_SetStaMemoryParameter_11
    658                   {
    659                      case EMC_STA_MEM_WAITWEN:
    660                         LPC_EMC->StaticWaitWen0 = val;
   \                     ??EMC_SetStaMemoryParameter_5:
   \   00000028   0x....             LDR.N    R3,??DataTable23_31  ;; 0x2009c204
   \   0000002A   0x601A             STR      R2,[R3, #+0]
    661                         break;
   \   0000002C   0xE00D             B.N      ??EMC_SetStaMemoryParameter_11
    662                      case EMC_STA_MEM_WAITOEN:
    663                         LPC_EMC->StaticWaitOen0 = val;
   \                     ??EMC_SetStaMemoryParameter_7:
   \   0000002E   0x....             LDR.N    R3,??DataTable23_32  ;; 0x2009c208
   \   00000030   0x601A             STR      R2,[R3, #+0]
    664                         break;
   \   00000032   0xE00A             B.N      ??EMC_SetStaMemoryParameter_11
    665                      case EMC_STA_MEM_WAITRD:
    666                         LPC_EMC->StaticWaitRd0 = val;
   \                     ??EMC_SetStaMemoryParameter_6:
   \   00000034   0x....             LDR.N    R3,??DataTable23_33  ;; 0x2009c20c
   \   00000036   0x601A             STR      R2,[R3, #+0]
    667                         break;
   \   00000038   0xE007             B.N      ??EMC_SetStaMemoryParameter_11
    668                      case EMC_STA_MEM_WAITPAGE:
    669                         LPC_EMC->StaticWaitPage0 = val;
   \                     ??EMC_SetStaMemoryParameter_9:
   \   0000003A   0x....             LDR.N    R3,??DataTable23_34  ;; 0x2009c210
   \   0000003C   0x601A             STR      R2,[R3, #+0]
    670                         break;
   \   0000003E   0xE004             B.N      ??EMC_SetStaMemoryParameter_11
    671                      case EMC_STA_MEM_WAITWR:
    672                         LPC_EMC->StaticWaitWr0 = val;
   \                     ??EMC_SetStaMemoryParameter_8:
   \   00000040   0x....             LDR.N    R3,??DataTable23_35  ;; 0x2009c214
   \   00000042   0x601A             STR      R2,[R3, #+0]
    673                         break;
   \   00000044   0xE001             B.N      ??EMC_SetStaMemoryParameter_11
    674                      case EMC_STA_MEM_WAITTURN:
    675                         LPC_EMC->StaticWaitTurn0 = val;
   \                     ??EMC_SetStaMemoryParameter_10:
   \   00000046   0x....             LDR.N    R3,??DataTable23_36  ;; 0x2009c218
   \   00000048   0x601A             STR      R2,[R3, #+0]
    676                         break;
    677                   }
    678          	   break;
   \                     ??EMC_SetStaMemoryParameter_11:
   \   0000004A   0xE058             B.N      ??EMC_SetStaMemoryParameter_4
    679             	case 1:
    680                   switch ( par)
   \                     ??EMC_SetStaMemoryParameter_2:
   \   0000004C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004E   0x2900             CMP      R1,#+0
   \   00000050   0xD008             BEQ.N    ??EMC_SetStaMemoryParameter_12
   \   00000052   0x2902             CMP      R1,#+2
   \   00000054   0xD00C             BEQ.N    ??EMC_SetStaMemoryParameter_13
   \   00000056   0xD308             BCC.N    ??EMC_SetStaMemoryParameter_14
   \   00000058   0x2904             CMP      R1,#+4
   \   0000005A   0xD00F             BEQ.N    ??EMC_SetStaMemoryParameter_15
   \   0000005C   0xD30B             BCC.N    ??EMC_SetStaMemoryParameter_16
   \   0000005E   0x2905             CMP      R1,#+5
   \   00000060   0xD00F             BEQ.N    ??EMC_SetStaMemoryParameter_17
   \   00000062   0xE010             B.N      ??EMC_SetStaMemoryParameter_18
    681                   {
    682                      case EMC_STA_MEM_WAITWEN:
    683                         LPC_EMC->StaticWaitWen1 = val;
   \                     ??EMC_SetStaMemoryParameter_12:
   \   00000064   0x....             LDR.N    R3,??DataTable23_37  ;; 0x2009c224
   \   00000066   0x601A             STR      R2,[R3, #+0]
    684                         break;
   \   00000068   0xE00D             B.N      ??EMC_SetStaMemoryParameter_18
    685                      case EMC_STA_MEM_WAITOEN:
    686                         LPC_EMC->StaticWaitOen1 = val;
   \                     ??EMC_SetStaMemoryParameter_14:
   \   0000006A   0x....             LDR.N    R3,??DataTable23_38  ;; 0x2009c228
   \   0000006C   0x601A             STR      R2,[R3, #+0]
    687                         break;
   \   0000006E   0xE00A             B.N      ??EMC_SetStaMemoryParameter_18
    688                      case EMC_STA_MEM_WAITRD:
    689                         LPC_EMC->StaticWaitRd1 = val;
   \                     ??EMC_SetStaMemoryParameter_13:
   \   00000070   0x....             LDR.N    R3,??DataTable23_39  ;; 0x2009c22c
   \   00000072   0x601A             STR      R2,[R3, #+0]
    690                         break;
   \   00000074   0xE007             B.N      ??EMC_SetStaMemoryParameter_18
    691                      case EMC_STA_MEM_WAITPAGE:
    692                         LPC_EMC->StaticWaitPage1 = val;
   \                     ??EMC_SetStaMemoryParameter_16:
   \   00000076   0x....             LDR.N    R3,??DataTable23_40  ;; 0x2009c230
   \   00000078   0x601A             STR      R2,[R3, #+0]
    693                         break;
   \   0000007A   0xE004             B.N      ??EMC_SetStaMemoryParameter_18
    694                      case EMC_STA_MEM_WAITWR:
    695                         LPC_EMC->StaticWaitWr1 = val;
   \                     ??EMC_SetStaMemoryParameter_15:
   \   0000007C   0x....             LDR.N    R3,??DataTable23_41  ;; 0x2009c234
   \   0000007E   0x601A             STR      R2,[R3, #+0]
    696                         break;
   \   00000080   0xE001             B.N      ??EMC_SetStaMemoryParameter_18
    697                      case EMC_STA_MEM_WAITTURN:
    698                         LPC_EMC->StaticWaitTurn1 = val;
   \                     ??EMC_SetStaMemoryParameter_17:
   \   00000082   0x....             LDR.N    R3,??DataTable23_42  ;; 0x2009c238
   \   00000084   0x601A             STR      R2,[R3, #+0]
    699                         break;
    700                   }
    701          	   break;
   \                     ??EMC_SetStaMemoryParameter_18:
   \   00000086   0xE03A             B.N      ??EMC_SetStaMemoryParameter_4
    702             	case 2:
    703                   switch ( par)
   \                     ??EMC_SetStaMemoryParameter_1:
   \   00000088   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000008A   0x2900             CMP      R1,#+0
   \   0000008C   0xD008             BEQ.N    ??EMC_SetStaMemoryParameter_19
   \   0000008E   0x2902             CMP      R1,#+2
   \   00000090   0xD00C             BEQ.N    ??EMC_SetStaMemoryParameter_20
   \   00000092   0xD308             BCC.N    ??EMC_SetStaMemoryParameter_21
   \   00000094   0x2904             CMP      R1,#+4
   \   00000096   0xD00F             BEQ.N    ??EMC_SetStaMemoryParameter_22
   \   00000098   0xD30B             BCC.N    ??EMC_SetStaMemoryParameter_23
   \   0000009A   0x2905             CMP      R1,#+5
   \   0000009C   0xD00F             BEQ.N    ??EMC_SetStaMemoryParameter_24
   \   0000009E   0xE010             B.N      ??EMC_SetStaMemoryParameter_25
    704                   {
    705                      case EMC_STA_MEM_WAITWEN:
    706                         LPC_EMC->StaticWaitWen2 = val;
   \                     ??EMC_SetStaMemoryParameter_19:
   \   000000A0   0x....             LDR.N    R3,??DataTable23_43  ;; 0x2009c244
   \   000000A2   0x601A             STR      R2,[R3, #+0]
    707                         break;
   \   000000A4   0xE00D             B.N      ??EMC_SetStaMemoryParameter_25
    708                      case EMC_STA_MEM_WAITOEN:
    709                         LPC_EMC->StaticWaitOen2 = val;
   \                     ??EMC_SetStaMemoryParameter_21:
   \   000000A6   0x....             LDR.N    R3,??DataTable23_44  ;; 0x2009c248
   \   000000A8   0x601A             STR      R2,[R3, #+0]
    710                         break;
   \   000000AA   0xE00A             B.N      ??EMC_SetStaMemoryParameter_25
    711                      case EMC_STA_MEM_WAITRD:
    712                         LPC_EMC->StaticWaitRd2 = val;
   \                     ??EMC_SetStaMemoryParameter_20:
   \   000000AC   0x....             LDR.N    R3,??DataTable23_45  ;; 0x2009c24c
   \   000000AE   0x601A             STR      R2,[R3, #+0]
    713                         break;
   \   000000B0   0xE007             B.N      ??EMC_SetStaMemoryParameter_25
    714                      case EMC_STA_MEM_WAITPAGE:
    715                         LPC_EMC->StaticWaitPage2 = val;
   \                     ??EMC_SetStaMemoryParameter_23:
   \   000000B2   0x....             LDR.N    R3,??DataTable23_46  ;; 0x2009c250
   \   000000B4   0x601A             STR      R2,[R3, #+0]
    716                         break;
   \   000000B6   0xE004             B.N      ??EMC_SetStaMemoryParameter_25
    717                      case EMC_STA_MEM_WAITWR:
    718                         LPC_EMC->StaticWaitWr2 = val;
   \                     ??EMC_SetStaMemoryParameter_22:
   \   000000B8   0x....             LDR.N    R3,??DataTable23_47  ;; 0x2009c254
   \   000000BA   0x601A             STR      R2,[R3, #+0]
    719                         break;
   \   000000BC   0xE001             B.N      ??EMC_SetStaMemoryParameter_25
    720                      case EMC_STA_MEM_WAITTURN:
    721                         LPC_EMC->StaticWaitTurn2 = val;
   \                     ??EMC_SetStaMemoryParameter_24:
   \   000000BE   0x....             LDR.N    R3,??DataTable23_48  ;; 0x2009c258
   \   000000C0   0x601A             STR      R2,[R3, #+0]
    722                         break;
    723                   }
    724          	   break;
   \                     ??EMC_SetStaMemoryParameter_25:
   \   000000C2   0xE01C             B.N      ??EMC_SetStaMemoryParameter_4
    725             	case 3:
    726                   switch ( par)
   \                     ??EMC_SetStaMemoryParameter_3:
   \   000000C4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C6   0x2900             CMP      R1,#+0
   \   000000C8   0xD008             BEQ.N    ??EMC_SetStaMemoryParameter_26
   \   000000CA   0x2902             CMP      R1,#+2
   \   000000CC   0xD00C             BEQ.N    ??EMC_SetStaMemoryParameter_27
   \   000000CE   0xD308             BCC.N    ??EMC_SetStaMemoryParameter_28
   \   000000D0   0x2904             CMP      R1,#+4
   \   000000D2   0xD00F             BEQ.N    ??EMC_SetStaMemoryParameter_29
   \   000000D4   0xD30B             BCC.N    ??EMC_SetStaMemoryParameter_30
   \   000000D6   0x2905             CMP      R1,#+5
   \   000000D8   0xD00F             BEQ.N    ??EMC_SetStaMemoryParameter_31
   \   000000DA   0xE010             B.N      ??EMC_SetStaMemoryParameter_32
    727                   {
    728                      case EMC_STA_MEM_WAITWEN:
    729                         LPC_EMC->StaticWaitWen3 = val;
   \                     ??EMC_SetStaMemoryParameter_26:
   \   000000DC   0x....             LDR.N    R3,??DataTable23_49  ;; 0x2009c264
   \   000000DE   0x601A             STR      R2,[R3, #+0]
    730                         break;
   \   000000E0   0xE00D             B.N      ??EMC_SetStaMemoryParameter_32
    731                      case EMC_STA_MEM_WAITOEN:
    732                         LPC_EMC->StaticWaitOen3 = val;
   \                     ??EMC_SetStaMemoryParameter_28:
   \   000000E2   0x....             LDR.N    R3,??DataTable23_50  ;; 0x2009c268
   \   000000E4   0x601A             STR      R2,[R3, #+0]
    733                         break;
   \   000000E6   0xE00A             B.N      ??EMC_SetStaMemoryParameter_32
    734                      case EMC_STA_MEM_WAITRD:
    735                         LPC_EMC->StaticWaitRd3 = val;
   \                     ??EMC_SetStaMemoryParameter_27:
   \   000000E8   0x....             LDR.N    R3,??DataTable23_51  ;; 0x2009c26c
   \   000000EA   0x601A             STR      R2,[R3, #+0]
    736                         break;
   \   000000EC   0xE007             B.N      ??EMC_SetStaMemoryParameter_32
    737                      case EMC_STA_MEM_WAITPAGE:
    738                         LPC_EMC->StaticWaitPage3 = val;
   \                     ??EMC_SetStaMemoryParameter_30:
   \   000000EE   0x....             LDR.N    R3,??DataTable23_52  ;; 0x2009c270
   \   000000F0   0x601A             STR      R2,[R3, #+0]
    739                         break;
   \   000000F2   0xE004             B.N      ??EMC_SetStaMemoryParameter_32
    740                      case EMC_STA_MEM_WAITWR:
    741                         LPC_EMC->StaticWaitWr3 = val;
   \                     ??EMC_SetStaMemoryParameter_29:
   \   000000F4   0x....             LDR.N    R3,??DataTable23_53  ;; 0x2009c274
   \   000000F6   0x601A             STR      R2,[R3, #+0]
    742                         break;
   \   000000F8   0xE001             B.N      ??EMC_SetStaMemoryParameter_32
    743                      case EMC_STA_MEM_WAITTURN:
    744                         LPC_EMC->StaticWaitTurn3 = val;
   \                     ??EMC_SetStaMemoryParameter_31:
   \   000000FA   0x....             LDR.N    R3,??DataTable23_54  ;; 0x2009c278
   \   000000FC   0x601A             STR      R2,[R3, #+0]
    745                         break;
    746                   }
    747          	   break;
    748             }
    749          }
   \                     ??EMC_SetStaMemoryParameter_32:
   \                     ??EMC_SetStaMemoryParameter_4:
   \   000000FE   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   0x400FC0C4         DC32     0x400fc0c4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_1:
   \   00000000   0x400FC1DC         DC32     0x400fc1dc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_2:
   \   00000000   0x2009C000         DC32     0x2009c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_3:
   \   00000000   0x2009C008         DC32     0x2009c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_4:
   \   00000000   0x2009C020         DC32     0x2009c020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_5:
   \   00000000   0x2009C024         DC32     0x2009c024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_6:
   \   00000000   0x2009C028         DC32     0x2009c028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_7:
   \   00000000   0x2009C030         DC32     0x2009c030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_8:
   \   00000000   0x2009C034         DC32     0x2009c034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_9:
   \   00000000   0x2009C038         DC32     0x2009c038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_10:
   \   00000000   0x2009C03C         DC32     0x2009c03c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_11:
   \   00000000   0x2009C040         DC32     0x2009c040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_12:
   \   00000000   0x2009C044         DC32     0x2009c044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_13:
   \   00000000   0x2009C048         DC32     0x2009c048

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_14:
   \   00000000   0x2009C04C         DC32     0x2009c04c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_15:
   \   00000000   0x2009C050         DC32     0x2009c050

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_16:
   \   00000000   0x2009C054         DC32     0x2009c054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_17:
   \   00000000   0x2009C058         DC32     0x2009c058

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_18:
   \   00000000   0x2009C080         DC32     0x2009c080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_19:
   \   00000000   0x2009C100         DC32     0x2009c100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_20:
   \   00000000   0x2009C120         DC32     0x2009c120

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_21:
   \   00000000   0x2009C140         DC32     0x2009c140

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_22:
   \   00000000   0x2009C160         DC32     0x2009c160

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_23:
   \   00000000   0x2009C104         DC32     0x2009c104

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_24:
   \   00000000   0x2009C124         DC32     0x2009c124

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_25:
   \   00000000   0x2009C144         DC32     0x2009c144

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_26:
   \   00000000   0x2009C164         DC32     0x2009c164

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_27:
   \   00000000   0x2009C200         DC32     0x2009c200

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_28:
   \   00000000   0x2009C220         DC32     0x2009c220

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_29:
   \   00000000   0x2009C240         DC32     0x2009c240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_30:
   \   00000000   0x2009C260         DC32     0x2009c260

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_31:
   \   00000000   0x2009C204         DC32     0x2009c204

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_32:
   \   00000000   0x2009C208         DC32     0x2009c208

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_33:
   \   00000000   0x2009C20C         DC32     0x2009c20c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_34:
   \   00000000   0x2009C210         DC32     0x2009c210

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_35:
   \   00000000   0x2009C214         DC32     0x2009c214

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_36:
   \   00000000   0x2009C218         DC32     0x2009c218

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_37:
   \   00000000   0x2009C224         DC32     0x2009c224

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_38:
   \   00000000   0x2009C228         DC32     0x2009c228

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_39:
   \   00000000   0x2009C22C         DC32     0x2009c22c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_40:
   \   00000000   0x2009C230         DC32     0x2009c230

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_41:
   \   00000000   0x2009C234         DC32     0x2009c234

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_42:
   \   00000000   0x2009C238         DC32     0x2009c238

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_43:
   \   00000000   0x2009C244         DC32     0x2009c244

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_44:
   \   00000000   0x2009C248         DC32     0x2009c248

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_45:
   \   00000000   0x2009C24C         DC32     0x2009c24c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_46:
   \   00000000   0x2009C250         DC32     0x2009c250

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_47:
   \   00000000   0x2009C254         DC32     0x2009c254

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_48:
   \   00000000   0x2009C258         DC32     0x2009c258

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_49:
   \   00000000   0x2009C264         DC32     0x2009c264

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_50:
   \   00000000   0x2009C268         DC32     0x2009c268

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_51:
   \   00000000   0x2009C26C         DC32     0x2009c26c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_52:
   \   00000000   0x2009C270         DC32     0x2009c270

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_53:
   \   00000000   0x2009C274         DC32     0x2009c274

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23_54:
   \   00000000   0x2009C278         DC32     0x2009c278
    750          
    751          
    752          
    753          
    754          
    755          
    756          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   EMC_ConfigEndianMode
       0   EMC_DynCtrlClockControl
       0   EMC_DynCtrlClockEnable
       0   EMC_DynCtrlMMC
       0   EMC_DynCtrlPowerDownMode
       0   EMC_DynCtrlSDRAMInit
       0   EMC_DynCtrlSelfRefresh
       4   EMC_DynMemCAS
       4   EMC_DynMemConfigAM
       4   EMC_DynMemConfigB
       4   EMC_DynMemConfigMD
       4   EMC_DynMemConfigP
       4   EMC_DynMemRAS
       8   EMC_Init
         8   -> PINSEL_ConfigPin
       0   EMC_SetDynMemoryParameter
       0   EMC_SetStaMemoryParameter
       4   EMC_StaMemConfigB
       4   EMC_StaMemConfigEW
       4   EMC_StaMemConfigMW
       4   EMC_StaMemConfigPB
       4   EMC_StaMemConfigPC
       4   EMC_StaMemConfigPM
       4   EMC_StaMemConfigpP
       0   EMC_StaticExtendedWait


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable23
       4  ??DataTable23_1
       4  ??DataTable23_10
       4  ??DataTable23_11
       4  ??DataTable23_12
       4  ??DataTable23_13
       4  ??DataTable23_14
       4  ??DataTable23_15
       4  ??DataTable23_16
       4  ??DataTable23_17
       4  ??DataTable23_18
       4  ??DataTable23_19
       4  ??DataTable23_2
       4  ??DataTable23_20
       4  ??DataTable23_21
       4  ??DataTable23_22
       4  ??DataTable23_23
       4  ??DataTable23_24
       4  ??DataTable23_25
       4  ??DataTable23_26
       4  ??DataTable23_27
       4  ??DataTable23_28
       4  ??DataTable23_29
       4  ??DataTable23_3
       4  ??DataTable23_30
       4  ??DataTable23_31
       4  ??DataTable23_32
       4  ??DataTable23_33
       4  ??DataTable23_34
       4  ??DataTable23_35
       4  ??DataTable23_36
       4  ??DataTable23_37
       4  ??DataTable23_38
       4  ??DataTable23_39
       4  ??DataTable23_4
       4  ??DataTable23_40
       4  ??DataTable23_41
       4  ??DataTable23_42
       4  ??DataTable23_43
       4  ??DataTable23_44
       4  ??DataTable23_45
       4  ??DataTable23_46
       4  ??DataTable23_47
       4  ??DataTable23_48
       4  ??DataTable23_49
       4  ??DataTable23_5
       4  ??DataTable23_50
       4  ??DataTable23_51
       4  ??DataTable23_52
       4  ??DataTable23_53
       4  ??DataTable23_54
       4  ??DataTable23_6
       4  ??DataTable23_7
       4  ??DataTable23_8
       4  ??DataTable23_9
      26  EMC_ConfigEndianMode
      22  EMC_DynCtrlClockControl
      16  EMC_DynCtrlClockEnable
      22  EMC_DynCtrlMMC
      22  EMC_DynCtrlPowerDownMode
      22  EMC_DynCtrlSDRAMInit
      22  EMC_DynCtrlSelfRefresh
      96  EMC_DynMemCAS
      96  EMC_DynMemConfigAM
      96  EMC_DynMemConfigB
      96  EMC_DynMemConfigMD
      96  EMC_DynMemConfigP
      96  EMC_DynMemRAS
     270  EMC_Init
     148  EMC_SetDynMemoryParameter
     256  EMC_SetStaMemoryParameter
      80  EMC_StaMemConfigB
      80  EMC_StaMemConfigEW
      96  EMC_StaMemConfigMW
      80  EMC_StaMemConfigPB
      92  EMC_StaMemConfigPC
      96  EMC_StaMemConfigPM
      80  EMC_StaMemConfigpP
       8  EMC_StaticExtendedWait

 
 2 234 bytes in section .text
 
 2 234 bytes of CODE memory

Errors: none
Warnings: none
