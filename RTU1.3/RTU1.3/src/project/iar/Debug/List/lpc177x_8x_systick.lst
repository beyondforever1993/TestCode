###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.6.4896/W32 for ARM      11/Mar/2017  15:34:23 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\cmsis\Dri #
#                    vers\source\lpc177x_8x_systick.c                         #
#    Command line =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\cmsis\Dri #
#                    vers\source\lpc177x_8x_systick.c -lCN                    #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\Debug\List\ -o D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë #
#                    \RTU_1.2\project\iar\Debug\Obj\ --no_cse --no_unroll     #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5_2\arm\INC\c\DLib_Config_F #
#                    ull.h" -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2 #
#                    \project\iar\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\ #
#                    RTU_1.2\project\iar\..\..\BSP\ -I                        #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\ADC\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´ #
#                    úÂë\RTU_1.2\project\iar\..\..\BSP\RTC\ -I                #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\TILT\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\ #
#                    ´úÂë\RTU_1.2\project\iar\..\..\BSP\RDLevel\ -I           #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\RS232\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU #
#                    \´úÂë\RTU_1.2\project\iar\..\..\BSP\OS-v2\ -I            #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\VibrationString\ -I                         #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\ucos2\uCOS-II\Ports\ARM-Cortex-M3\Generic\IAR\  #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\ucos2\uCOS-II\Source\ -I                     #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\ucos2\uC-LIB\ -I D:\wangfan2\×ÀÃæ\receiverfirm\ #
#                    RTU\´úÂë\RTU_1.2\project\iar\..\..\ucos2\uC-CPU\ -I      #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\ucos2\uC-CPU\ARM-Cortex-M3\IAR\ -I              #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\cmsis\Drivers\source\ -I                        #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\cmsis\Drivers\include\ -I                       #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\app\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\ #
#                    RTU_1.2\project\iar\..\..\uC-Probe\Target\Plugins\uCOS-I #
#                    I\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\pro #
#                    ject\iar\..\..\uC-Probe\Target\Demos\Intro\Workspaces\   #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\uC-Probe\Target\Demos\Intro\Source\ -I       #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\uC-Probe\Target\Communication\Generic\Source\   #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\uC-Probe\Target\Communication\Generic\RS-232 #
#                    \Source\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1 #
#                    .2\project\iar\..\..\uC-Probe\Target\Communication\Gener #
#                    ic\RS-232\Ports\NXP\LPC17xx\ -I                          #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\uC-Probe\Target\Communication\Generic\RS-232\OS #
#                    \uCOS-II\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_ #
#                    1.2\project\iar\..\..\cmsis\Core\CM3\CoreSupport\ -I     #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\cmsis\Core\CM3\DeviceSupport\NXP\LPC177x_8x\    #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\HuaceApp\ -I D:\wangfan2\×ÀÃæ\receiverfirm\R #
#                    TU\´úÂë\RTU_1.2\project\iar\..\..\HuaceApp\DEVICE_BT\    #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\HuaceApp\DEVICE_COM\ -I                      #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\DEVICE_GPRS\ -I                        #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\DEVICE_GPS\ -I                         #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\DEVICE_RADIO\ -I                       #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\iap\ -I D:\wangfan2\×ÀÃæ\receiverfirm\ #
#                    RTU\´úÂë\RTU_1.2\project\iar\..\..\FatFs\ -I             #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\USB\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\ #
#                    RTU_1.2\project\iar\..\..\bsp\spi_flash\ -I              #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\LED\ -On --use_c++_inline              #
#    List file    =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\Debug\List\lpc177x_8x_systick.lst                     #
#    Object file  =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\Debug\Obj\lpc177x_8x_systick.o                        #
#                                                                             #
#                                                                             #
###############################################################################

D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\cmsis\Drivers\source\lpc177x_8x_systick.c
      1          /**********************************************************************
      2          * $Id$		lpc177x_8x_systick.c			2011-06-02
      3          *//**
      4          * @file		lpc177x_8x_systick.c
      5          * @brief	Contains all functions support for SysTick firmware library
      6          *			on LPC177x_8x
      7          * @version	1.0
      8          * @date		02. June. 2011
      9          * @author	NXP MCU SW Application Team
     10          *
     11          * Copyright(C) 2011, NXP Semiconductor
     12          * All rights reserved.
     13          *
     14          ***********************************************************************
     15          * Software that is described herein is for illustrative purposes only
     16          * which provides customers with programming information regarding the
     17          * products. This software is supplied "AS IS" without any warranties.
     18          * NXP Semiconductors assumes no responsibility or liability for the
     19          * use of the software, conveys no license or title under any patent,
     20          * copyright, or mask work right to the product. NXP Semiconductors
     21          * reserves the right to make changes in the software without
     22          * notification. NXP Semiconductors also make no representation or
     23          * warranty that such application will be suitable for the specified
     24          * use without further testing or modification.
     25          **********************************************************************/
     26          
     27          /* Peripheral group ----------------------------------------------------------- */
     28          /** @addtogroup SYSTICK
     29           * @{
     30           */
     31          
     32          /* Includes ------------------------------------------------------------------- */
     33          #include "lpc177x_8x_systick.h"
     34          #include "lpc177x_8x_clkpwr.h"
     35          
     36          
     37          /* Public Functions ----------------------------------------------------------- */
     38          /** @addtogroup SYSTICK_Public_Functions
     39           * @{
     40           */
     41          /*********************************************************************//**
     42           * @brief 		Initial System Tick with using internal CPU clock source
     43           * @param[in]	time	time interval(ms)
     44           * @return 		None
     45           * Note: time interval parameter should be less than:
     46           * 		1/cclk * (2^24) * 1000 (ms)
     47           * In this case, with cclk = 96Mhz, time interval value < 174ms
     48           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     49          void SYSTICK_InternalInit(uint32_t time)
     50          {
   \                     SYSTICK_InternalInit:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
     51          	uint32_t cclk;
     52          	float maxtime;
     53          
     54          	cclk = CLKPWR_GetCLK(CLKPWR_CLKTYPE_CPU);
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x.... 0x....      BL       CLKPWR_GetCLK
   \   0000000A   0x0005             MOVS     R5,R0
     55          
     56          	/* With internal CPU clock frequency for LPC178X is 'SystemCoreClock'
     57          	 * And limit 24 bit for RELOAD value
     58          	 * So the maximum time can be set:
     59          	 * 1/SystemCoreClock * (2^24) * 1000 (ms)*/
     60          	
     61          	//check time value is available or not
     62          	maxtime = (1<<24)/(cclk / 1000) ;
   \   0000000C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000010   0xFBB5 0xF0F0      UDIV     R0,R5,R0
   \   00000014   0xF05F 0x7180      MOVS     R1,#+16777216
   \   00000018   0xFBB1 0xF0F0      UDIV     R0,R1,R0
   \   0000001C   0x.... 0x....      BL       __aeabi_ui2f
   \   00000020   0x0006             MOVS     R6,R0
     63          
     64          	if(time > maxtime)
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0x.... 0x....      BL       __aeabi_ui2f
   \   00000028   0x0001             MOVS     R1,R0
   \   0000002A   0x0030             MOVS     R0,R6
   \   0000002C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000030   0xD200             BCS.N    ??SYSTICK_InternalInit_0
     65          	{
     66          		//Error loop
     67          		while(1);
   \                     ??SYSTICK_InternalInit_1:
   \   00000032   0xE7FE             B.N      ??SYSTICK_InternalInit_1
     68          	}
     69          	else
     70          	{
     71          		//Select CPU clock is System Tick clock source
     72          		SysTick->CTRL |= ST_CTRL_CLKSOURCE;
   \                     ??SYSTICK_InternalInit_0:
   \   00000034   0x....             LDR.N    R0,??DataTable5  ;; 0xe000e010
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000003C   0x....             LDR.N    R1,??DataTable5  ;; 0xe000e010
   \   0000003E   0x6008             STR      R0,[R1, #+0]
     73          
     74          		/* Set RELOAD value
     75          		 * RELOAD = (SystemCoreClock/1000) * time - 1
     76          		 * with time base is millisecond
     77          		 */
     78          		SysTick->RELOAD = (cclk/1000)*time - 1;
   \   00000040   0xF44F 0x707A      MOV      R0,#+1000
   \   00000044   0xFBB5 0xF0F0      UDIV     R0,R5,R0
   \   00000048   0x4360             MULS     R0,R4,R0
   \   0000004A   0x1E40             SUBS     R0,R0,#+1
   \   0000004C   0x....             LDR.N    R1,??DataTable5_1  ;; 0xe000e014
   \   0000004E   0x6008             STR      R0,[R1, #+0]
     79          	}
     80          }
   \   00000050   0xBD70             POP      {R4-R6,PC}       ;; return
     81          
     82          /*********************************************************************//**
     83           * @brief 		Initial System Tick with using external clock source
     84           * @param[in]	freq	external clock frequency(Hz)
     85           * @param[in]	time	time interval(ms)
     86           * @return 		None
     87           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     88          void SYSTICK_ExternalInit(uint32_t freq, uint32_t time)
     89          {
   \                     SYSTICK_ExternalInit:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     90          	float maxtime;
     91          
     92          	/* With external clock frequency for LPC178X is 'freq'
     93          	 * And limit 24 bit for RELOAD value
     94          	 * So the maximum time can be set:
     95          	 * 1/freq * (2^24) * 1000 (ms)
     96          	 */
     97          	//check time value is available or not
     98          	maxtime = (1<<24)/(freq / 1000) ;
   \   00000006   0xF44F 0x707A      MOV      R0,#+1000
   \   0000000A   0xFBB4 0xF0F0      UDIV     R0,R4,R0
   \   0000000E   0xF05F 0x7180      MOVS     R1,#+16777216
   \   00000012   0xFBB1 0xF0F0      UDIV     R0,R1,R0
   \   00000016   0x.... 0x....      BL       __aeabi_ui2f
   \   0000001A   0x0006             MOVS     R6,R0
     99          	if (time>maxtime)
   \   0000001C   0x0028             MOVS     R0,R5
   \   0000001E   0x.... 0x....      BL       __aeabi_ui2f
   \   00000022   0x0001             MOVS     R1,R0
   \   00000024   0x0030             MOVS     R0,R6
   \   00000026   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000002A   0xD200             BCS.N    ??SYSTICK_ExternalInit_0
    100          	{
    101          		//Error Loop
    102          		while(1);
   \                     ??SYSTICK_ExternalInit_1:
   \   0000002C   0xE7FE             B.N      ??SYSTICK_ExternalInit_1
    103          	}
    104          	else
    105          	{
    106          		//Select external clock is System Tick clock source
    107          		SysTick->CTRL &= ~ ST_CTRL_CLKSOURCE;
   \                     ??SYSTICK_ExternalInit_0:
   \   0000002E   0x....             LDR.N    R0,??DataTable5  ;; 0xe000e010
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000036   0x....             LDR.N    R1,??DataTable5  ;; 0xe000e010
   \   00000038   0x6008             STR      R0,[R1, #+0]
    108          
    109          		/* Set RELOAD value
    110          		 * RELOAD = (freq/1000) * time - 1
    111          		 * with time base is millisecond
    112          		 */
    113          		maxtime = (freq/1000)*time - 1;
   \   0000003A   0xF44F 0x707A      MOV      R0,#+1000
   \   0000003E   0xFBB4 0xF0F0      UDIV     R0,R4,R0
   \   00000042   0x4368             MULS     R0,R5,R0
   \   00000044   0x1E40             SUBS     R0,R0,#+1
   \   00000046   0x.... 0x....      BL       __aeabi_ui2f
   \   0000004A   0x0006             MOVS     R6,R0
    114          		SysTick->RELOAD = (freq/1000)*time - 1;
   \   0000004C   0xF44F 0x707A      MOV      R0,#+1000
   \   00000050   0xFBB4 0xF0F0      UDIV     R0,R4,R0
   \   00000054   0x4368             MULS     R0,R5,R0
   \   00000056   0x1E40             SUBS     R0,R0,#+1
   \   00000058   0x....             LDR.N    R1,??DataTable5_1  ;; 0xe000e014
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    115          	}
    116          }
   \   0000005C   0xBD70             POP      {R4-R6,PC}       ;; return
    117          
    118          /*********************************************************************//**
    119           * @brief 		Enable/disable System Tick counter
    120           * @param[in]	NewState	System Tick counter status, should be:
    121           * 					- ENABLE
    122           * 					- DISABLE
    123           * @return 		None
    124           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    125          void SYSTICK_Cmd(FunctionalState NewState)
    126          {
    127          	if(NewState == ENABLE)
   \                     SYSTICK_Cmd:
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2801             CMP      R0,#+1
   \   00000004   0xD106             BNE.N    ??SYSTICK_Cmd_0
    128          		//Enable System Tick counter
    129          		SysTick->CTRL |= ST_CTRL_ENABLE;
   \   00000006   0x....             LDR.N    R1,??DataTable5  ;; 0xe000e010
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0xF051 0x0101      ORRS     R1,R1,#0x1
   \   0000000E   0x....             LDR.N    R2,??DataTable5  ;; 0xe000e010
   \   00000010   0x6011             STR      R1,[R2, #+0]
   \   00000012   0xE005             B.N      ??SYSTICK_Cmd_1
    130          	else
    131          		//Disable System Tick counter
    132          		SysTick->CTRL &= ~ST_CTRL_ENABLE;
   \                     ??SYSTICK_Cmd_0:
   \   00000014   0x....             LDR.N    R1,??DataTable5  ;; 0xe000e010
   \   00000016   0x6809             LDR      R1,[R1, #+0]
   \   00000018   0x0849             LSRS     R1,R1,#+1
   \   0000001A   0x0049             LSLS     R1,R1,#+1
   \   0000001C   0x....             LDR.N    R2,??DataTable5  ;; 0xe000e010
   \   0000001E   0x6011             STR      R1,[R2, #+0]
    133          }
   \                     ??SYSTICK_Cmd_1:
   \   00000020   0x4770             BX       LR               ;; return
    134          
    135          /*********************************************************************//**
    136           * @brief 		Enable/disable System Tick interrupt
    137           * @param[in]	NewState	System Tick interrupt status, should be:
    138           * 					- ENABLE
    139           * 					- DISABLE
    140           * @return 		None
    141           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    142          void SYSTICK_IntCmd(FunctionalState NewState)
    143          {
    144          	if(NewState == ENABLE)
   \                     SYSTICK_IntCmd:
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2801             CMP      R0,#+1
   \   00000004   0xD106             BNE.N    ??SYSTICK_IntCmd_0
    145          		//Enable System Tick counter
    146          		SysTick->CTRL |= ST_CTRL_TICKINT;
   \   00000006   0x....             LDR.N    R1,??DataTable5  ;; 0xe000e010
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0xF051 0x0102      ORRS     R1,R1,#0x2
   \   0000000E   0x....             LDR.N    R2,??DataTable5  ;; 0xe000e010
   \   00000010   0x6011             STR      R1,[R2, #+0]
   \   00000012   0xE005             B.N      ??SYSTICK_IntCmd_1
    147          	else
    148          		//Disable System Tick counter
    149          		SysTick->CTRL &= ~ST_CTRL_TICKINT;
   \                     ??SYSTICK_IntCmd_0:
   \   00000014   0x....             LDR.N    R1,??DataTable5  ;; 0xe000e010
   \   00000016   0x6809             LDR      R1,[R1, #+0]
   \   00000018   0xF031 0x0102      BICS     R1,R1,#0x2
   \   0000001C   0x....             LDR.N    R2,??DataTable5  ;; 0xe000e010
   \   0000001E   0x6011             STR      R1,[R2, #+0]
    150          }
   \                     ??SYSTICK_IntCmd_1:
   \   00000020   0x4770             BX       LR               ;; return
    151          
    152          /*********************************************************************//**
    153           * @brief 		Get current value of System Tick counter
    154           * @param[in]	None
    155           * @return 		current value of System Tick counter
    156           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    157          uint32_t SYSTICK_GetCurrentValue(void)
    158          {
    159          	return (SysTick->CURR);
   \                     SYSTICK_GetCurrentValue:
   \   00000000   0x....             LDR.N    R0,??DataTable5_2  ;; 0xe000e018
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    160          }
    161          
    162          /*********************************************************************//**
    163           * @brief 		Clear Counter flag
    164           * @param[in]	None
    165           * @return 		None
    166           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    167          void SYSTICK_ClearCounterFlag(void)
    168          {
    169          	SysTick->CTRL &= ~ST_CTRL_COUNTFLAG;
   \                     SYSTICK_ClearCounterFlag:
   \   00000000   0x....             LDR.N    R0,??DataTable5  ;; 0xe000e010
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF430 0x3080      BICS     R0,R0,#0x10000
   \   00000008   0x....             LDR.N    R1,??DataTable5  ;; 0xe000e010
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    170          }
   \   0000000C   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0xE000E010         DC32     0xe000e010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0xE000E014         DC32     0xe000e014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0xE000E018         DC32     0xe000e018
    171          /**
    172           * @}
    173           */
    174          
    175          /**
    176           * @}
    177           */
    178          
    179          /* --------------------------------- End Of File ------------------------------ */
    180          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   SYSTICK_ClearCounterFlag
       0   SYSTICK_Cmd
      16   SYSTICK_ExternalInit
        16   -> __aeabi_cfcmple
        16   -> __aeabi_ui2f
       0   SYSTICK_GetCurrentValue
       0   SYSTICK_IntCmd
      16   SYSTICK_InternalInit
        16   -> CLKPWR_GetCLK
        16   -> __aeabi_cfcmple
        16   -> __aeabi_ui2f


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
      14  SYSTICK_ClearCounterFlag
      34  SYSTICK_Cmd
      94  SYSTICK_ExternalInit
       6  SYSTICK_GetCurrentValue
      34  SYSTICK_IntCmd
      82  SYSTICK_InternalInit

 
 276 bytes in section .text
 
 276 bytes of CODE memory

Errors: none
Warnings: none
