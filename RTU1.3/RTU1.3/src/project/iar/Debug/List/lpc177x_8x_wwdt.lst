###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.6.4896/W32 for ARM      11/Mar/2017  15:34:23 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\cmsis\Dri #
#                    vers\source\lpc177x_8x_wwdt.c                            #
#    Command line =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\cmsis\Dri #
#                    vers\source\lpc177x_8x_wwdt.c -lCN                       #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\Debug\List\ -o D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë #
#                    \RTU_1.2\project\iar\Debug\Obj\ --no_cse --no_unroll     #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5_2\arm\INC\c\DLib_Config_F #
#                    ull.h" -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2 #
#                    \project\iar\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\ #
#                    RTU_1.2\project\iar\..\..\BSP\ -I                        #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\ADC\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´ #
#                    úÂë\RTU_1.2\project\iar\..\..\BSP\RTC\ -I                #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\TILT\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\ #
#                    ´úÂë\RTU_1.2\project\iar\..\..\BSP\RDLevel\ -I           #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\RS232\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU #
#                    \´úÂë\RTU_1.2\project\iar\..\..\BSP\OS-v2\ -I            #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\BSP\VibrationString\ -I                         #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\ucos2\uCOS-II\Ports\ARM-Cortex-M3\Generic\IAR\  #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\ucos2\uCOS-II\Source\ -I                     #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\ucos2\uC-LIB\ -I D:\wangfan2\×ÀÃæ\receiverfirm\ #
#                    RTU\´úÂë\RTU_1.2\project\iar\..\..\ucos2\uC-CPU\ -I      #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\ucos2\uC-CPU\ARM-Cortex-M3\IAR\ -I              #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\cmsis\Drivers\source\ -I                        #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\cmsis\Drivers\include\ -I                       #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\app\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\ #
#                    RTU_1.2\project\iar\..\..\uC-Probe\Target\Plugins\uCOS-I #
#                    I\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\pro #
#                    ject\iar\..\..\uC-Probe\Target\Demos\Intro\Workspaces\   #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\uC-Probe\Target\Demos\Intro\Source\ -I       #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\uC-Probe\Target\Communication\Generic\Source\   #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\uC-Probe\Target\Communication\Generic\RS-232 #
#                    \Source\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1 #
#                    .2\project\iar\..\..\uC-Probe\Target\Communication\Gener #
#                    ic\RS-232\Ports\NXP\LPC17xx\ -I                          #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\uC-Probe\Target\Communication\Generic\RS-232\OS #
#                    \uCOS-II\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_ #
#                    1.2\project\iar\..\..\cmsis\Core\CM3\CoreSupport\ -I     #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\cmsis\Core\CM3\DeviceSupport\NXP\LPC177x_8x\    #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\HuaceApp\ -I D:\wangfan2\×ÀÃæ\receiverfirm\R #
#                    TU\´úÂë\RTU_1.2\project\iar\..\..\HuaceApp\DEVICE_BT\    #
#                    -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\projec #
#                    t\iar\..\..\HuaceApp\DEVICE_COM\ -I                      #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\DEVICE_GPRS\ -I                        #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\DEVICE_GPS\ -I                         #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\DEVICE_RADIO\ -I                       #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\iap\ -I D:\wangfan2\×ÀÃæ\receiverfirm\ #
#                    RTU\´úÂë\RTU_1.2\project\iar\..\..\FatFs\ -I             #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\USB\ -I D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\ #
#                    RTU_1.2\project\iar\..\..\bsp\spi_flash\ -I              #
#                    D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\..\..\HuaceApp\LED\ -On --use_c++_inline              #
#    List file    =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\Debug\List\lpc177x_8x_wwdt.lst                        #
#    Object file  =  D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\project\i #
#                    ar\Debug\Obj\lpc177x_8x_wwdt.o                           #
#                                                                             #
#                                                                             #
###############################################################################

D:\wangfan2\×ÀÃæ\receiverfirm\RTU\´úÂë\RTU_1.2\cmsis\Drivers\source\lpc177x_8x_wwdt.c
      1          /**********************************************************************
      2          * $Id$		lpc177x_8x_wwdt.c			2011-06-02
      3          *//**
      4          * @file		lpc177x_8x_wwdt.c
      5          * @brief	Contains all functions support for Wachtdog Timer
      6          *			firmware library on LPC177x_8x
      7          * @version	1.0
      8          * @date		02. June. 2011
      9          * @author	NXP MCU SW Application Team
     10          *
     11          * Copyright(C) 2011, NXP Semiconductor
     12          * All rights reserved.
     13          *
     14          ***********************************************************************
     15          * Software that is described herein is for illustrative purposes only
     16          * which provides customers with programming information regarding the
     17          * products. This software is supplied "AS IS" without any warranties.
     18          * NXP Semiconductors assumes no responsibility or liability for the
     19          * use of the software, conveys no license or title under any patent,
     20          * copyright, or mask work right to the product. NXP Semiconductors
     21          * reserves the right to make changes in the software without
     22          * notification. NXP Semiconductors also make no representation or
     23          * warranty that such application will be suitable for the specified
     24          * use without further testing or modification.
     25          **********************************************************************/
     26          
     27          /* Peripheral group ----------------------------------------------------------- */
     28          /** @addtogroup WWDT
     29           * @{
     30           */
     31          
     32          /* Includes ------------------------------------------------------------------- */
     33          #include "lpc177x_8x_wwdt.h"
     34          #include "lpc177x_8x_clkpwr.h"
     35          #include "lpc177x_8x_pinsel.h"
     36          
     37          
     38          /*********************************************************************//**
     39          * @brief
     40          * @param[in]
     41          *
     42          * @return
     43           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     44          uint8_t WWDT_SetTimeOutRaw(uint32_t timeoutVal)
     45          {
   \                     WWDT_SetTimeOutRaw:
   \   00000000   0x0001             MOVS     R1,R0
     46          	uint8_t retval = 0;
   \   00000002   0x2000             MOVS     R0,#+0
     47          
     48          	if(timeoutVal < WWDT_TIMEOUT_MIN)
   \   00000004   0x29FF             CMP      R1,#+255
   \   00000006   0xD204             BCS.N    ??WWDT_SetTimeOutRaw_0
     49          	{
     50          		timeoutVal = WWDT_TIMEOUT_MIN;
   \   00000008   0x22FF             MOVS     R2,#+255
   \   0000000A   0x0011             MOVS     R1,R2
     51          		retval = -1;
   \   0000000C   0x22FF             MOVS     R2,#+255
   \   0000000E   0x0010             MOVS     R0,R2
   \   00000010   0xE007             B.N      ??WWDT_SetTimeOutRaw_1
     52          	}
     53          	else if (timeoutVal > WWDT_TIMEOUT_MAX)
   \                     ??WWDT_SetTimeOutRaw_0:
   \   00000012   0xF1B1 0x7F80      CMP      R1,#+16777216
   \   00000016   0xD304             BCC.N    ??WWDT_SetTimeOutRaw_1
     54          	{
     55          		timeoutVal = WWDT_TIMEOUT_MAX;
   \   00000018   0xF07F 0x427F      MVNS     R2,#-16777216
   \   0000001C   0x0011             MOVS     R1,R2
     56          		retval = -1;
   \   0000001E   0x22FF             MOVS     R2,#+255
   \   00000020   0x0010             MOVS     R0,R2
     57          	}
     58          
     59          	LPC_WDT->TC = timeoutVal;
   \                     ??WWDT_SetTimeOutRaw_1:
   \   00000022   0x....             LDR.N    R2,??DataTable6  ;; 0x40000004
   \   00000024   0x6011             STR      R1,[R2, #+0]
     60          
     61          	return retval;
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0x4770             BX       LR               ;; return
     62          }
     63          
     64          /*********************************************************************//**
     65          * @brief
     66          * @param[in]
     67          *
     68          * @return
     69           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     70          uint8_t WWDT_SetTimeOut(uint32_t timeout)
     71          {
   \                     WWDT_SetTimeOut:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     72          	return WWDT_SetTimeOutRaw(WDT_GET_FROM_USEC(timeout));
   \   00000004   0x08E0             LSRS     R0,R4,#+3
   \   00000006   0x.... 0x....      BL       WWDT_SetTimeOutRaw
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return
     73          }
     74          
     75          /* Public Functions ----------------------------------------------------------- */
     76          /** @addtogroup WDT_Public_Functions
     77           * @{
     78           */
     79          
     80          /*********************************************************************//**
     81          * @brief 		Initial for Watchdog function
     82          * @param[in]	TimeOut time out value, should be in range:
     83          * 				2048 .. 134217728
     84          * @return 		None
     85           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     86          uint8_t WWDT_Init(uint32_t TimeOut)
     87          {
   \                     WWDT_Init:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     88          	return WWDT_SetTimeOut(TimeOut);
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       WWDT_SetTimeOut
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return
     89          }
     90          
     91          /*********************************************************************//**
     92          * @brief 		Enable/Disable WWDT activity
     93          * @param[in]	None
     94          * @return 		None
     95           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     96          void WWDT_Configure(st_Wdt_Config wdtCfg)
     97          {
   \                     WWDT_Configure:
   \   00000000   0xB50F             PUSH     {R0-R3,LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
     98          	WWDT_SetTimeOut(wdtCfg.wdtTmrConst);
   \   00000004   0x9802             LDR      R0,[SP, #+8]
   \   00000006   0x.... 0x....      BL       WWDT_SetTimeOut
     99          
    100          	if(wdtCfg.wdtEnable)
   \   0000000A   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD008             BEQ.N    ??WWDT_Configure_0
    101          	{
    102          		LPC_WDT->MOD |= WWDT_WDMOD_WDEN;
   \   00000012   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000001C   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000020   0x7008             STRB     R0,[R1, #+0]
   \   00000022   0xE007             B.N      ??WWDT_Configure_1
    103          	}
    104          	else
    105          	{
    106          		LPC_WDT->MOD &= ~WWDT_WDMOD_WDEN;
   \                     ??WWDT_Configure_0:
   \   00000024   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0xF010 0x00FE      ANDS     R0,R0,#0xFE
   \   0000002E   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000032   0x7008             STRB     R0,[R1, #+0]
    107          	}
    108          
    109          	if(wdtCfg.wdtReset)
   \                     ??WWDT_Configure_1:
   \   00000034   0xF89D 0x0005      LDRB     R0,[SP, #+5]
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xD008             BEQ.N    ??WWDT_Configure_2
    110          	{
    111          		LPC_WDT->MOD |= WWDT_WDMOD_WDRESET;
   \   0000003C   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000040   0x7800             LDRB     R0,[R0, #+0]
   \   00000042   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000046   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000004A   0x7008             STRB     R0,[R1, #+0]
   \   0000004C   0xE007             B.N      ??WWDT_Configure_3
    112          	}
    113          	else
    114          	{
    115          		LPC_WDT->MOD &= ~WWDT_WDMOD_WDRESET;
   \                     ??WWDT_Configure_2:
   \   0000004E   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000052   0x7800             LDRB     R0,[R0, #+0]
   \   00000054   0xF010 0x00FD      ANDS     R0,R0,#0xFD
   \   00000058   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000005C   0x7008             STRB     R0,[R1, #+0]
    116          	}
    117          
    118          	if(wdtCfg.wdtProtect)
   \                     ??WWDT_Configure_3:
   \   0000005E   0xF89D 0x0006      LDRB     R0,[SP, #+6]
   \   00000062   0x2800             CMP      R0,#+0
   \   00000064   0xD008             BEQ.N    ??WWDT_Configure_4
    119          	{
    120          		LPC_WDT->MOD |= WWDT_WDMOD_WDPROTECT;
   \   00000066   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000006A   0x7800             LDRB     R0,[R0, #+0]
   \   0000006C   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000070   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000074   0x7008             STRB     R0,[R1, #+0]
   \   00000076   0xE007             B.N      ??WWDT_Configure_5
    121          	}
    122          	else
    123          	{
    124          		LPC_WDT->MOD &= ~WWDT_WDMOD_WDPROTECT;
   \                     ??WWDT_Configure_4:
   \   00000078   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000007C   0x7800             LDRB     R0,[R0, #+0]
   \   0000007E   0xF010 0x00EF      ANDS     R0,R0,#0xEF
   \   00000082   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000086   0x7008             STRB     R0,[R1, #+0]
    125          	}
    126          
    127          	WWDT_SetWarning(wdtCfg.wdtWarningVal);
   \                     ??WWDT_Configure_5:
   \   00000088   0x9803             LDR      R0,[SP, #+12]
   \   0000008A   0x.... 0x....      BL       WWDT_SetWarning
    128          
    129          	WWDT_SetWindow(wdtCfg.wdtWindowVal);
   \   0000008E   0x9804             LDR      R0,[SP, #+16]
   \   00000090   0x.... 0x....      BL       WWDT_SetWindow
    130          }
   \   00000094   0xB005             ADD      SP,SP,#+20
   \   00000096   0xBD00             POP      {PC}             ;; return
    131          
    132          /*********************************************************************//**
    133          * @brief 		Enable/Disable WWDT activity
    134          * @param[in]	None
    135          * @return 		None
    136           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    137          uint8_t WWDT_Start(uint32_t TimeOut)
    138          {
   \                     WWDT_Start:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    139          	uint8_t retval = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    140          
    141          	retval = WWDT_SetTimeOut(TimeOut);
   \   00000006   0x0020             MOVS     R0,R4
   \   00000008   0x.... 0x....      BL       WWDT_SetTimeOut
   \   0000000C   0x0005             MOVS     R5,R0
    142          
    143          	WWDT_Cmd(ENABLE);
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x.... 0x....      BL       WWDT_Cmd
    144          
    145          	return retval;
   \   00000014   0x0028             MOVS     R0,R5
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    146          }
    147          
    148          
    149          /********************************************************************//**
    150           * @brief 		Update WDT timeout value and feed
    151           * @param[in]	WarnTime	time to generate watchdog warning interrupt(us)
    152           * 				should be in range: 2048 .. 134217728
    153           * @return		None
    154           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    155          void WWDT_SetTimerConstant(uint32_t constVal)
    156          {
    157          	LPC_WDT->TC = constVal;
   \                     WWDT_SetTimerConstant:
   \   00000000   0x....             LDR.N    R1,??DataTable6  ;; 0x40000004
   \   00000002   0x6008             STR      R0,[R1, #+0]
    158          }
   \   00000004   0x4770             BX       LR               ;; return
    159          
    160          
    161          /*********************************************************************//**
    162          * @brief 		Enable/Disable WDT function
    163          * @param[in]	Mode WWDT mode that will be enabled/disabled, should be:
    164          * 				- WWDT_PROTECT_MODE	: protect mode
    165          * 				- WWDT_RESET_MODE	: reset mode
    166          * @param[in]	NewState new state of protection function, should be:
    167          * 				- ENABLE: The watchdog reload value can be changed at any time
    168          * 				- DISABLE: The watchdog reload value can be changed only after
    169          * 						   the counter is below the value of WDWARNINT and WDWINDOW
    170          * @return 		None
    171           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    172          void WWDT_SetMode(uint8_t mode, FunctionalState NewState)
    173          {
    174          	if (mode == WWDT_PROTECT_MODE )
   \                     WWDT_SetMode:
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD114             BNE.N    ??WWDT_SetMode_0
    175          	{
    176          		if(NewState == ENABLE)
   \   00000006   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000008   0x2901             CMP      R1,#+1
   \   0000000A   0xD108             BNE.N    ??WWDT_SetMode_1
    177          			LPC_WDT->MOD |= WWDT_WDMOD_WDPROTECT;
   \   0000000C   0xF05F 0x4280      MOVS     R2,#+1073741824
   \   00000010   0x7812             LDRB     R2,[R2, #+0]
   \   00000012   0xF052 0x0210      ORRS     R2,R2,#0x10
   \   00000016   0xF05F 0x4380      MOVS     R3,#+1073741824
   \   0000001A   0x701A             STRB     R2,[R3, #+0]
   \   0000001C   0xE01F             B.N      ??WWDT_SetMode_2
    178          		else
    179          			LPC_WDT->MOD &= ~WWDT_WDMOD_WDPROTECT;
   \                     ??WWDT_SetMode_1:
   \   0000001E   0xF05F 0x4280      MOVS     R2,#+1073741824
   \   00000022   0x7812             LDRB     R2,[R2, #+0]
   \   00000024   0xF012 0x02EF      ANDS     R2,R2,#0xEF
   \   00000028   0xF05F 0x4380      MOVS     R3,#+1073741824
   \   0000002C   0x701A             STRB     R2,[R3, #+0]
   \   0000002E   0xE016             B.N      ??WWDT_SetMode_2
    180          	}
    181          	else if(mode == WWDT_RESET_MODE)
   \                     ??WWDT_SetMode_0:
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x2801             CMP      R0,#+1
   \   00000034   0xD113             BNE.N    ??WWDT_SetMode_2
    182          	{
    183          		if(NewState == ENABLE)
   \   00000036   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000038   0x2901             CMP      R1,#+1
   \   0000003A   0xD108             BNE.N    ??WWDT_SetMode_3
    184          			LPC_WDT->MOD |= WWDT_WDMOD_WDRESET;
   \   0000003C   0xF05F 0x4280      MOVS     R2,#+1073741824
   \   00000040   0x7812             LDRB     R2,[R2, #+0]
   \   00000042   0xF052 0x0202      ORRS     R2,R2,#0x2
   \   00000046   0xF05F 0x4380      MOVS     R3,#+1073741824
   \   0000004A   0x701A             STRB     R2,[R3, #+0]
   \   0000004C   0xE007             B.N      ??WWDT_SetMode_2
    185          		else
    186          			LPC_WDT->MOD &= ~WWDT_WDMOD_WDRESET;
   \                     ??WWDT_SetMode_3:
   \   0000004E   0xF05F 0x4280      MOVS     R2,#+1073741824
   \   00000052   0x7812             LDRB     R2,[R2, #+0]
   \   00000054   0xF012 0x02FD      ANDS     R2,R2,#0xFD
   \   00000058   0xF05F 0x4380      MOVS     R3,#+1073741824
   \   0000005C   0x701A             STRB     R2,[R3, #+0]
    187          	}
    188          }
   \                     ??WWDT_SetMode_2:
   \   0000005E   0x4770             BX       LR               ;; return
    189          
    190          /*********************************************************************//**
    191          * @brief 		Enable/Disable WWDT activity
    192          * @param[in]	None
    193          * @return 		None
    194           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    195          void WWDT_Enable(FunctionalState NewState)
    196          {
    197          	if(NewState == ENABLE)
   \                     WWDT_Enable:
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2801             CMP      R0,#+1
   \   00000004   0xD108             BNE.N    ??WWDT_Enable_0
    198          	{
    199          		LPC_WDT->MOD |= WWDT_WDMOD_WDEN;
   \   00000006   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000000A   0x7809             LDRB     R1,[R1, #+0]
   \   0000000C   0xF051 0x0101      ORRS     R1,R1,#0x1
   \   00000010   0xF05F 0x4280      MOVS     R2,#+1073741824
   \   00000014   0x7011             STRB     R1,[R2, #+0]
   \   00000016   0xE007             B.N      ??WWDT_Enable_1
    200          	}
    201          	else
    202          	{
    203          		LPC_WDT->MOD &= ~WWDT_WDMOD_WDEN;
   \                     ??WWDT_Enable_0:
   \   00000018   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000001C   0x7809             LDRB     R1,[R1, #+0]
   \   0000001E   0xF011 0x01FE      ANDS     R1,R1,#0xFE
   \   00000022   0xF05F 0x4280      MOVS     R2,#+1073741824
   \   00000026   0x7011             STRB     R1,[R2, #+0]
    204          	}
    205          }
   \                     ??WWDT_Enable_1:
   \   00000028   0x4770             BX       LR               ;; return
    206          
    207          /*********************************************************************//**
    208          * @brief 		Enable/Disable WWDT activity
    209          * @param[in]	None
    210          * @return 		None
    211           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    212          void WWDT_Cmd(FunctionalState NewState)
    213          {
   \                     WWDT_Cmd:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    214          	if(NewState == ENABLE)
   \   00000004   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000006   0x2C01             CMP      R4,#+1
   \   00000008   0xD10A             BNE.N    ??WWDT_Cmd_0
    215          	{
    216          		LPC_WDT->MOD |= WWDT_WDMOD_WDEN;
   \   0000000A   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000014   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000018   0x7008             STRB     R0,[R1, #+0]
    217          
    218          		//Load the Feed register to start using WDT
    219          		WWDT_Feed();
   \   0000001A   0x.... 0x....      BL       WWDT_Feed
   \   0000001E   0xE007             B.N      ??WWDT_Cmd_1
    220          	}
    221          	else
    222          	{
    223          		LPC_WDT->MOD &= ~WWDT_WDMOD_WDEN;
   \                     ??WWDT_Cmd_0:
   \   00000020   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000024   0x7800             LDRB     R0,[R0, #+0]
   \   00000026   0xF010 0x00FE      ANDS     R0,R0,#0xFE
   \   0000002A   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000002E   0x7008             STRB     R0,[R1, #+0]
    224          	}
    225          }
   \                     ??WWDT_Cmd_1:
   \   00000030   0xBD10             POP      {R4,PC}          ;; return
    226          
    227          /********************************************************************//**
    228           * @brief 		Update WDT timeout value and feed
    229           * @param[in]	warnVal	value will wrie directly to Window register w/o re-calc
    230           * @return		None
    231           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    232          uint8_t WWDT_SetWarningRaw(uint32_t warnVal)
    233          {
   \                     WWDT_SetWarningRaw:
   \   00000000   0x0001             MOVS     R1,R0
    234          	uint8_t retval = 0;
   \   00000002   0x2000             MOVS     R0,#+0
    235          
    236          	if(warnVal < WWDT_WARNINT_MIN)
   \   00000004   0x29FF             CMP      R1,#+255
   \   00000006   0xD204             BCS.N    ??WWDT_SetWarningRaw_0
    237          	{
    238          		warnVal = WWDT_WARNINT_MIN;
   \   00000008   0x22FF             MOVS     R2,#+255
   \   0000000A   0x0011             MOVS     R1,R2
    239          		retval = -1;
   \   0000000C   0x22FF             MOVS     R2,#+255
   \   0000000E   0x0010             MOVS     R0,R2
   \   00000010   0xE007             B.N      ??WWDT_SetWarningRaw_1
    240          	}
    241          	else if (warnVal > WWDT_WARNINT_MAX)
   \                     ??WWDT_SetWarningRaw_0:
   \   00000012   0xF5B1 0x6F80      CMP      R1,#+1024
   \   00000016   0xD304             BCC.N    ??WWDT_SetWarningRaw_1
    242          	{
    243          		warnVal = WWDT_WARNINT_MAX;
   \   00000018   0xF240 0x32FF      MOVW     R2,#+1023
   \   0000001C   0x0011             MOVS     R1,R2
    244          		retval = -1;
   \   0000001E   0x22FF             MOVS     R2,#+255
   \   00000020   0x0010             MOVS     R0,R2
    245          	}
    246          
    247          	LPC_WDT->WARNINT = warnVal;
   \                     ??WWDT_SetWarningRaw_1:
   \   00000022   0x....             LDR.N    R2,??DataTable6_1  ;; 0x40000014
   \   00000024   0x6011             STR      R1,[R2, #+0]
    248          
    249          	return retval;
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0x4770             BX       LR               ;; return
    250          }
    251          
    252          /********************************************************************//**
    253           * @brief 		Update WDT timeout value and feed
    254           * @param[in]	WarnTime	time to generate watchdog warning interrupt(us)
    255           * 				should be in range: 2048 .. 8192
    256           * @return		None
    257           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    258          uint8_t WWDT_SetWarning(uint32_t WarnTime)
    259          {
   \                     WWDT_SetWarning:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    260          	return WWDT_SetWarningRaw(WDT_GET_FROM_USEC(WarnTime));
   \   00000004   0x08E0             LSRS     R0,R4,#+3
   \   00000006   0x.... 0x....      BL       WWDT_SetWarningRaw
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return
    261          }
    262          
    263          
    264          /********************************************************************//**
    265           * @brief 		Update WDT timeout value and feed
    266           * @param[in]	wndVal	value will wrie directly to Window register w/o re-calc
    267           * @return		None
    268           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    269          uint8_t WWDT_SetWindowRaw(uint32_t wndVal)
    270          {
   \                     WWDT_SetWindowRaw:
   \   00000000   0x0001             MOVS     R1,R0
    271          	uint8_t retval = 0;
   \   00000002   0x2000             MOVS     R0,#+0
    272          
    273          	if(wndVal < WWDT_WINDOW_MIN)
   \   00000004   0x29FF             CMP      R1,#+255
   \   00000006   0xD204             BCS.N    ??WWDT_SetWindowRaw_0
    274          	{
    275          		wndVal = WWDT_WINDOW_MIN;
   \   00000008   0x22FF             MOVS     R2,#+255
   \   0000000A   0x0011             MOVS     R1,R2
    276          		retval = -1;
   \   0000000C   0x22FF             MOVS     R2,#+255
   \   0000000E   0x0010             MOVS     R0,R2
   \   00000010   0xE007             B.N      ??WWDT_SetWindowRaw_1
    277          	}
    278          	else if (wndVal > WWDT_WINDOW_MAX)
   \                     ??WWDT_SetWindowRaw_0:
   \   00000012   0xF1B1 0x7F80      CMP      R1,#+16777216
   \   00000016   0xD304             BCC.N    ??WWDT_SetWindowRaw_1
    279          	{
    280          		wndVal = WWDT_WINDOW_MAX;
   \   00000018   0xF07F 0x427F      MVNS     R2,#-16777216
   \   0000001C   0x0011             MOVS     R1,R2
    281          		retval = -1;
   \   0000001E   0x22FF             MOVS     R2,#+255
   \   00000020   0x0010             MOVS     R0,R2
    282          	}
    283          
    284          	LPC_WDT->WINDOW = wndVal;
   \                     ??WWDT_SetWindowRaw_1:
   \   00000022   0x....             LDR.N    R2,??DataTable6_2  ;; 0x40000018
   \   00000024   0x6011             STR      R1,[R2, #+0]
    285          
    286          	return retval;
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0x4770             BX       LR               ;; return
    287          }
    288          
    289          
    290          /********************************************************************//**
    291           * @brief 		Update WDT timeout value and feed
    292           * @param[in]	WindowedTime	expected time to set watchdog window event(us)
    293           * @return		None
    294           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    295          uint8_t WWDT_SetWindow(uint32_t WindowedTime)
    296          {
   \                     WWDT_SetWindow:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    297          	return WWDT_SetWindowRaw(WDT_GET_FROM_USEC(WindowedTime));
   \   00000004   0x08E0             LSRS     R0,R4,#+3
   \   00000006   0x.... 0x....      BL       WWDT_SetWindowRaw
   \   0000000A   0xBD10             POP      {R4,PC}          ;; return
    298          }
    299          /********************************************************************//**
    300           * @brief 		Update WDT timeout value and feed
    301           * @param[in]	TimeOut	TimeOut value to be updated, should be in range:
    302           * 				2048 .. 134217728
    303           * @return		None
    304           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    305          void WDT_UpdateTimeOut(uint32_t TimeOut)
    306          {
   \                     WDT_UpdateTimeOut:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    307          	/* check WDPROTECT,
    308          	 * if it is enable, wait until the counter is below the value of
    309          	 * WDWARNINT and WDWINDOW
    310          	 */
    311              uint32_t tv;
    312          	if(LPC_WDT->MOD & (1<<4))
   \   00000004   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0x06C0             LSLS     R0,R0,#+27
   \   0000000C   0xD512             BPL.N    ??WDT_UpdateTimeOut_0
    313          	{
    314                  tv = LPC_WDT->TV;
   \   0000000E   0x....             LDR.N    R0,??DataTable6_3  ;; 0x4000000c
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x0005             MOVS     R5,R0
    315          		while((tv <(LPC_WDT->WARNINT & WWDT_WDWARNINT_MASK))&&(tv <(LPC_WDT->WINDOW & WWDT_WDTC_MASK)))
   \                     ??WDT_UpdateTimeOut_1:
   \   00000014   0x....             LDR.N    R0,??DataTable6_1  ;; 0x40000014
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x0580             LSLS     R0,R0,#+22       ;; ZeroExtS R0,R0,#+22,#+22
   \   0000001A   0x0D80             LSRS     R0,R0,#+22
   \   0000001C   0x4285             CMP      R5,R0
   \   0000001E   0xD209             BCS.N    ??WDT_UpdateTimeOut_0
   \   00000020   0x....             LDR.N    R0,??DataTable6_2  ;; 0x40000018
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x0200             LSLS     R0,R0,#+8        ;; ZeroExtS R0,R0,#+8,#+8
   \   00000026   0x0A00             LSRS     R0,R0,#+8
   \   00000028   0x4285             CMP      R5,R0
   \   0000002A   0xD203             BCS.N    ??WDT_UpdateTimeOut_0
    316                  {
    317                      tv = LPC_WDT->TV;
   \   0000002C   0x....             LDR.N    R0,??DataTable6_3  ;; 0x4000000c
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x0005             MOVS     R5,R0
   \   00000032   0xE7EF             B.N      ??WDT_UpdateTimeOut_1
    318                  }
    319          	}
    320          
    321          	WWDT_SetTimeOut(TimeOut);
   \                     ??WDT_UpdateTimeOut_0:
   \   00000034   0x0020             MOVS     R0,R4
   \   00000036   0x.... 0x....      BL       WWDT_SetTimeOut
    322          }
   \   0000003A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    323          /********************************************************************//**
    324           * @brief 		Read WWDT status flag
    325           * @param[in]	Status kind of status flag that you want to get, should be:
    326           * 				- WWDT_WARNINT_FLAG: watchdog interrupt flag
    327           * 				- WWDT_TIMEOUT_FLAG: watchdog time-out flag
    328           * @return		Time out flag status of WDT
    329           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    330          FlagStatus WWDT_GetStatus (uint8_t Status)
    331          {
   \                     WWDT_GetStatus:
   \   00000000   0x0001             MOVS     R1,R0
    332          	if(Status == WWDT_WARNINT_FLAG)
   \   00000002   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000004   0x2900             CMP      R1,#+0
   \   00000006   0xD105             BNE.N    ??WWDT_GetStatus_0
    333          	{
    334          		return ((FlagStatus)(LPC_WDT->MOD & (1<<3)));
   \   00000008   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0xF010 0x0008      ANDS     R0,R0,#0x8
   \   00000012   0xE009             B.N      ??WWDT_GetStatus_1
    335          	}
    336          	else if (Status == WWDT_TIMEOUT_FLAG)
   \                     ??WWDT_GetStatus_0:
   \   00000014   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000016   0x2901             CMP      R1,#+1
   \   00000018   0xD105             BNE.N    ??WWDT_GetStatus_2
    337          	{
    338          		return ((FlagStatus)(LPC_WDT->MOD & (1<<2)));
   \   0000001A   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000001E   0x7800             LDRB     R0,[R0, #+0]
   \   00000020   0xF010 0x0004      ANDS     R0,R0,#0x4
   \   00000024   0xE000             B.N      ??WWDT_GetStatus_1
    339          	}
    340              return RESET;
   \                     ??WWDT_GetStatus_2:
   \   00000026   0x2000             MOVS     R0,#+0
   \                     ??WWDT_GetStatus_1:
   \   00000028   0x4770             BX       LR               ;; return
    341          }
    342          
    343          /********************************************************************//**
    344           * @brief 		Read WWDT status flag
    345           * @param[in]	Status kind of status flag that you want to get, should be:
    346           * 				- WWDT_WARNINT_FLAG: watchdog interrupt flag
    347           * 				- WWDT_TIMEOUT_FLAG: watchdog time-out flag
    348           * @return		Time out flag status of WDT
    349           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    350          void WWDT_ClearStatusFlag (uint8_t flag)
    351          {
    352          	if(flag == WWDT_WARNINT_FLAG)
   \                     WWDT_ClearStatusFlag:
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD108             BNE.N    ??WWDT_ClearStatusFlag_0
    353          	{
    354          		// Write 1 to this bit to clear itself
    355          		LPC_WDT->MOD |= WWDT_WDMOD_WDINT;
   \   00000006   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000000A   0x7809             LDRB     R1,[R1, #+0]
   \   0000000C   0xF051 0x0108      ORRS     R1,R1,#0x8
   \   00000010   0xF05F 0x4280      MOVS     R2,#+1073741824
   \   00000014   0x7011             STRB     R1,[R2, #+0]
   \   00000016   0xE00A             B.N      ??WWDT_ClearStatusFlag_1
    356          	}
    357          	else if(flag == WWDT_TIMEOUT_FLAG)
   \                     ??WWDT_ClearStatusFlag_0:
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x2801             CMP      R0,#+1
   \   0000001C   0xD107             BNE.N    ??WWDT_ClearStatusFlag_1
    358          	{
    359          		// Write 0 to this bit to clear itself
    360          		LPC_WDT->MOD &= ~ WWDT_WDMOD_WDTOF;
   \   0000001E   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000022   0x7809             LDRB     R1,[R1, #+0]
   \   00000024   0xF011 0x01FB      ANDS     R1,R1,#0xFB
   \   00000028   0xF05F 0x4280      MOVS     R2,#+1073741824
   \   0000002C   0x7011             STRB     R1,[R2, #+0]
    361          	}
    362          }
   \                     ??WWDT_ClearStatusFlag_1:
   \   0000002E   0x4770             BX       LR               ;; return
    363          
    364          /********************************************************************//**
    365           * @brief 		Clear WDT Time out flag
    366           * @param[in]	None
    367           * @return		None
    368           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    369          void WWDT_ClrTimeOutFlag (void)
    370          {
    371          	LPC_WDT->MOD &= ~ WWDT_WDMOD_WDTOF;
   \                     WWDT_ClrTimeOutFlag:
   \   00000000   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0xF010 0x00FB      ANDS     R0,R0,#0xFB
   \   0000000A   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000000E   0x7008             STRB     R0,[R1, #+0]
    372          }
   \   00000010   0x4770             BX       LR               ;; return
    373          
    374          
    375          /********************************************************************//**
    376           * @brief 		Following the standard sequence to Feed the WatchDog Timer
    377           *
    378           * @param[in]	None
    379           *
    380           * @return		None
    381           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    382          void WWDT_FeedStdSeq (void)
    383          {
    384          	LPC_WDT->FEED = 0xAA;
   \                     WWDT_FeedStdSeq:
   \   00000000   0x....             LDR.N    R0,??DataTable6_4  ;; 0x40000008
   \   00000002   0x21AA             MOVS     R1,#+170
   \   00000004   0x7001             STRB     R1,[R0, #+0]
    385          
    386          	LPC_WDT->FEED = 0x55;
   \   00000006   0x....             LDR.N    R0,??DataTable6_4  ;; 0x40000008
   \   00000008   0x2155             MOVS     R1,#+85
   \   0000000A   0x7001             STRB     R1,[R0, #+0]
    387          }
   \   0000000C   0x4770             BX       LR               ;; return
    388          
    389          /********************************************************************//**
    390           * @brief 		After set WDTEN, call this function to start Watchdog
    391           * 				or reload the Watchdog timer
    392           * @param[in]	None
    393           *
    394           * @return		None
    395           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    396          void WWDT_Feed (void)
    397          {
   \                     WWDT_Feed:
   \   00000000   0xB580             PUSH     {R7,LR}
    398          	// Disable irq interrupt
    399          	__disable_irq();
   \   00000002   0xB672             CPSID    I
    400          
    401          	WWDT_FeedStdSeq();
   \   00000004   0x.... 0x....      BL       WWDT_FeedStdSeq
    402          
    403          	// Then enable irq interrupt
    404          	__enable_irq();
   \   00000008   0xB662             CPSIE    I
    405          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
    406          
    407          /********************************************************************//**
    408           * @brief 		Get the current value of WDT
    409           * @param[in]	None
    410           * @return		current value of WDT
    411           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    412          uint32_t WWDT_GetCurrentCount(void)
    413          {
    414          	return LPC_WDT->TV;
   \                     WWDT_GetCurrentCount:
   \   00000000   0x....             LDR.N    R0,??DataTable6_3  ;; 0x4000000c
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    415          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x40000004         DC32     0x40000004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x40000014         DC32     0x40000014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x40000018         DC32     0x40000018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x4000000C         DC32     0x4000000c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x40000008         DC32     0x40000008
    416          
    417          /**
    418           * @}
    419           */
    420          
    421          
    422          /**
    423           * @}
    424           */
    425          
    426          /* --------------------------------- End Of File ------------------------------ */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   WDT_UpdateTimeOut
        16   -> WWDT_SetTimeOut
       0   WWDT_ClearStatusFlag
       0   WWDT_ClrTimeOutFlag
       8   WWDT_Cmd
         8   -> WWDT_Feed
      24   WWDT_Configure
        24   -> WWDT_SetTimeOut
        24   -> WWDT_SetWarning
        24   -> WWDT_SetWindow
       0   WWDT_Enable
       8   WWDT_Feed
         8   -> WWDT_FeedStdSeq
       0   WWDT_FeedStdSeq
       0   WWDT_GetCurrentCount
       0   WWDT_GetStatus
       8   WWDT_Init
         8   -> WWDT_SetTimeOut
       0   WWDT_SetMode
       8   WWDT_SetTimeOut
         8   -> WWDT_SetTimeOutRaw
       0   WWDT_SetTimeOutRaw
       0   WWDT_SetTimerConstant
       8   WWDT_SetWarning
         8   -> WWDT_SetWarningRaw
       0   WWDT_SetWarningRaw
       8   WWDT_SetWindow
         8   -> WWDT_SetWindowRaw
       0   WWDT_SetWindowRaw
      16   WWDT_Start
        16   -> WWDT_Cmd
        16   -> WWDT_SetTimeOut


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
      60  WDT_UpdateTimeOut
      48  WWDT_ClearStatusFlag
      18  WWDT_ClrTimeOutFlag
      50  WWDT_Cmd
     152  WWDT_Configure
      42  WWDT_Enable
      12  WWDT_Feed
      14  WWDT_FeedStdSeq
       6  WWDT_GetCurrentCount
      42  WWDT_GetStatus
      12  WWDT_Init
      96  WWDT_SetMode
      12  WWDT_SetTimeOut
      42  WWDT_SetTimeOutRaw
       6  WWDT_SetTimerConstant
      12  WWDT_SetWarning
      42  WWDT_SetWarningRaw
      12  WWDT_SetWindow
      42  WWDT_SetWindowRaw
      26  WWDT_Start

 
 766 bytes in section .text
 
 766 bytes of CODE memory

Errors: none
Warnings: none
